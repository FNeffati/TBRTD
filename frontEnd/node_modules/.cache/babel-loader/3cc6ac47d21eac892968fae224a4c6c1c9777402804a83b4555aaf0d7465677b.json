{"ast":null,"code":"// Word cloud layout by Jason Davies, https://www.jasondavies.com/wordcloud/\n// Algorithm due to Jonathan Feinberg, https://s3.amazonaws.com/static.mrfeinberg.com/bv_ch03.pdf\n\nconst dispatch = require(\"d3-dispatch\").dispatch;\nconst RADIANS = Math.PI / 180;\nconst SPIRALS = {\n  archimedean: archimedeanSpiral,\n  rectangular: rectangularSpiral\n};\nconst cw = 1 << 11 >> 5;\nconst ch = 1 << 11;\nmodule.exports = function () {\n  var size = [256, 256],\n    text = cloudText,\n    font = cloudFont,\n    fontSize = cloudFontSize,\n    fontStyle = cloudFontNormal,\n    fontWeight = cloudFontNormal,\n    rotate = cloudRotate,\n    padding = cloudPadding,\n    spiral = archimedeanSpiral,\n    words = [],\n    timeInterval = Infinity,\n    event = dispatch(\"word\", \"end\"),\n    timer = null,\n    random = Math.random,\n    cloud = {},\n    canvas = cloudCanvas;\n  cloud.canvas = function (_) {\n    return arguments.length ? (canvas = functor(_), cloud) : canvas;\n  };\n  cloud.start = function () {\n    var contextAndRatio = getContext(canvas()),\n      board = zeroArray((size[0] >> 5) * size[1]),\n      bounds = null,\n      n = words.length,\n      i = -1,\n      tags = [],\n      data = words.map(function (d, i) {\n        d.text = text.call(this, d, i);\n        d.font = font.call(this, d, i);\n        d.style = fontStyle.call(this, d, i);\n        d.weight = fontWeight.call(this, d, i);\n        d.rotate = rotate.call(this, d, i);\n        d.size = ~~fontSize.call(this, d, i);\n        d.padding = padding.call(this, d, i);\n        return d;\n      }).sort(function (a, b) {\n        return b.size - a.size;\n      });\n    if (timer) clearInterval(timer);\n    timer = setInterval(step, 0);\n    step();\n    return cloud;\n    function step() {\n      var start = Date.now();\n      while (Date.now() - start < timeInterval && ++i < n && timer) {\n        var d = data[i];\n        d.x = size[0] * (random() + .5) >> 1;\n        d.y = size[1] * (random() + .5) >> 1;\n        cloudSprite(contextAndRatio, d, data, i);\n        if (d.hasText && place(board, d, bounds)) {\n          tags.push(d);\n          event.call(\"word\", cloud, d);\n          if (bounds) cloudBounds(bounds, d);else bounds = [{\n            x: d.x + d.x0,\n            y: d.y + d.y0\n          }, {\n            x: d.x + d.x1,\n            y: d.y + d.y1\n          }];\n          // Temporary hack\n          d.x -= size[0] >> 1;\n          d.y -= size[1] >> 1;\n        }\n      }\n      if (i >= n) {\n        cloud.stop();\n        event.call(\"end\", cloud, tags, bounds);\n      }\n    }\n  };\n  cloud.stop = function () {\n    if (timer) {\n      clearInterval(timer);\n      timer = null;\n    }\n    for (const d of words) {\n      delete d.sprite;\n    }\n    return cloud;\n  };\n  function getContext(canvas) {\n    const context = canvas.getContext(\"2d\", {\n      willReadFrequently: true\n    });\n    canvas.width = canvas.height = 1;\n    const ratio = Math.sqrt(context.getImageData(0, 0, 1, 1).data.length >> 2);\n    canvas.width = (cw << 5) / ratio;\n    canvas.height = ch / ratio;\n    context.fillStyle = context.strokeStyle = \"red\";\n    return {\n      context,\n      ratio\n    };\n  }\n  function place(board, tag, bounds) {\n    var perimeter = [{\n        x: 0,\n        y: 0\n      }, {\n        x: size[0],\n        y: size[1]\n      }],\n      startX = tag.x,\n      startY = tag.y,\n      maxDelta = Math.sqrt(size[0] * size[0] + size[1] * size[1]),\n      s = spiral(size),\n      dt = random() < .5 ? 1 : -1,\n      t = -dt,\n      dxdy,\n      dx,\n      dy;\n    while (dxdy = s(t += dt)) {\n      dx = ~~dxdy[0];\n      dy = ~~dxdy[1];\n      if (Math.min(Math.abs(dx), Math.abs(dy)) >= maxDelta) break;\n      tag.x = startX + dx;\n      tag.y = startY + dy;\n      if (tag.x + tag.x0 < 0 || tag.y + tag.y0 < 0 || tag.x + tag.x1 > size[0] || tag.y + tag.y1 > size[1]) continue;\n      // TODO only check for collisions within current bounds.\n      if (!bounds || collideRects(tag, bounds)) {\n        if (!cloudCollide(tag, board, size[0])) {\n          var sprite = tag.sprite,\n            w = tag.width >> 5,\n            sw = size[0] >> 5,\n            lx = tag.x - (w << 4),\n            sx = lx & 0x7f,\n            msx = 32 - sx,\n            h = tag.y1 - tag.y0,\n            x = (tag.y + tag.y0) * sw + (lx >> 5),\n            last;\n          for (var j = 0; j < h; j++) {\n            last = 0;\n            for (var i = 0; i <= w; i++) {\n              board[x + i] |= last << msx | (i < w ? (last = sprite[j * w + i]) >>> sx : 0);\n            }\n            x += sw;\n          }\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  cloud.timeInterval = function (_) {\n    return arguments.length ? (timeInterval = _ == null ? Infinity : _, cloud) : timeInterval;\n  };\n  cloud.words = function (_) {\n    return arguments.length ? (words = _, cloud) : words;\n  };\n  cloud.size = function (_) {\n    return arguments.length ? (size = [+_[0], +_[1]], cloud) : size;\n  };\n  cloud.font = function (_) {\n    return arguments.length ? (font = functor(_), cloud) : font;\n  };\n  cloud.fontStyle = function (_) {\n    return arguments.length ? (fontStyle = functor(_), cloud) : fontStyle;\n  };\n  cloud.fontWeight = function (_) {\n    return arguments.length ? (fontWeight = functor(_), cloud) : fontWeight;\n  };\n  cloud.rotate = function (_) {\n    return arguments.length ? (rotate = functor(_), cloud) : rotate;\n  };\n  cloud.text = function (_) {\n    return arguments.length ? (text = functor(_), cloud) : text;\n  };\n  cloud.spiral = function (_) {\n    return arguments.length ? (spiral = SPIRALS[_] || _, cloud) : spiral;\n  };\n  cloud.fontSize = function (_) {\n    return arguments.length ? (fontSize = functor(_), cloud) : fontSize;\n  };\n  cloud.padding = function (_) {\n    return arguments.length ? (padding = functor(_), cloud) : padding;\n  };\n  cloud.random = function (_) {\n    return arguments.length ? (random = _, cloud) : random;\n  };\n  cloud.on = function () {\n    var value = event.on.apply(event, arguments);\n    return value === event ? cloud : value;\n  };\n  return cloud;\n};\nfunction cloudText(d) {\n  return d.text;\n}\nfunction cloudFont() {\n  return \"serif\";\n}\nfunction cloudFontNormal() {\n  return \"normal\";\n}\nfunction cloudFontSize(d) {\n  return Math.sqrt(d.value);\n}\nfunction cloudRotate() {\n  return (~~(random() * 6) - 3) * 30;\n}\nfunction cloudPadding() {\n  return 1;\n}\n\n// Fetches a monochrome sprite bitmap for the specified text.\n// Load in batches for speed.\nfunction cloudSprite(contextAndRatio, d, data, di) {\n  if (d.sprite) return;\n  var c = contextAndRatio.context,\n    ratio = contextAndRatio.ratio;\n  c.clearRect(0, 0, (cw << 5) / ratio, ch / ratio);\n  var x = 0,\n    y = 0,\n    maxh = 0,\n    n = data.length;\n  --di;\n  while (++di < n) {\n    d = data[di];\n    c.save();\n    c.font = d.style + \" \" + d.weight + \" \" + ~~((d.size + 1) / ratio) + \"px \" + d.font;\n    const metrics = c.measureText(d.text);\n    const anchor = -Math.floor(metrics.width / 2);\n    let w = (metrics.width + 1) * ratio;\n    let h = d.size << 1;\n    if (d.rotate) {\n      var sr = Math.sin(d.rotate * RADIANS),\n        cr = Math.cos(d.rotate * RADIANS),\n        wcr = w * cr,\n        wsr = w * sr,\n        hcr = h * cr,\n        hsr = h * sr;\n      w = Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 0x1f >> 5 << 5;\n      h = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));\n    } else {\n      w = w + 0x1f >> 5 << 5;\n    }\n    if (h > maxh) maxh = h;\n    if (x + w >= cw << 5) {\n      x = 0;\n      y += maxh;\n      maxh = 0;\n    }\n    if (y + h >= ch) break;\n    c.translate((x + (w >> 1)) / ratio, (y + (h >> 1)) / ratio);\n    if (d.rotate) c.rotate(d.rotate * RADIANS);\n    c.fillText(d.text, anchor, 0);\n    if (d.padding) c.lineWidth = 2 * d.padding, c.strokeText(d.text, anchor, 0);\n    c.restore();\n    d.width = w;\n    d.height = h;\n    d.xoff = x;\n    d.yoff = y;\n    d.x1 = w >> 1;\n    d.y1 = h >> 1;\n    d.x0 = -d.x1;\n    d.y0 = -d.y1;\n    d.hasText = true;\n    x += w;\n  }\n  var pixels = c.getImageData(0, 0, (cw << 5) / ratio, ch / ratio).data,\n    sprite = [];\n  while (--di >= 0) {\n    d = data[di];\n    if (!d.hasText) continue;\n    var w = d.width,\n      w32 = w >> 5,\n      h = d.y1 - d.y0;\n    // Zero the buffer\n    for (var i = 0; i < h * w32; i++) sprite[i] = 0;\n    x = d.xoff;\n    if (x == null) return;\n    y = d.yoff;\n    var seen = 0,\n      seenRow = -1;\n    for (var j = 0; j < h; j++) {\n      for (var i = 0; i < w; i++) {\n        var k = w32 * j + (i >> 5),\n          m = pixels[(y + j) * (cw << 5) + (x + i) << 2] ? 1 << 31 - i % 32 : 0;\n        sprite[k] |= m;\n        seen |= m;\n      }\n      if (seen) seenRow = j;else {\n        d.y0++;\n        h--;\n        j--;\n        y++;\n      }\n    }\n    d.y1 = d.y0 + seenRow;\n    d.sprite = sprite.slice(0, (d.y1 - d.y0) * w32);\n  }\n}\n\n// Use mask-based collision detection.\nfunction cloudCollide(tag, board, sw) {\n  sw >>= 5;\n  var sprite = tag.sprite,\n    w = tag.width >> 5,\n    lx = tag.x - (w << 4),\n    sx = lx & 0x7f,\n    msx = 32 - sx,\n    h = tag.y1 - tag.y0,\n    x = (tag.y + tag.y0) * sw + (lx >> 5),\n    last;\n  for (var j = 0; j < h; j++) {\n    last = 0;\n    for (var i = 0; i <= w; i++) {\n      if ((last << msx | (i < w ? (last = sprite[j * w + i]) >>> sx : 0)) & board[x + i]) return true;\n    }\n    x += sw;\n  }\n  return false;\n}\nfunction cloudBounds(bounds, d) {\n  var b0 = bounds[0],\n    b1 = bounds[1];\n  if (d.x + d.x0 < b0.x) b0.x = d.x + d.x0;\n  if (d.y + d.y0 < b0.y) b0.y = d.y + d.y0;\n  if (d.x + d.x1 > b1.x) b1.x = d.x + d.x1;\n  if (d.y + d.y1 > b1.y) b1.y = d.y + d.y1;\n}\nfunction collideRects(a, b) {\n  return a.x + a.x1 > b[0].x && a.x + a.x0 < b[1].x && a.y + a.y1 > b[0].y && a.y + a.y0 < b[1].y;\n}\nfunction archimedeanSpiral(size) {\n  var e = size[0] / size[1];\n  return function (t) {\n    return [e * (t *= .1) * Math.cos(t), t * Math.sin(t)];\n  };\n}\nfunction rectangularSpiral(size) {\n  var dy = 4,\n    dx = dy * size[0] / size[1],\n    x = 0,\n    y = 0;\n  return function (t) {\n    var sign = t < 0 ? -1 : 1;\n    // See triangular numbers: T_n = n * (n + 1) / 2.\n    switch (Math.sqrt(1 + 4 * sign * t) - sign & 3) {\n      case 0:\n        x += dx;\n        break;\n      case 1:\n        y += dy;\n        break;\n      case 2:\n        x -= dx;\n        break;\n      default:\n        y -= dy;\n        break;\n    }\n    return [x, y];\n  };\n}\n\n// TODO reuse arrays?\nfunction zeroArray(n) {\n  var a = [],\n    i = -1;\n  while (++i < n) a[i] = 0;\n  return a;\n}\nfunction cloudCanvas() {\n  return document.createElement(\"canvas\");\n}\nfunction functor(d) {\n  return typeof d === \"function\" ? d : function () {\n    return d;\n  };\n}","map":{"version":3,"names":["dispatch","require","RADIANS","Math","PI","SPIRALS","archimedean","archimedeanSpiral","rectangular","rectangularSpiral","cw","ch","module","exports","size","text","cloudText","font","cloudFont","fontSize","cloudFontSize","fontStyle","cloudFontNormal","fontWeight","rotate","cloudRotate","padding","cloudPadding","spiral","words","timeInterval","Infinity","event","timer","random","cloud","canvas","cloudCanvas","_","arguments","length","functor","start","contextAndRatio","getContext","board","zeroArray","bounds","n","i","tags","data","map","d","call","style","weight","sort","a","b","clearInterval","setInterval","step","Date","now","x","y","cloudSprite","hasText","place","push","cloudBounds","x0","y0","x1","y1","stop","sprite","context","willReadFrequently","width","height","ratio","sqrt","getImageData","fillStyle","strokeStyle","tag","perimeter","startX","startY","maxDelta","s","dt","t","dxdy","dx","dy","min","abs","collideRects","cloudCollide","w","sw","lx","sx","msx","h","last","j","on","value","apply","di","c","clearRect","maxh","save","metrics","measureText","anchor","floor","sr","sin","cr","cos","wcr","wsr","hcr","hsr","max","translate","fillText","lineWidth","strokeText","restore","xoff","yoff","pixels","w32","seen","seenRow","k","m","slice","b0","b1","e","sign","document","createElement"],"sources":["/Users/fneffati/Documents/Classes/TBENVDASH/node_modules/d3-cloud/index.js"],"sourcesContent":["// Word cloud layout by Jason Davies, https://www.jasondavies.com/wordcloud/\n// Algorithm due to Jonathan Feinberg, https://s3.amazonaws.com/static.mrfeinberg.com/bv_ch03.pdf\n\nconst dispatch = require(\"d3-dispatch\").dispatch;\n\nconst RADIANS = Math.PI / 180;\n\nconst SPIRALS = {\n  archimedean: archimedeanSpiral,\n  rectangular: rectangularSpiral\n};\n\nconst cw = 1 << 11 >> 5;\nconst ch = 1 << 11;\n\nmodule.exports = function() {\n  var size = [256, 256],\n      text = cloudText,\n      font = cloudFont,\n      fontSize = cloudFontSize,\n      fontStyle = cloudFontNormal,\n      fontWeight = cloudFontNormal,\n      rotate = cloudRotate,\n      padding = cloudPadding,\n      spiral = archimedeanSpiral,\n      words = [],\n      timeInterval = Infinity,\n      event = dispatch(\"word\", \"end\"),\n      timer = null,\n      random = Math.random,\n      cloud = {},\n      canvas = cloudCanvas;\n\n  cloud.canvas = function(_) {\n    return arguments.length ? (canvas = functor(_), cloud) : canvas;\n  };\n\n  cloud.start = function() {\n    var contextAndRatio = getContext(canvas()),\n        board = zeroArray((size[0] >> 5) * size[1]),\n        bounds = null,\n        n = words.length,\n        i = -1,\n        tags = [],\n        data = words.map(function(d, i) {\n          d.text = text.call(this, d, i);\n          d.font = font.call(this, d, i);\n          d.style = fontStyle.call(this, d, i);\n          d.weight = fontWeight.call(this, d, i);\n          d.rotate = rotate.call(this, d, i);\n          d.size = ~~fontSize.call(this, d, i);\n          d.padding = padding.call(this, d, i);\n          return d;\n        }).sort(function(a, b) { return b.size - a.size; });\n\n    if (timer) clearInterval(timer);\n    timer = setInterval(step, 0);\n    step();\n\n    return cloud;\n\n    function step() {\n      var start = Date.now();\n      while (Date.now() - start < timeInterval && ++i < n && timer) {\n        var d = data[i];\n        d.x = (size[0] * (random() + .5)) >> 1;\n        d.y = (size[1] * (random() + .5)) >> 1;\n        cloudSprite(contextAndRatio, d, data, i);\n        if (d.hasText && place(board, d, bounds)) {\n          tags.push(d);\n          event.call(\"word\", cloud, d);\n          if (bounds) cloudBounds(bounds, d);\n          else bounds = [{x: d.x + d.x0, y: d.y + d.y0}, {x: d.x + d.x1, y: d.y + d.y1}];\n          // Temporary hack\n          d.x -= size[0] >> 1;\n          d.y -= size[1] >> 1;\n        }\n      }\n      if (i >= n) {\n        cloud.stop();\n        event.call(\"end\", cloud, tags, bounds);\n      }\n    }\n  }\n\n  cloud.stop = function() {\n    if (timer) {\n      clearInterval(timer);\n      timer = null;\n    }\n    for (const d of words) {\n      delete d.sprite;\n    }\n    return cloud;\n  };\n\n  function getContext(canvas) {\n    const context = canvas.getContext(\"2d\", {willReadFrequently: true});\n\n    canvas.width = canvas.height = 1;\n    const ratio = Math.sqrt(context.getImageData(0, 0, 1, 1).data.length >> 2);\n    canvas.width = (cw << 5) / ratio;\n    canvas.height = ch / ratio;\n\n    context.fillStyle = context.strokeStyle = \"red\";\n\n    return {context, ratio};\n  }\n\n  function place(board, tag, bounds) {\n    var perimeter = [{x: 0, y: 0}, {x: size[0], y: size[1]}],\n        startX = tag.x,\n        startY = tag.y,\n        maxDelta = Math.sqrt(size[0] * size[0] + size[1] * size[1]),\n        s = spiral(size),\n        dt = random() < .5 ? 1 : -1,\n        t = -dt,\n        dxdy,\n        dx,\n        dy;\n\n    while (dxdy = s(t += dt)) {\n      dx = ~~dxdy[0];\n      dy = ~~dxdy[1];\n\n      if (Math.min(Math.abs(dx), Math.abs(dy)) >= maxDelta) break;\n\n      tag.x = startX + dx;\n      tag.y = startY + dy;\n\n      if (tag.x + tag.x0 < 0 || tag.y + tag.y0 < 0 ||\n          tag.x + tag.x1 > size[0] || tag.y + tag.y1 > size[1]) continue;\n      // TODO only check for collisions within current bounds.\n      if (!bounds || collideRects(tag, bounds)) {\n        if (!cloudCollide(tag, board, size[0])) {\n          var sprite = tag.sprite,\n              w = tag.width >> 5,\n              sw = size[0] >> 5,\n              lx = tag.x - (w << 4),\n              sx = lx & 0x7f,\n              msx = 32 - sx,\n              h = tag.y1 - tag.y0,\n              x = (tag.y + tag.y0) * sw + (lx >> 5),\n              last;\n          for (var j = 0; j < h; j++) {\n            last = 0;\n            for (var i = 0; i <= w; i++) {\n              board[x + i] |= (last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0);\n            }\n            x += sw;\n          }\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  cloud.timeInterval = function(_) {\n    return arguments.length ? (timeInterval = _ == null ? Infinity : _, cloud) : timeInterval;\n  };\n\n  cloud.words = function(_) {\n    return arguments.length ? (words = _, cloud) : words;\n  };\n\n  cloud.size = function(_) {\n    return arguments.length ? (size = [+_[0], +_[1]], cloud) : size;\n  };\n\n  cloud.font = function(_) {\n    return arguments.length ? (font = functor(_), cloud) : font;\n  };\n\n  cloud.fontStyle = function(_) {\n    return arguments.length ? (fontStyle = functor(_), cloud) : fontStyle;\n  };\n\n  cloud.fontWeight = function(_) {\n    return arguments.length ? (fontWeight = functor(_), cloud) : fontWeight;\n  };\n\n  cloud.rotate = function(_) {\n    return arguments.length ? (rotate = functor(_), cloud) : rotate;\n  };\n\n  cloud.text = function(_) {\n    return arguments.length ? (text = functor(_), cloud) : text;\n  };\n\n  cloud.spiral = function(_) {\n    return arguments.length ? (spiral = SPIRALS[_] || _, cloud) : spiral;\n  };\n\n  cloud.fontSize = function(_) {\n    return arguments.length ? (fontSize = functor(_), cloud) : fontSize;\n  };\n\n  cloud.padding = function(_) {\n    return arguments.length ? (padding = functor(_), cloud) : padding;\n  };\n\n  cloud.random = function(_) {\n    return arguments.length ? (random = _, cloud) : random;\n  };\n\n  cloud.on = function() {\n    var value = event.on.apply(event, arguments);\n    return value === event ? cloud : value;\n  };\n\n  return cloud;\n};\n\nfunction cloudText(d) {\n  return d.text;\n}\n\nfunction cloudFont() {\n  return \"serif\";\n}\n\nfunction cloudFontNormal() {\n  return \"normal\";\n}\n\nfunction cloudFontSize(d) {\n  return Math.sqrt(d.value);\n}\n\nfunction cloudRotate() {\n  return (~~(random() * 6) - 3) * 30;\n}\n\nfunction cloudPadding() {\n  return 1;\n}\n\n// Fetches a monochrome sprite bitmap for the specified text.\n// Load in batches for speed.\nfunction cloudSprite(contextAndRatio, d, data, di) {\n  if (d.sprite) return;\n  var c = contextAndRatio.context,\n      ratio = contextAndRatio.ratio;\n\n  c.clearRect(0, 0, (cw << 5) / ratio, ch / ratio);\n  var x = 0,\n      y = 0,\n      maxh = 0,\n      n = data.length;\n  --di;\n  while (++di < n) {\n    d = data[di];\n    c.save();\n    c.font = d.style + \" \" + d.weight + \" \" + ~~((d.size + 1) / ratio) + \"px \" + d.font;\n    const metrics = c.measureText(d.text);\n    const anchor = -Math.floor(metrics.width / 2);\n    let w = (metrics.width + 1) * ratio;\n    let h = d.size << 1;\n    if (d.rotate) {\n      var sr = Math.sin(d.rotate * RADIANS),\n          cr = Math.cos(d.rotate * RADIANS),\n          wcr = w * cr,\n          wsr = w * sr,\n          hcr = h * cr,\n          hsr = h * sr;\n      w = (Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 0x1f) >> 5 << 5;\n      h = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));\n    } else {\n      w = (w + 0x1f) >> 5 << 5;\n    }\n    if (h > maxh) maxh = h;\n    if (x + w >= (cw << 5)) {\n      x = 0;\n      y += maxh;\n      maxh = 0;\n    }\n    if (y + h >= ch) break;\n    c.translate((x + (w >> 1)) / ratio, (y + (h >> 1)) / ratio);\n    if (d.rotate) c.rotate(d.rotate * RADIANS);\n    c.fillText(d.text, anchor, 0);\n    if (d.padding) c.lineWidth = 2 * d.padding, c.strokeText(d.text, anchor, 0);\n    c.restore();\n    d.width = w;\n    d.height = h;\n    d.xoff = x;\n    d.yoff = y;\n    d.x1 = w >> 1;\n    d.y1 = h >> 1;\n    d.x0 = -d.x1;\n    d.y0 = -d.y1;\n    d.hasText = true;\n    x += w;\n  }\n  var pixels = c.getImageData(0, 0, (cw << 5) / ratio, ch / ratio).data,\n      sprite = [];\n  while (--di >= 0) {\n    d = data[di];\n    if (!d.hasText) continue;\n    var w = d.width,\n        w32 = w >> 5,\n        h = d.y1 - d.y0;\n    // Zero the buffer\n    for (var i = 0; i < h * w32; i++) sprite[i] = 0;\n    x = d.xoff;\n    if (x == null) return;\n    y = d.yoff;\n    var seen = 0,\n        seenRow = -1;\n    for (var j = 0; j < h; j++) {\n      for (var i = 0; i < w; i++) {\n        var k = w32 * j + (i >> 5),\n            m = pixels[((y + j) * (cw << 5) + (x + i)) << 2] ? 1 << (31 - (i % 32)) : 0;\n        sprite[k] |= m;\n        seen |= m;\n      }\n      if (seen) seenRow = j;\n      else {\n        d.y0++;\n        h--;\n        j--;\n        y++;\n      }\n    }\n    d.y1 = d.y0 + seenRow;\n    d.sprite = sprite.slice(0, (d.y1 - d.y0) * w32);\n  }\n}\n\n// Use mask-based collision detection.\nfunction cloudCollide(tag, board, sw) {\n  sw >>= 5;\n  var sprite = tag.sprite,\n      w = tag.width >> 5,\n      lx = tag.x - (w << 4),\n      sx = lx & 0x7f,\n      msx = 32 - sx,\n      h = tag.y1 - tag.y0,\n      x = (tag.y + tag.y0) * sw + (lx >> 5),\n      last;\n  for (var j = 0; j < h; j++) {\n    last = 0;\n    for (var i = 0; i <= w; i++) {\n      if (((last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0))\n          & board[x + i]) return true;\n    }\n    x += sw;\n  }\n  return false;\n}\n\nfunction cloudBounds(bounds, d) {\n  var b0 = bounds[0],\n      b1 = bounds[1];\n  if (d.x + d.x0 < b0.x) b0.x = d.x + d.x0;\n  if (d.y + d.y0 < b0.y) b0.y = d.y + d.y0;\n  if (d.x + d.x1 > b1.x) b1.x = d.x + d.x1;\n  if (d.y + d.y1 > b1.y) b1.y = d.y + d.y1;\n}\n\nfunction collideRects(a, b) {\n  return a.x + a.x1 > b[0].x && a.x + a.x0 < b[1].x && a.y + a.y1 > b[0].y && a.y + a.y0 < b[1].y;\n}\n\nfunction archimedeanSpiral(size) {\n  var e = size[0] / size[1];\n  return function(t) {\n    return [e * (t *= .1) * Math.cos(t), t * Math.sin(t)];\n  };\n}\n\nfunction rectangularSpiral(size) {\n  var dy = 4,\n      dx = dy * size[0] / size[1],\n      x = 0,\n      y = 0;\n  return function(t) {\n    var sign = t < 0 ? -1 : 1;\n    // See triangular numbers: T_n = n * (n + 1) / 2.\n    switch ((Math.sqrt(1 + 4 * sign * t) - sign) & 3) {\n      case 0:  x += dx; break;\n      case 1:  y += dy; break;\n      case 2:  x -= dx; break;\n      default: y -= dy; break;\n    }\n    return [x, y];\n  };\n}\n\n// TODO reuse arrays?\nfunction zeroArray(n) {\n  var a = [],\n      i = -1;\n  while (++i < n) a[i] = 0;\n  return a;\n}\n\nfunction cloudCanvas() {\n  return document.createElement(\"canvas\");\n}\n\nfunction functor(d) {\n  return typeof d === \"function\" ? d : function() { return d; };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}