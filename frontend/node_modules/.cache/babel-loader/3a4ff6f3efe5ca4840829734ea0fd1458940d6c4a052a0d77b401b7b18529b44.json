{"ast":null,"code":"/**\n * @license\n * Copyright 2011 Dan Vanderkam (danvdk@gmail.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n\n/**\n * @fileoverview This file contains utility functions used by dygraphs. These\n * are typically static (i.e. not related to any particular dygraph). Examples\n * include date/time formatting functions, basic algorithms (e.g. binary\n * search) and generic DOM-manipulation functions.\n */\n\n/*global Dygraph:false, Node:false */\n\"use strict\";\n\nimport * as DygraphTickers from './dygraph-tickers';\n\n/**\n * @param {*} o\n * @return {string}\n * @private\n */\nexport function type(o) {\n  return o === null ? 'null' : typeof o;\n}\nexport var LOG_SCALE = 10;\nexport var LN_TEN = Math.log(LOG_SCALE);\n\n/**\n * @private\n * @param {number} x\n * @return {number}\n */\nexport var log10 = function (x) {\n  return Math.log(x) / LN_TEN;\n};\n\n/**\n * @private\n * @param {number} r0\n * @param {number} r1\n * @param {number} pct\n * @return {number}\n */\nexport var logRangeFraction = function (r0, r1, pct) {\n  // Computing the inverse of toPercentXCoord. The function was arrived at with\n  // the following steps:\n  //\n  // Original calcuation:\n  // pct = (log(x) - log(xRange[0])) / (log(xRange[1]) - log(xRange[0]));\n  //\n  // Multiply both sides by the right-side denominator.\n  // pct * (log(xRange[1] - log(xRange[0]))) = log(x) - log(xRange[0])\n  //\n  // add log(xRange[0]) to both sides\n  // log(xRange[0]) + (pct * (log(xRange[1]) - log(xRange[0]))) = log(x);\n  //\n  // Swap both sides of the equation,\n  // log(x) = log(xRange[0]) + (pct * (log(xRange[1]) - log(xRange[0])))\n  //\n  // Use both sides as the exponent in 10^exp and we're done.\n  // x = 10 ^ (log(xRange[0]) + (pct * (log(xRange[1]) - log(xRange[0]))))\n\n  var logr0 = log10(r0);\n  var logr1 = log10(r1);\n  var exponent = logr0 + pct * (logr1 - logr0);\n  var value = Math.pow(LOG_SCALE, exponent);\n  return value;\n};\n\n/** A dotted line stroke pattern. */\nexport var DOTTED_LINE = [2, 2];\n/** A dashed line stroke pattern. */\nexport var DASHED_LINE = [7, 3];\n/** A dot dash stroke pattern. */\nexport var DOT_DASH_LINE = [7, 2, 2, 2];\n\n// Directions for panning and zooming. Use bit operations when combined\n// values are possible.\nexport var HORIZONTAL = 1;\nexport var VERTICAL = 2;\n\n/**\n * Return the 2d context for a dygraph canvas.\n *\n * This method is only exposed for the sake of replacing the function in\n * automated tests.\n *\n * @param {!HTMLCanvasElement} canvas\n * @return {!CanvasRenderingContext2D}\n * @private\n */\nexport var getContext = function (canvas) {\n  return /** @type{!CanvasRenderingContext2D}*/canvas.getContext(\"2d\");\n};\n\n/**\n * Add an event handler.\n * @param {!Node} elem The element to add the event to.\n * @param {string} type The type of the event, e.g. 'click' or 'mousemove'.\n * @param {function(Event):(boolean|undefined)} fn The function to call\n *     on the event. The function takes one parameter: the event object.\n * @private\n */\nexport var addEvent = function addEvent(elem, type, fn) {\n  elem.addEventListener(type, fn, false);\n};\n\n/**\n * Remove an event handler.\n * @param {!Node} elem The element to remove the event from.\n * @param {string} type The type of the event, e.g. 'click' or 'mousemove'.\n * @param {function(Event):(boolean|undefined)} fn The function to call\n *     on the event. The function takes one parameter: the event object.\n */\nexport function removeEvent(elem, type, fn) {\n  elem.removeEventListener(type, fn, false);\n}\n\n/**\n * Cancels further processing of an event. This is useful to prevent default\n * browser actions, e.g. highlighting text on a double-click.\n * Based on the article at\n * http://www.switchonthecode.com/tutorials/javascript-tutorial-the-scroll-wheel\n * @param {!Event} e The event whose normal behavior should be canceled.\n * @private\n */\nexport function cancelEvent(e) {\n  e = e ? e : window.event;\n  if (e.stopPropagation) {\n    e.stopPropagation();\n  }\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  e.cancelBubble = true;\n  e.cancel = true;\n  e.returnValue = false;\n  return false;\n}\n\n/**\n * Convert hsv values to an rgb(r,g,b) string. Taken from MochiKit.Color. This\n * is used to generate default series colors which are evenly spaced on the\n * color wheel.\n * @param {number} hue Range is 0.0-1.0.\n * @param {number} saturation Range is 0.0-1.0.\n * @param {number} value Range is 0.0-1.0.\n * @return {string} \"rgb(r,g,b)\" where r, g and b range from 0-255.\n * @private\n */\nexport function hsvToRGB(hue, saturation, value) {\n  var red;\n  var green;\n  var blue;\n  if (saturation === 0) {\n    red = value;\n    green = value;\n    blue = value;\n  } else {\n    var i = Math.floor(hue * 6);\n    var f = hue * 6 - i;\n    var p = value * (1 - saturation);\n    var q = value * (1 - saturation * f);\n    var t = value * (1 - saturation * (1 - f));\n    switch (i) {\n      case 1:\n        red = q;\n        green = value;\n        blue = p;\n        break;\n      case 2:\n        red = p;\n        green = value;\n        blue = t;\n        break;\n      case 3:\n        red = p;\n        green = q;\n        blue = value;\n        break;\n      case 4:\n        red = t;\n        green = p;\n        blue = value;\n        break;\n      case 5:\n        red = value;\n        green = p;\n        blue = q;\n        break;\n      case 6: // fall through\n      case 0:\n        red = value;\n        green = t;\n        blue = p;\n        break;\n    }\n  }\n  red = Math.floor(255 * red + 0.5);\n  green = Math.floor(255 * green + 0.5);\n  blue = Math.floor(255 * blue + 0.5);\n  return 'rgb(' + red + ',' + green + ',' + blue + ')';\n}\n\n/**\n * Find the coordinates of an object relative to the top left of the page.\n *\n * @param {Node} obj\n * @return {{x:number,y:number}}\n * @private\n */\nexport function findPos(obj) {\n  var p = obj.getBoundingClientRect(),\n    w = window,\n    d = document.documentElement;\n  return {\n    x: p.left + (w.pageXOffset || d.scrollLeft),\n    y: p.top + (w.pageYOffset || d.scrollTop)\n  };\n}\n\n/**\n * Returns the x-coordinate of the event in a coordinate system where the\n * top-left corner of the page (not the window) is (0,0).\n * Taken from MochiKit.Signal\n * @param {!Event} e\n * @return {number}\n * @private\n */\nexport function pageX(e) {\n  return !e.pageX || e.pageX < 0 ? 0 : e.pageX;\n}\n\n/**\n * Returns the y-coordinate of the event in a coordinate system where the\n * top-left corner of the page (not the window) is (0,0).\n * Taken from MochiKit.Signal\n * @param {!Event} e\n * @return {number}\n * @private\n */\nexport function pageY(e) {\n  return !e.pageY || e.pageY < 0 ? 0 : e.pageY;\n}\n\n/**\n * Converts page the x-coordinate of the event to pixel x-coordinates on the\n * canvas (i.e. DOM Coords).\n * @param {!Event} e Drag event.\n * @param {!DygraphInteractionContext} context Interaction context object.\n * @return {number} The amount by which the drag has moved to the right.\n */\nexport function dragGetX_(e, context) {\n  return pageX(e) - context.px;\n}\n\n/**\n * Converts page the y-coordinate of the event to pixel y-coordinates on the\n * canvas (i.e. DOM Coords).\n * @param {!Event} e Drag event.\n * @param {!DygraphInteractionContext} context Interaction context object.\n * @return {number} The amount by which the drag has moved down.\n */\nexport function dragGetY_(e, context) {\n  return pageY(e) - context.py;\n}\n\n/**\n * This returns true unless the parameter is 0, null, undefined or NaN.\n * TODO(danvk): rename this function to something like 'isNonZeroNan'.\n *\n * @param {number} x The number to consider.\n * @return {boolean} Whether the number is zero or NaN.\n * @private\n */\nexport function isOK(x) {\n  return !!x && !isNaN(x);\n}\n\n/**\n * @param {{x:?number,y:?number,yval:?number}} p The point to consider, valid\n *     points are {x, y} objects\n * @param {boolean=} opt_allowNaNY Treat point with y=NaN as valid\n * @return {boolean} Whether the point has numeric x and y.\n * @private\n */\nexport function isValidPoint(p, opt_allowNaNY) {\n  if (!p) return false; // null or undefined object\n  if (p.yval === null) return false; // missing point\n  if (p.x === null || p.x === undefined) return false;\n  if (p.y === null || p.y === undefined) return false;\n  if (isNaN(p.x) || !opt_allowNaNY && isNaN(p.y)) return false;\n  return true;\n}\n\n/**\n * Number formatting function which mimics the behavior of %g in printf, i.e.\n * either exponential or fixed format (without trailing 0s) is used depending on\n * the length of the generated string.  The advantage of this format is that\n * there is a predictable upper bound on the resulting string length,\n * significant figures are not dropped, and normal numbers are not displayed in\n * exponential notation.\n *\n * NOTE: JavaScript's native toPrecision() is NOT a drop-in replacement for %g.\n * It creates strings which are too long for absolute values between 10^-4 and\n * 10^-6, e.g. '0.00001' instead of '1e-5'. See tests/number-format.html for\n * output examples.\n *\n * @param {number} x The number to format\n * @param {number=} opt_precision The precision to use, default 2.\n * @return {string} A string formatted like %g in printf.  The max generated\n *                  string length should be precision + 6 (e.g 1.123e+300).\n */\nexport function floatFormat(x, opt_precision) {\n  // Avoid invalid precision values; [1, 21] is the valid range.\n  var p = Math.min(Math.max(1, opt_precision || 2), 21);\n\n  // This is deceptively simple.  The actual algorithm comes from:\n  //\n  // Max allowed length = p + 4\n  // where 4 comes from 'e+n' and '.'.\n  //\n  // Length of fixed format = 2 + y + p\n  // where 2 comes from '0.' and y = # of leading zeroes.\n  //\n  // Equating the two and solving for y yields y = 2, or 0.00xxxx which is\n  // 1.0e-3.\n  //\n  // Since the behavior of toPrecision() is identical for larger numbers, we\n  // don't have to worry about the other bound.\n  //\n  // Finally, the argument for toExponential() is the number of trailing digits,\n  // so we take off 1 for the value before the '.'.\n  return Math.abs(x) < 1.0e-3 && x !== 0.0 ? x.toExponential(p - 1) : x.toPrecision(p);\n}\n\n/**\n * Converts '9' to '09' (useful for dates)\n * @param {number} x\n * @return {string}\n * @private\n */\nexport function zeropad(x) {\n  if (x < 10) return \"0\" + x;else return \"\" + x;\n}\n\n/**\n * Date accessors to get the parts of a calendar date (year, month,\n * day, hour, minute, second and millisecond) according to local time,\n * and factory method to call the Date constructor with an array of arguments.\n */\nexport var DateAccessorsLocal = {\n  getFullYear: d => d.getFullYear(),\n  getMonth: d => d.getMonth(),\n  getDate: d => d.getDate(),\n  getHours: d => d.getHours(),\n  getMinutes: d => d.getMinutes(),\n  getSeconds: d => d.getSeconds(),\n  getMilliseconds: d => d.getMilliseconds(),\n  getDay: d => d.getDay(),\n  makeDate: function (y, m, d, hh, mm, ss, ms) {\n    return new Date(y, m, d, hh, mm, ss, ms);\n  }\n};\n\n/**\n * Date accessors to get the parts of a calendar date (year, month,\n * day of month, hour, minute, second and millisecond) according to UTC time,\n * and factory method to call the Date constructor with an array of arguments.\n */\nexport var DateAccessorsUTC = {\n  getFullYear: d => d.getUTCFullYear(),\n  getMonth: d => d.getUTCMonth(),\n  getDate: d => d.getUTCDate(),\n  getHours: d => d.getUTCHours(),\n  getMinutes: d => d.getUTCMinutes(),\n  getSeconds: d => d.getUTCSeconds(),\n  getMilliseconds: d => d.getUTCMilliseconds(),\n  getDay: d => d.getUTCDay(),\n  makeDate: function (y, m, d, hh, mm, ss, ms) {\n    return new Date(Date.UTC(y, m, d, hh, mm, ss, ms));\n  }\n};\n\n/**\n * Return a string version of the hours, minutes and seconds portion of a date.\n * @param {number} hh The hours (from 0-23)\n * @param {number} mm The minutes (from 0-59)\n * @param {number} ss The seconds (from 0-59)\n * @return {string} A time of the form \"HH:MM\" or \"HH:MM:SS\"\n * @private\n */\nexport function hmsString_(hh, mm, ss, ms) {\n  var ret = zeropad(hh) + \":\" + zeropad(mm);\n  if (ss) {\n    ret += \":\" + zeropad(ss);\n    if (ms) {\n      var str = \"\" + ms;\n      ret += \".\" + ('000' + str).substring(str.length);\n    }\n  }\n  return ret;\n}\n\n/**\n * Convert a JS date (millis since epoch) to a formatted string.\n * @param {number} time The JavaScript time value (ms since epoch)\n * @param {boolean} utc Whether output UTC or local time\n * @return {string} A date of one of these forms:\n *     \"YYYY/MM/DD\", \"YYYY/MM/DD HH:MM\" or \"YYYY/MM/DD HH:MM:SS\"\n * @private\n */\nexport function dateString_(time, utc) {\n  var accessors = utc ? DateAccessorsUTC : DateAccessorsLocal;\n  var date = new Date(time);\n  var y = accessors.getFullYear(date);\n  var m = accessors.getMonth(date);\n  var d = accessors.getDate(date);\n  var hh = accessors.getHours(date);\n  var mm = accessors.getMinutes(date);\n  var ss = accessors.getSeconds(date);\n  var ms = accessors.getMilliseconds(date);\n  // Get a year string:\n  var year = \"\" + y;\n  // Get a 0 padded month string\n  var month = zeropad(m + 1); //months are 0-offset, sigh\n  // Get a 0 padded day string\n  var day = zeropad(d);\n  var frac = hh * 3600 + mm * 60 + ss + 1e-3 * ms;\n  var ret = year + \"/\" + month + \"/\" + day;\n  if (frac) {\n    ret += \" \" + hmsString_(hh, mm, ss, ms);\n  }\n  return ret;\n}\n\n/**\n * Round a number to the specified number of digits past the decimal point.\n * @param {number} num The number to round\n * @param {number} places The number of decimals to which to round\n * @return {number} The rounded number\n * @private\n */\nexport function round_(num, places) {\n  var shift = Math.pow(10, places);\n  return Math.round(num * shift) / shift;\n}\n\n/**\n * Implementation of binary search over an array.\n * Currently does not work when val is outside the range of arry's values.\n * @param {number} val the value to search for\n * @param {Array.<number>} arry is the value over which to search\n * @param {number} abs If abs > 0, find the lowest entry greater than val\n *     If abs < 0, find the highest entry less than val.\n *     If abs == 0, find the entry that equals val.\n * @param {number=} low The first index in arry to consider (optional)\n * @param {number=} high The last index in arry to consider (optional)\n * @return {number} Index of the element, or -1 if it isn't found.\n * @private\n */\nexport function binarySearch(val, arry, abs, low, high) {\n  if (low === null || low === undefined || high === null || high === undefined) {\n    low = 0;\n    high = arry.length - 1;\n  }\n  if (low > high) {\n    return -1;\n  }\n  if (abs === null || abs === undefined) {\n    abs = 0;\n  }\n  var validIndex = function (idx) {\n    return idx >= 0 && idx < arry.length;\n  };\n  var mid = parseInt((low + high) / 2, 10);\n  var element = arry[mid];\n  var idx;\n  if (element == val) {\n    return mid;\n  } else if (element > val) {\n    if (abs > 0) {\n      // Accept if element > val, but also if prior element < val.\n      idx = mid - 1;\n      if (validIndex(idx) && arry[idx] < val) {\n        return mid;\n      }\n    }\n    return binarySearch(val, arry, abs, low, mid - 1);\n  } else if (element < val) {\n    if (abs < 0) {\n      // Accept if element < val, but also if prior element > val.\n      idx = mid + 1;\n      if (validIndex(idx) && arry[idx] > val) {\n        return mid;\n      }\n    }\n    return binarySearch(val, arry, abs, mid + 1, high);\n  }\n  return -1; // can't actually happen, but makes closure compiler happy\n}\n\n/**\n * Parses a date, returning the number of milliseconds since epoch. This can be\n * passed in as an xValueParser in the Dygraph constructor.\n * TODO(danvk): enumerate formats that this understands.\n *\n * @param {string} dateStr A date in a variety of possible string formats.\n * @return {number} Milliseconds since epoch.\n * @private\n */\nexport function dateParser(dateStr) {\n  var dateStrSlashed;\n  var d;\n\n  // Let the system try the format first, with one caveat:\n  // YYYY-MM-DD[ HH:MM:SS] is interpreted as UTC by a variety of browsers.\n  // dygraphs displays dates in local time, so this will result in surprising\n  // inconsistencies. But if you specify \"T\" or \"Z\" (i.e. YYYY-MM-DDTHH:MM:SS),\n  // then you probably know what you're doing, so we'll let you go ahead.\n  // Issue: http://code.google.com/p/dygraphs/issues/detail?id=255\n  if (dateStr.search(\"-\") == -1 || dateStr.search(\"T\") != -1 || dateStr.search(\"Z\") != -1) {\n    d = dateStrToMillis(dateStr);\n    if (d && !isNaN(d)) return d;\n  }\n  if (dateStr.search(\"-\") != -1) {\n    // e.g. '2009-7-12' or '2009-07-12'\n    dateStrSlashed = dateStr.replace(\"-\", \"/\", \"g\");\n    while (dateStrSlashed.search(\"-\") != -1) {\n      dateStrSlashed = dateStrSlashed.replace(\"-\", \"/\");\n    }\n    d = dateStrToMillis(dateStrSlashed);\n  } else {\n    // Any format that Date.parse will accept, e.g. \"2009/07/12\" or\n    // \"2009/07/12 12:34:56\"\n    d = dateStrToMillis(dateStr);\n  }\n  if (!d || isNaN(d)) {\n    console.error(\"Couldn't parse \" + dateStr + \" as a date\");\n  }\n  return d;\n}\n\n/**\n * This is identical to JavaScript's built-in Date.parse() method, except that\n * it doesn't get replaced with an incompatible method by aggressive JS\n * libraries like MooTools or Joomla.\n * @param {string} str The date string, e.g. \"2011/05/06\"\n * @return {number} millis since epoch\n * @private\n */\nexport function dateStrToMillis(str) {\n  return new Date(str).getTime();\n}\n\n// These functions are all based on MochiKit.\n/**\n * Copies all the properties from o to self.\n *\n * @param {!Object} self\n * @param {!Object} o\n * @return {!Object}\n */\nexport function update(self, o) {\n  if (typeof o != 'undefined' && o !== null) {\n    for (var k in o) {\n      if (o.hasOwnProperty(k)) {\n        self[k] = o[k];\n      }\n    }\n  }\n  return self;\n}\n\n// internal: check if o is a DOM node, and we know it’s not null\nvar _isNode = typeof Node !== 'undefined' && Node !== null && typeof Node === 'object' ? function _isNode(o) {\n  return o instanceof Node;\n} : function _isNode(o) {\n  return typeof o === 'object' && typeof o.nodeType === 'number' && typeof o.nodeName === 'string';\n};\n\n/**\n * Copies all the properties from o to self.\n *\n * @param {!Object} self\n * @param {!Object} o\n * @return {!Object}\n * @private\n */\nexport function updateDeep(self, o) {\n  if (typeof o != 'undefined' && o !== null) {\n    for (var k in o) {\n      if (o.hasOwnProperty(k)) {\n        const v = o[k];\n        if (v === null) {\n          self[k] = null;\n        } else if (isArrayLike(v)) {\n          self[k] = v.slice();\n        } else if (_isNode(v)) {\n          // DOM objects are shallowly-copied.\n          self[k] = v;\n        } else if (typeof v == 'object') {\n          if (typeof self[k] != 'object' || self[k] === null) {\n            self[k] = {};\n          }\n          updateDeep(self[k], v);\n        } else {\n          self[k] = v;\n        }\n      }\n    }\n  }\n  return self;\n}\n\n/**\n * @param {*} o\n * @return {string}\n * @private\n */\nexport function typeArrayLike(o) {\n  if (o === null) return 'null';\n  const t = typeof o;\n  if ((t === 'object' || t === 'function' && typeof o.item === 'function') && typeof o.length === 'number' && o.nodeType !== 3 && o.nodeType !== 4) return 'array';\n  return t;\n}\n\n/**\n * @param {*} o\n * @return {boolean}\n * @private\n */\nexport function isArrayLike(o) {\n  const t = typeof o;\n  return o !== null && (t === 'object' || t === 'function' && typeof o.item === 'function') && typeof o.length === 'number' && o.nodeType !== 3 && o.nodeType !== 4;\n}\n\n/**\n * @param {Object} o\n * @return {boolean}\n * @private\n */\nexport function isDateLike(o) {\n  return o !== null && typeof o === 'object' && typeof o.getTime === 'function';\n}\n\n/**\n * Note: this only seems to work for arrays.\n * @param {!Array} o\n * @return {!Array}\n * @private\n */\nexport function clone(o) {\n  // TODO(danvk): figure out how MochiKit's version works\n  var r = [];\n  for (var i = 0; i < o.length; i++) {\n    if (isArrayLike(o[i])) {\n      r.push(clone(o[i]));\n    } else {\n      r.push(o[i]);\n    }\n  }\n  return r;\n}\n\n/**\n * Create a new canvas element.\n *\n * @return {!HTMLCanvasElement}\n * @private\n */\nexport function createCanvas() {\n  return document.createElement('canvas');\n}\n\n/**\n * Returns the context's pixel ratio, which is the ratio between the device\n * pixel ratio and the backing store ratio. Typically this is 1 for conventional\n * displays, and > 1 for HiDPI displays (such as the Retina MBP).\n * See http://www.html5rocks.com/en/tutorials/canvas/hidpi/ for more details.\n *\n * @param {!CanvasRenderingContext2D} context The canvas's 2d context.\n * @return {number} The ratio of the device pixel ratio and the backing store\n * ratio for the specified context.\n */\nexport function getContextPixelRatio(context) {\n  try {\n    var devicePixelRatio = window.devicePixelRatio;\n    var backingStoreRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n    if (devicePixelRatio !== undefined) {\n      return devicePixelRatio / backingStoreRatio;\n    } else {\n      // At least devicePixelRatio must be defined for this ratio to make sense.\n      // We default backingStoreRatio to 1: this does not exist on some browsers\n      // (i.e. desktop Chrome).\n      return 1;\n    }\n  } catch (e) {\n    return 1;\n  }\n}\n\n/**\n * TODO(danvk): use @template here when it's better supported for classes.\n * @param {!Array} array\n * @param {number} start\n * @param {number} length\n * @param {function(!Array,?):boolean=} predicate\n * @constructor\n */\nexport function Iterator(array, start, length, predicate) {\n  start = start || 0;\n  length = length || array.length;\n  this.hasNext = true; // Use to identify if there's another element.\n  this.peek = null; // Use for look-ahead\n  this.start_ = start;\n  this.array_ = array;\n  this.predicate_ = predicate;\n  this.end_ = Math.min(array.length, start + length);\n  this.nextIdx_ = start - 1; // use -1 so initial advance works.\n  this.next(); // ignoring result.\n}\n\n/**\n * @return {Object}\n */\nIterator.prototype.next = function () {\n  if (!this.hasNext) {\n    return null;\n  }\n  var obj = this.peek;\n  var nextIdx = this.nextIdx_ + 1;\n  var found = false;\n  while (nextIdx < this.end_) {\n    if (!this.predicate_ || this.predicate_(this.array_, nextIdx)) {\n      this.peek = this.array_[nextIdx];\n      found = true;\n      break;\n    }\n    nextIdx++;\n  }\n  this.nextIdx_ = nextIdx;\n  if (!found) {\n    this.hasNext = false;\n    this.peek = null;\n  }\n  return obj;\n};\n\n/**\n * Returns a new iterator over array, between indexes start and\n * start + length, and only returns entries that pass the accept function\n *\n * @param {!Array} array the array to iterate over.\n * @param {number} start the first index to iterate over, 0 if absent.\n * @param {number} length the number of elements in the array to iterate over.\n *     This, along with start, defines a slice of the array, and so length\n *     doesn't imply the number of elements in the iterator when accept doesn't\n *     always accept all values. array.length when absent.\n * @param {function(?):boolean=} opt_predicate a function that takes\n *     parameters array and idx, which returns true when the element should be\n *     returned.  If omitted, all elements are accepted.\n * @private\n */\nexport function createIterator(array, start, length, opt_predicate) {\n  return new Iterator(array, start, length, opt_predicate);\n}\n\n// Shim layer with setTimeout fallback.\n// From: http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// Should be called with the window context:\n//   Dygraph.requestAnimFrame.call(window, function() {})\nexport var requestAnimFrame = function () {\n  return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n    window.setTimeout(callback, 1000 / 60);\n  };\n}();\n\n/**\n * Call a function at most maxFrames times at an attempted interval of\n * framePeriodInMillis, then call a cleanup function once. repeatFn is called\n * once immediately, then at most (maxFrames - 1) times asynchronously. If\n * maxFrames==1, then cleanup_fn() is also called synchronously.  This function\n * is used to sequence animation.\n * @param {function(number)} repeatFn Called repeatedly -- takes the frame\n *     number (from 0 to maxFrames-1) as an argument.\n * @param {number} maxFrames The max number of times to call repeatFn\n * @param {number} framePeriodInMillis Max requested time between frames.\n * @param {function()} cleanupFn A function to call after all repeatFn calls.\n * @private\n */\nexport function repeatAndCleanup(repeatFn, maxFrames, framePeriodInMillis, cleanupFn) {\n  var frameNumber = 0;\n  var previousFrameNumber;\n  var startTime = new Date().getTime();\n  repeatFn(frameNumber);\n  if (maxFrames == 1) {\n    cleanupFn();\n    return;\n  }\n  var maxFrameArg = maxFrames - 1;\n  (function loop() {\n    if (frameNumber >= maxFrames) return;\n    requestAnimFrame.call(window, function () {\n      // Determine which frame to draw based on the delay so far.  Will skip\n      // frames if necessary.\n      var currentTime = new Date().getTime();\n      var delayInMillis = currentTime - startTime;\n      previousFrameNumber = frameNumber;\n      frameNumber = Math.floor(delayInMillis / framePeriodInMillis);\n      var frameDelta = frameNumber - previousFrameNumber;\n      // If we predict that the subsequent repeatFn call will overshoot our\n      // total frame target, so our last call will cause a stutter, then jump to\n      // the last call immediately.  If we're going to cause a stutter, better\n      // to do it faster than slower.\n      var predictOvershootStutter = frameNumber + frameDelta > maxFrameArg;\n      if (predictOvershootStutter || frameNumber >= maxFrameArg) {\n        repeatFn(maxFrameArg); // Ensure final call with maxFrameArg.\n        cleanupFn();\n      } else {\n        if (frameDelta !== 0) {\n          // Don't call repeatFn with duplicate frames.\n          repeatFn(frameNumber);\n        }\n        loop();\n      }\n    });\n  })();\n}\n\n// A whitelist of options that do not change pixel positions.\nvar pixelSafeOptions = {\n  'annotationClickHandler': true,\n  'annotationDblClickHandler': true,\n  'annotationMouseOutHandler': true,\n  'annotationMouseOverHandler': true,\n  'axisLineColor': true,\n  'axisLineWidth': true,\n  'clickCallback': true,\n  'drawCallback': true,\n  'drawHighlightPointCallback': true,\n  'drawPoints': true,\n  'drawPointCallback': true,\n  'drawGrid': true,\n  'fillAlpha': true,\n  'gridLineColor': true,\n  'gridLineWidth': true,\n  'hideOverlayOnMouseOut': true,\n  'highlightCallback': true,\n  'highlightCircleSize': true,\n  'interactionModel': true,\n  'labelsDiv': true,\n  'labelsKMB': true,\n  'labelsKMG2': true,\n  'labelsSeparateLines': true,\n  'labelsShowZeroValues': true,\n  'legend': true,\n  'panEdgeFraction': true,\n  'pixelsPerYLabel': true,\n  'pointClickCallback': true,\n  'pointSize': true,\n  'rangeSelectorPlotFillColor': true,\n  'rangeSelectorPlotFillGradientColor': true,\n  'rangeSelectorPlotStrokeColor': true,\n  'rangeSelectorBackgroundStrokeColor': true,\n  'rangeSelectorBackgroundLineWidth': true,\n  'rangeSelectorPlotLineWidth': true,\n  'rangeSelectorForegroundStrokeColor': true,\n  'rangeSelectorForegroundLineWidth': true,\n  'rangeSelectorAlpha': true,\n  'showLabelsOnHighlight': true,\n  'showRoller': true,\n  'strokeWidth': true,\n  'underlayCallback': true,\n  'unhighlightCallback': true,\n  'zoomCallback': true\n};\n\n/**\n * This function will scan the option list and determine if they\n * require us to recalculate the pixel positions of each point.\n * TODO: move this into dygraph-options.js\n * @param {!Array.<string>} labels a list of options to check.\n * @param {!Object} attrs\n * @return {boolean} true if the graph needs new points else false.\n * @private\n */\nexport function isPixelChangingOptionList(labels, attrs) {\n  // Assume that we do not require new points.\n  // This will change to true if we actually do need new points.\n\n  // Create a dictionary of series names for faster lookup.\n  // If there are no labels, then the dictionary stays empty.\n  var seriesNamesDictionary = {};\n  if (labels) {\n    for (var i = 1; i < labels.length; i++) {\n      seriesNamesDictionary[labels[i]] = true;\n    }\n  }\n\n  // Scan through a flat (i.e. non-nested) object of options.\n  // Returns true/false depending on whether new points are needed.\n  var scanFlatOptions = function (options) {\n    for (var property in options) {\n      if (options.hasOwnProperty(property) && !pixelSafeOptions[property]) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  // Iterate through the list of updated options.\n  for (var property in attrs) {\n    if (!attrs.hasOwnProperty(property)) continue;\n\n    // Find out of this field is actually a series specific options list.\n    if (property == 'highlightSeriesOpts' || seriesNamesDictionary[property] && !attrs.series) {\n      // This property value is a list of options for this series.\n      if (scanFlatOptions(attrs[property])) return true;\n    } else if (property == 'series' || property == 'axes') {\n      // This is twice-nested options list.\n      var perSeries = attrs[property];\n      for (var series in perSeries) {\n        if (perSeries.hasOwnProperty(series) && scanFlatOptions(perSeries[series])) {\n          return true;\n        }\n      }\n    } else {\n      // If this was not a series specific option list,\n      // check if it's a pixel-changing property.\n      if (!pixelSafeOptions[property]) return true;\n    }\n  }\n  return false;\n}\nexport var Circles = {\n  DEFAULT: function (g, name, ctx, canvasx, canvasy, color, radius) {\n    ctx.beginPath();\n    ctx.fillStyle = color;\n    ctx.arc(canvasx, canvasy, radius, 0, 2 * Math.PI, false);\n    ctx.fill();\n  }\n  // For more shapes, include extras/shapes.js\n};\n\n/**\n * Determine whether |data| is delimited by CR, CRLF, LF, LFCR.\n * @param {string} data\n * @return {?string} the delimiter that was detected (or null on failure).\n */\nexport function detectLineDelimiter(data) {\n  for (var i = 0; i < data.length; i++) {\n    var code = data.charAt(i);\n    if (code === '\\r') {\n      // Might actually be \"\\r\\n\".\n      if (i + 1 < data.length && data.charAt(i + 1) === '\\n') {\n        return '\\r\\n';\n      }\n      return code;\n    }\n    if (code === '\\n') {\n      // Might actually be \"\\n\\r\".\n      if (i + 1 < data.length && data.charAt(i + 1) === '\\r') {\n        return '\\n\\r';\n      }\n      return code;\n    }\n  }\n  return null;\n}\n\n/**\n * Is one node contained by another?\n * @param {Node} containee The contained node.\n * @param {Node} container The container node.\n * @return {boolean} Whether containee is inside (or equal to) container.\n * @private\n */\nexport function isNodeContainedBy(containee, container) {\n  if (container === null || containee === null) {\n    return false;\n  }\n  var containeeNode = /** @type {Node} */containee;\n  while (containeeNode && containeeNode !== container) {\n    containeeNode = containeeNode.parentNode;\n  }\n  return containeeNode === container;\n}\n\n// This masks some numeric issues in older versions of Firefox,\n// where 1.0/Math.pow(10,2) != Math.pow(10,-2).\n/** @type {function(number,number):number} */\nexport function pow(base, exp) {\n  if (exp < 0) {\n    return 1.0 / Math.pow(base, -exp);\n  }\n  return Math.pow(base, exp);\n}\nvar RGBAxRE = /^#([0-9A-Fa-f]{2})([0-9A-Fa-f]{2})([0-9A-Fa-f]{2})([0-9A-Fa-f]{2})?$/;\nvar RGBA_RE = /^rgba?\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})(?:,\\s*([01](?:\\.\\d+)?))?\\)$/;\n\n/**\n * Helper for toRGB_ which parses strings of the form:\n * #RRGGBB (hex)\n * #RRGGBBAA (hex)\n * rgb(123, 45, 67)\n * rgba(123, 45, 67, 0.5)\n * @return parsed {r,g,b,a?} tuple or null.\n */\nfunction parseRGBA(rgbStr) {\n  var bits,\n    r,\n    g,\n    b,\n    a = null;\n  if (bits = RGBAxRE.exec(rgbStr)) {\n    r = parseInt(bits[1], 16);\n    g = parseInt(bits[2], 16);\n    b = parseInt(bits[3], 16);\n    if (bits[4]) a = parseInt(bits[4], 16);\n  } else if (bits = RGBA_RE.exec(rgbStr)) {\n    r = parseInt(bits[1], 10);\n    g = parseInt(bits[2], 10);\n    b = parseInt(bits[3], 10);\n    if (bits[4]) a = parseFloat(bits[4]);\n  } else return null;\n  if (a !== null) return {\n    \"r\": r,\n    \"g\": g,\n    \"b\": b,\n    \"a\": a\n  };\n  return {\n    \"r\": r,\n    \"g\": g,\n    \"b\": b\n  };\n}\n\n/**\n * Converts any valid CSS color (hex, rgb(), named color) to an RGB tuple.\n *\n * @param {!string} colorStr Any valid CSS color string.\n * @return {{r:number,g:number,b:number,a:number?}} Parsed RGB tuple.\n * @private\n */\nexport function toRGB_(colorStr) {\n  // Strategy: First try to parse colorStr directly. This is fast & avoids DOM\n  // manipulation.  If that fails (e.g. for named colors like 'red'), then\n  // create a hidden DOM element and parse its computed color.\n  var rgb = parseRGBA(colorStr);\n  if (rgb) return rgb;\n  var div = document.createElement('div');\n  div.style.backgroundColor = colorStr;\n  div.style.visibility = 'hidden';\n  document.body.appendChild(div);\n  var rgbStr = window.getComputedStyle(div, null).backgroundColor;\n  document.body.removeChild(div);\n  return parseRGBA(rgbStr);\n}\n\n/**\n * Checks whether the browser supports the &lt;canvas&gt; tag.\n * @param {HTMLCanvasElement=} opt_canvasElement Pass a canvas element as an\n *     optimization if you have one.\n * @return {boolean} Whether the browser supports canvas.\n */\nexport function isCanvasSupported(opt_canvasElement) {\n  try {\n    var canvas = opt_canvasElement || document.createElement(\"canvas\");\n    canvas.getContext(\"2d\");\n  } catch (e) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Parses the value as a floating point number. This is like the parseFloat()\n * built-in, but with a few differences:\n * - the empty string is parsed as null, rather than NaN.\n * - if the string cannot be parsed at all, an error is logged.\n * If the string can't be parsed, this method returns null.\n * @param {string} x The string to be parsed\n * @param {number=} opt_line_no The line number from which the string comes.\n * @param {string=} opt_line The text of the line from which the string comes.\n */\nexport function parseFloat_(x, opt_line_no, opt_line) {\n  var val = parseFloat(x);\n  if (!isNaN(val)) return val;\n\n  // Try to figure out what happeend.\n  // If the value is the empty string, parse it as null.\n  if (/^ *$/.test(x)) return null;\n\n  // If it was actually \"NaN\", return it as NaN.\n  if (/^ *nan *$/i.test(x)) return NaN;\n\n  // Looks like a parsing error.\n  var msg = \"Unable to parse '\" + x + \"' as a number\";\n  if (opt_line !== undefined && opt_line_no !== undefined) {\n    msg += \" on line \" + (1 + (opt_line_no || 0)) + \" ('\" + opt_line + \"') of CSV.\";\n  }\n  console.error(msg);\n  return null;\n}\n\n// Label constants for the labelsKMB and labelsKMG2 options.\n// (i.e. '100000' -> '100k')\nvar KMB_LABELS_LARGE = ['k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y'];\nvar KMB_LABELS_SMALL = ['m', 'µ', 'n', 'p', 'f', 'a', 'z', 'y'];\nvar KMG2_LABELS_LARGE = ['Ki', 'Mi', 'Gi', 'Ti', 'Pi', 'Ei', 'Zi', 'Yi'];\nvar KMG2_LABELS_SMALL = ['p-10', 'p-20', 'p-30', 'p-40', 'p-50', 'p-60', 'p-70', 'p-80'];\n/* if both are given (legacy/deprecated use only) */\nvar KMB2_LABELS_LARGE = ['K', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y'];\nvar KMB2_LABELS_SMALL = KMB_LABELS_SMALL;\n\n/**\n * @private\n * Return a string version of a number. This respects the digitsAfterDecimal\n * and maxNumberWidth options.\n * @param {number} x The number to be formatted\n * @param {Dygraph} opts An options view\n */\nexport function numberValueFormatter(x, opts) {\n  var sigFigs = opts('sigFigs');\n  if (sigFigs !== null) {\n    // User has opted for a fixed number of significant figures.\n    return floatFormat(x, sigFigs);\n  }\n\n  // shortcut 0 so later code does not need to worry about it\n  if (x === 0.0) return '0';\n  var digits = opts('digitsAfterDecimal');\n  var maxNumberWidth = opts('maxNumberWidth');\n  var kmb = opts('labelsKMB');\n  var kmg2 = opts('labelsKMG2');\n  var label;\n  var absx = Math.abs(x);\n  if (kmb || kmg2) {\n    var k;\n    var k_labels = [];\n    var m_labels = [];\n    if (kmb) {\n      k = 1000;\n      k_labels = KMB_LABELS_LARGE;\n      m_labels = KMB_LABELS_SMALL;\n    }\n    if (kmg2) {\n      k = 1024;\n      k_labels = KMG2_LABELS_LARGE;\n      m_labels = KMG2_LABELS_SMALL;\n      if (kmb) {\n        k_labels = KMB2_LABELS_LARGE;\n        m_labels = KMB2_LABELS_SMALL;\n      }\n    }\n    var n;\n    var j;\n    if (absx >= k) {\n      j = k_labels.length;\n      while (j > 0) {\n        n = pow(k, j);\n        --j;\n        if (absx >= n) {\n          // guaranteed to hit because absx >= k (pow(k, 1))\n          // if immensely large still switch to scientific notation\n          if (absx / n >= Math.pow(10, maxNumberWidth)) label = x.toExponential(digits);else label = round_(x / n, digits) + k_labels[j];\n          return label;\n        }\n      }\n      // not reached, fall through safely though should it ever be\n    } else if (absx < 1 /* && (m_labels.length > 0) */) {\n      j = 0;\n      while (j < m_labels.length) {\n        ++j;\n        n = pow(k, j);\n        if (absx * n >= 1) break;\n      }\n      // if _still_ too small, switch to scientific notation instead\n      if (absx * n < Math.pow(10, -digits)) label = x.toExponential(digits);else label = round_(x * n, digits) + m_labels[j - 1];\n      return label;\n    }\n    // else fall through\n  }\n  if (absx >= Math.pow(10, maxNumberWidth) || absx < Math.pow(10, -digits)) {\n    // switch to scientific notation if we underflow or overflow fixed display\n    label = x.toExponential(digits);\n  } else {\n    label = '' + round_(x, digits);\n  }\n  return label;\n}\n\n/**\n * variant for use as an axisLabelFormatter.\n * @private\n */\nexport function numberAxisLabelFormatter(x, granularity, opts) {\n  return numberValueFormatter.call(this, x, opts);\n}\n\n/**\n * @type {!Array.<string>}\n * @private\n * @constant\n */\nvar SHORT_MONTH_NAMES_ = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n/**\n * Convert a JS date to a string appropriate to display on an axis that\n * is displaying values at the stated granularity. This respects the\n * labelsUTC option.\n * @param {Date} date The date to format\n * @param {number} granularity One of the Dygraph granularity constants\n * @param {Dygraph} opts An options view\n * @return {string} The date formatted as local time\n * @private\n */\nexport function dateAxisLabelFormatter(date, granularity, opts) {\n  var utc = opts('labelsUTC');\n  var accessors = utc ? DateAccessorsUTC : DateAccessorsLocal;\n  var year = accessors.getFullYear(date),\n    month = accessors.getMonth(date),\n    day = accessors.getDate(date),\n    hours = accessors.getHours(date),\n    mins = accessors.getMinutes(date),\n    secs = accessors.getSeconds(date),\n    millis = accessors.getMilliseconds(date);\n  if (granularity >= DygraphTickers.Granularity.DECADAL) {\n    return '' + year;\n  } else if (granularity >= DygraphTickers.Granularity.MONTHLY) {\n    return SHORT_MONTH_NAMES_[month] + '&#160;' + year;\n  } else {\n    var frac = hours * 3600 + mins * 60 + secs + 1e-3 * millis;\n    if (frac === 0 || granularity >= DygraphTickers.Granularity.DAILY) {\n      // e.g. '21 Jan' (%d%b)\n      return zeropad(day) + '&#160;' + SHORT_MONTH_NAMES_[month];\n    } else if (granularity < DygraphTickers.Granularity.SECONDLY) {\n      // e.g. 40.310 (meaning 40 seconds and 310 milliseconds)\n      var str = \"\" + millis;\n      return zeropad(secs) + \".\" + ('000' + str).substring(str.length);\n    } else if (granularity > DygraphTickers.Granularity.MINUTELY) {\n      return hmsString_(hours, mins, secs, 0);\n    } else {\n      return hmsString_(hours, mins, secs, millis);\n    }\n  }\n}\n\n/**\n * Return a string version of a JS date for a value label. This respects the\n * labelsUTC option.\n * @param {Date} date The date to be formatted\n * @param {Dygraph} opts An options view\n * @private\n */\nexport function dateValueFormatter(d, opts) {\n  return dateString_(d, opts('labelsUTC'));\n}\n\n// stuff for simple onDOMready implementation\nvar deferDOM_callbacks = [];\nvar deferDOM_handlerCalled = false;\n\n// onDOMready once DOM is ready\n/**\n * Simple onDOMready implementation\n * @param {function()} cb The callback to run once the DOM is ready.\n * @return {boolean} whether the DOM is currently ready\n */\nfunction deferDOM_ready(cb) {\n  if (typeof cb === \"function\") cb();\n  return true;\n}\n\n/**\n * Setup a simple onDOMready implementation on the given objct.\n * @param {*} self the object to update .onDOMready on\n * @private\n */\nexport function setupDOMready_(self) {\n  // only attach if there’s a DOM\n  if (typeof document !== \"undefined\") {\n    // called by browser\n    const handler = function deferDOM_handler() {\n      /* execute only once */\n      if (deferDOM_handlerCalled) return;\n      deferDOM_handlerCalled = true;\n      /* subsequent calls must not enqueue */\n      self.onDOMready = deferDOM_ready;\n      /* clear event handlers */\n      document.removeEventListener(\"DOMContentLoaded\", handler, false);\n      window.removeEventListener(\"load\", handler, false);\n      /* run user callbacks */\n      for (let i = 0; i < deferDOM_callbacks.length; ++i) deferDOM_callbacks[i]();\n      deferDOM_callbacks = null; //gc\n    };\n\n    // make callable (mutating, do not copy)\n    self.onDOMready = function deferDOM_initial(cb) {\n      /* if possible, skip all that */\n      if (document.readyState === \"complete\") {\n        self.onDOMready = deferDOM_ready;\n        return deferDOM_ready(cb);\n      }\n      // onDOMready, after setup, before DOM is ready\n      const enqfn = function deferDOM_enqueue(cb) {\n        if (typeof cb === \"function\") deferDOM_callbacks.push(cb);\n        return false;\n      };\n      /* subsequent calls will enqueue */\n      self.onDOMready = enqfn;\n      /* set up handler */\n      document.addEventListener(\"DOMContentLoaded\", handler, false);\n      /* last resort: always works, but later than possible */\n      window.addEventListener(\"load\", handler, false);\n      /* except if DOM got ready in the meantime */\n      if (document.readyState === \"complete\") {\n        /* undo all that attaching */\n        handler();\n        /* goto finish */\n        self.onDOMready = deferDOM_ready;\n        return deferDOM_ready(cb);\n      }\n      /* just enqueue that */\n      return enqfn(cb);\n    };\n  }\n}","map":{"version":3,"names":["DygraphTickers","type","o","LOG_SCALE","LN_TEN","Math","log","log10","x","logRangeFraction","r0","r1","pct","logr0","logr1","exponent","value","pow","DOTTED_LINE","DASHED_LINE","DOT_DASH_LINE","HORIZONTAL","VERTICAL","getContext","canvas","addEvent","elem","fn","addEventListener","removeEvent","removeEventListener","cancelEvent","e","window","event","stopPropagation","preventDefault","cancelBubble","cancel","returnValue","hsvToRGB","hue","saturation","red","green","blue","i","floor","f","p","q","t","findPos","obj","getBoundingClientRect","w","d","document","documentElement","left","pageXOffset","scrollLeft","y","top","pageYOffset","scrollTop","pageX","pageY","dragGetX_","context","px","dragGetY_","py","isOK","isNaN","isValidPoint","opt_allowNaNY","yval","undefined","floatFormat","opt_precision","min","max","abs","toExponential","toPrecision","zeropad","DateAccessorsLocal","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","getDay","makeDate","m","hh","mm","ss","ms","Date","DateAccessorsUTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","getUTCDay","UTC","hmsString_","ret","str","substring","length","dateString_","time","utc","accessors","date","year","month","day","frac","round_","num","places","shift","round","binarySearch","val","arry","low","high","validIndex","idx","mid","parseInt","element","dateParser","dateStr","dateStrSlashed","search","dateStrToMillis","replace","console","error","getTime","update","self","k","hasOwnProperty","_isNode","Node","nodeType","nodeName","updateDeep","v","isArrayLike","slice","typeArrayLike","item","isDateLike","clone","r","push","createCanvas","createElement","getContextPixelRatio","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","Iterator","array","start","predicate","hasNext","peek","start_","array_","predicate_","end_","nextIdx_","next","prototype","nextIdx","found","createIterator","opt_predicate","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","repeatAndCleanup","repeatFn","maxFrames","framePeriodInMillis","cleanupFn","frameNumber","previousFrameNumber","startTime","maxFrameArg","loop","call","currentTime","delayInMillis","frameDelta","predictOvershootStutter","pixelSafeOptions","isPixelChangingOptionList","labels","attrs","seriesNamesDictionary","scanFlatOptions","options","property","series","perSeries","Circles","DEFAULT","g","name","ctx","canvasx","canvasy","color","radius","beginPath","fillStyle","arc","PI","fill","detectLineDelimiter","data","code","charAt","isNodeContainedBy","containee","container","containeeNode","parentNode","base","exp","RGBAxRE","RGBA_RE","parseRGBA","rgbStr","bits","b","a","exec","parseFloat","toRGB_","colorStr","rgb","div","style","backgroundColor","visibility","body","appendChild","getComputedStyle","removeChild","isCanvasSupported","opt_canvasElement","parseFloat_","opt_line_no","opt_line","test","NaN","msg","KMB_LABELS_LARGE","KMB_LABELS_SMALL","KMG2_LABELS_LARGE","KMG2_LABELS_SMALL","KMB2_LABELS_LARGE","KMB2_LABELS_SMALL","numberValueFormatter","opts","sigFigs","digits","maxNumberWidth","kmb","kmg2","label","absx","k_labels","m_labels","n","j","numberAxisLabelFormatter","granularity","SHORT_MONTH_NAMES_","dateAxisLabelFormatter","hours","mins","secs","millis","Granularity","DECADAL","MONTHLY","DAILY","SECONDLY","MINUTELY","dateValueFormatter","deferDOM_callbacks","deferDOM_handlerCalled","deferDOM_ready","cb","setupDOMready_","handler","deferDOM_handler","onDOMready","deferDOM_initial","readyState","enqfn","deferDOM_enqueue"],"sources":["/Users/fneffati/Documents/Classes/TBENVDASH/frontEnd/tbenv/node_modules/dygraphs/src/dygraph-utils.js"],"sourcesContent":["/**\n * @license\n * Copyright 2011 Dan Vanderkam (danvdk@gmail.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n\n/**\n * @fileoverview This file contains utility functions used by dygraphs. These\n * are typically static (i.e. not related to any particular dygraph). Examples\n * include date/time formatting functions, basic algorithms (e.g. binary\n * search) and generic DOM-manipulation functions.\n */\n\n/*global Dygraph:false, Node:false */\n\"use strict\";\n\nimport * as DygraphTickers from './dygraph-tickers';\n\n/**\n * @param {*} o\n * @return {string}\n * @private\n */\nexport function type(o) {\n  return (o === null ? 'null' : typeof(o));\n}\n\nexport var LOG_SCALE = 10;\nexport var LN_TEN = Math.log(LOG_SCALE);\n\n/**\n * @private\n * @param {number} x\n * @return {number}\n */\nexport var log10 = function(x) {\n  return Math.log(x) / LN_TEN;\n};\n\n/**\n * @private\n * @param {number} r0\n * @param {number} r1\n * @param {number} pct\n * @return {number}\n */\nexport var logRangeFraction = function(r0, r1, pct) {\n  // Computing the inverse of toPercentXCoord. The function was arrived at with\n  // the following steps:\n  //\n  // Original calcuation:\n  // pct = (log(x) - log(xRange[0])) / (log(xRange[1]) - log(xRange[0]));\n  //\n  // Multiply both sides by the right-side denominator.\n  // pct * (log(xRange[1] - log(xRange[0]))) = log(x) - log(xRange[0])\n  //\n  // add log(xRange[0]) to both sides\n  // log(xRange[0]) + (pct * (log(xRange[1]) - log(xRange[0]))) = log(x);\n  //\n  // Swap both sides of the equation,\n  // log(x) = log(xRange[0]) + (pct * (log(xRange[1]) - log(xRange[0])))\n  //\n  // Use both sides as the exponent in 10^exp and we're done.\n  // x = 10 ^ (log(xRange[0]) + (pct * (log(xRange[1]) - log(xRange[0]))))\n\n  var logr0 = log10(r0);\n  var logr1 = log10(r1);\n  var exponent = logr0 + (pct * (logr1 - logr0));\n  var value = Math.pow(LOG_SCALE, exponent);\n  return value;\n};\n\n/** A dotted line stroke pattern. */\nexport var DOTTED_LINE = [2, 2];\n/** A dashed line stroke pattern. */\nexport var DASHED_LINE = [7, 3];\n/** A dot dash stroke pattern. */\nexport var DOT_DASH_LINE = [7, 2, 2, 2];\n\n// Directions for panning and zooming. Use bit operations when combined\n// values are possible.\nexport var HORIZONTAL = 1;\nexport var VERTICAL = 2;\n\n/**\n * Return the 2d context for a dygraph canvas.\n *\n * This method is only exposed for the sake of replacing the function in\n * automated tests.\n *\n * @param {!HTMLCanvasElement} canvas\n * @return {!CanvasRenderingContext2D}\n * @private\n */\nexport var getContext = function(canvas) {\n  return /** @type{!CanvasRenderingContext2D}*/(canvas.getContext(\"2d\"));\n};\n\n/**\n * Add an event handler.\n * @param {!Node} elem The element to add the event to.\n * @param {string} type The type of the event, e.g. 'click' or 'mousemove'.\n * @param {function(Event):(boolean|undefined)} fn The function to call\n *     on the event. The function takes one parameter: the event object.\n * @private\n */\nexport var addEvent = function addEvent(elem, type, fn) {\n  elem.addEventListener(type, fn, false);\n};\n\n/**\n * Remove an event handler.\n * @param {!Node} elem The element to remove the event from.\n * @param {string} type The type of the event, e.g. 'click' or 'mousemove'.\n * @param {function(Event):(boolean|undefined)} fn The function to call\n *     on the event. The function takes one parameter: the event object.\n */\nexport function removeEvent(elem, type, fn) {\n  elem.removeEventListener(type, fn, false);\n}\n\n/**\n * Cancels further processing of an event. This is useful to prevent default\n * browser actions, e.g. highlighting text on a double-click.\n * Based on the article at\n * http://www.switchonthecode.com/tutorials/javascript-tutorial-the-scroll-wheel\n * @param {!Event} e The event whose normal behavior should be canceled.\n * @private\n */\nexport function cancelEvent(e) {\n  e = e ? e : window.event;\n  if (e.stopPropagation) {\n    e.stopPropagation();\n  }\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  e.cancelBubble = true;\n  e.cancel = true;\n  e.returnValue = false;\n  return false;\n}\n\n/**\n * Convert hsv values to an rgb(r,g,b) string. Taken from MochiKit.Color. This\n * is used to generate default series colors which are evenly spaced on the\n * color wheel.\n * @param {number} hue Range is 0.0-1.0.\n * @param {number} saturation Range is 0.0-1.0.\n * @param {number} value Range is 0.0-1.0.\n * @return {string} \"rgb(r,g,b)\" where r, g and b range from 0-255.\n * @private\n */\nexport function hsvToRGB(hue, saturation, value) {\n  var red;\n  var green;\n  var blue;\n  if (saturation === 0) {\n    red = value;\n    green = value;\n    blue = value;\n  } else {\n    var i = Math.floor(hue * 6);\n    var f = (hue * 6) - i;\n    var p = value * (1 - saturation);\n    var q = value * (1 - (saturation * f));\n    var t = value * (1 - (saturation * (1 - f)));\n    switch (i) {\n      case 1: red = q; green = value; blue = p; break;\n      case 2: red = p; green = value; blue = t; break;\n      case 3: red = p; green = q; blue = value; break;\n      case 4: red = t; green = p; blue = value; break;\n      case 5: red = value; green = p; blue = q; break;\n      case 6: // fall through\n      case 0: red = value; green = t; blue = p; break;\n    }\n  }\n  red = Math.floor(255 * red + 0.5);\n  green = Math.floor(255 * green + 0.5);\n  blue = Math.floor(255 * blue + 0.5);\n  return 'rgb(' + red + ',' + green + ',' + blue + ')';\n}\n\n/**\n * Find the coordinates of an object relative to the top left of the page.\n *\n * @param {Node} obj\n * @return {{x:number,y:number}}\n * @private\n */\nexport function findPos(obj) {\n  var p = obj.getBoundingClientRect(),\n      w = window,\n      d = document.documentElement;\n\n  return {\n    x: p.left + (w.pageXOffset || d.scrollLeft),\n    y: p.top  + (w.pageYOffset || d.scrollTop)\n  }\n}\n\n/**\n * Returns the x-coordinate of the event in a coordinate system where the\n * top-left corner of the page (not the window) is (0,0).\n * Taken from MochiKit.Signal\n * @param {!Event} e\n * @return {number}\n * @private\n */\nexport function pageX(e) {\n  return (!e.pageX || e.pageX < 0) ? 0 : e.pageX;\n}\n\n/**\n * Returns the y-coordinate of the event in a coordinate system where the\n * top-left corner of the page (not the window) is (0,0).\n * Taken from MochiKit.Signal\n * @param {!Event} e\n * @return {number}\n * @private\n */\nexport function pageY(e) {\n  return (!e.pageY || e.pageY < 0) ? 0 : e.pageY;\n}\n\n/**\n * Converts page the x-coordinate of the event to pixel x-coordinates on the\n * canvas (i.e. DOM Coords).\n * @param {!Event} e Drag event.\n * @param {!DygraphInteractionContext} context Interaction context object.\n * @return {number} The amount by which the drag has moved to the right.\n */\nexport function dragGetX_(e, context) {\n  return pageX(e) - context.px;\n}\n\n/**\n * Converts page the y-coordinate of the event to pixel y-coordinates on the\n * canvas (i.e. DOM Coords).\n * @param {!Event} e Drag event.\n * @param {!DygraphInteractionContext} context Interaction context object.\n * @return {number} The amount by which the drag has moved down.\n */\nexport function dragGetY_(e, context) {\n  return pageY(e) - context.py;\n}\n\n/**\n * This returns true unless the parameter is 0, null, undefined or NaN.\n * TODO(danvk): rename this function to something like 'isNonZeroNan'.\n *\n * @param {number} x The number to consider.\n * @return {boolean} Whether the number is zero or NaN.\n * @private\n */\nexport function isOK(x) {\n  return !!x && !isNaN(x);\n}\n\n/**\n * @param {{x:?number,y:?number,yval:?number}} p The point to consider, valid\n *     points are {x, y} objects\n * @param {boolean=} opt_allowNaNY Treat point with y=NaN as valid\n * @return {boolean} Whether the point has numeric x and y.\n * @private\n */\nexport function isValidPoint(p, opt_allowNaNY) {\n  if (!p) return false;  // null or undefined object\n  if (p.yval === null) return false;  // missing point\n  if (p.x === null || p.x === undefined) return false;\n  if (p.y === null || p.y === undefined) return false;\n  if (isNaN(p.x) || (!opt_allowNaNY && isNaN(p.y))) return false;\n  return true;\n}\n\n/**\n * Number formatting function which mimics the behavior of %g in printf, i.e.\n * either exponential or fixed format (without trailing 0s) is used depending on\n * the length of the generated string.  The advantage of this format is that\n * there is a predictable upper bound on the resulting string length,\n * significant figures are not dropped, and normal numbers are not displayed in\n * exponential notation.\n *\n * NOTE: JavaScript's native toPrecision() is NOT a drop-in replacement for %g.\n * It creates strings which are too long for absolute values between 10^-4 and\n * 10^-6, e.g. '0.00001' instead of '1e-5'. See tests/number-format.html for\n * output examples.\n *\n * @param {number} x The number to format\n * @param {number=} opt_precision The precision to use, default 2.\n * @return {string} A string formatted like %g in printf.  The max generated\n *                  string length should be precision + 6 (e.g 1.123e+300).\n */\nexport function floatFormat(x, opt_precision) {\n  // Avoid invalid precision values; [1, 21] is the valid range.\n  var p = Math.min(Math.max(1, opt_precision || 2), 21);\n\n  // This is deceptively simple.  The actual algorithm comes from:\n  //\n  // Max allowed length = p + 4\n  // where 4 comes from 'e+n' and '.'.\n  //\n  // Length of fixed format = 2 + y + p\n  // where 2 comes from '0.' and y = # of leading zeroes.\n  //\n  // Equating the two and solving for y yields y = 2, or 0.00xxxx which is\n  // 1.0e-3.\n  //\n  // Since the behavior of toPrecision() is identical for larger numbers, we\n  // don't have to worry about the other bound.\n  //\n  // Finally, the argument for toExponential() is the number of trailing digits,\n  // so we take off 1 for the value before the '.'.\n  return (Math.abs(x) < 1.0e-3 && x !== 0.0) ?\n      x.toExponential(p - 1) : x.toPrecision(p);\n}\n\n/**\n * Converts '9' to '09' (useful for dates)\n * @param {number} x\n * @return {string}\n * @private\n */\nexport function zeropad(x) {\n  if (x < 10) return \"0\" + x; else return \"\" + x;\n}\n\n/**\n * Date accessors to get the parts of a calendar date (year, month,\n * day, hour, minute, second and millisecond) according to local time,\n * and factory method to call the Date constructor with an array of arguments.\n */\nexport var DateAccessorsLocal = {\n  getFullYear:     d => d.getFullYear(),\n  getMonth:        d => d.getMonth(),\n  getDate:         d => d.getDate(),\n  getHours:        d => d.getHours(),\n  getMinutes:      d => d.getMinutes(),\n  getSeconds:      d => d.getSeconds(),\n  getMilliseconds: d => d.getMilliseconds(),\n  getDay:          d => d.getDay(),\n  makeDate:        function(y, m, d, hh, mm, ss, ms) {\n    return new Date(y, m, d, hh, mm, ss, ms);\n  }\n};\n\n/**\n * Date accessors to get the parts of a calendar date (year, month,\n * day of month, hour, minute, second and millisecond) according to UTC time,\n * and factory method to call the Date constructor with an array of arguments.\n */\nexport var DateAccessorsUTC = {\n  getFullYear:     d => d.getUTCFullYear(),\n  getMonth:        d => d.getUTCMonth(),\n  getDate:         d => d.getUTCDate(),\n  getHours:        d => d.getUTCHours(),\n  getMinutes:      d => d.getUTCMinutes(),\n  getSeconds:      d => d.getUTCSeconds(),\n  getMilliseconds: d => d.getUTCMilliseconds(),\n  getDay:          d => d.getUTCDay(),\n  makeDate:        function(y, m, d, hh, mm, ss, ms) {\n    return new Date(Date.UTC(y, m, d, hh, mm, ss, ms));\n  }\n};\n\n/**\n * Return a string version of the hours, minutes and seconds portion of a date.\n * @param {number} hh The hours (from 0-23)\n * @param {number} mm The minutes (from 0-59)\n * @param {number} ss The seconds (from 0-59)\n * @return {string} A time of the form \"HH:MM\" or \"HH:MM:SS\"\n * @private\n */\nexport function hmsString_(hh, mm, ss, ms) {\n  var ret = zeropad(hh) + \":\" + zeropad(mm);\n  if (ss) {\n    ret += \":\" + zeropad(ss);\n    if (ms) {\n      var str = \"\" + ms;\n      ret += \".\" + ('000'+str).substring(str.length);\n    }\n  }\n  return ret;\n}\n\n/**\n * Convert a JS date (millis since epoch) to a formatted string.\n * @param {number} time The JavaScript time value (ms since epoch)\n * @param {boolean} utc Whether output UTC or local time\n * @return {string} A date of one of these forms:\n *     \"YYYY/MM/DD\", \"YYYY/MM/DD HH:MM\" or \"YYYY/MM/DD HH:MM:SS\"\n * @private\n */\nexport function dateString_(time, utc) {\n  var accessors = utc ? DateAccessorsUTC : DateAccessorsLocal;\n  var date = new Date(time);\n  var y = accessors.getFullYear(date);\n  var m = accessors.getMonth(date);\n  var d = accessors.getDate(date);\n  var hh = accessors.getHours(date);\n  var mm = accessors.getMinutes(date);\n  var ss = accessors.getSeconds(date);\n  var ms = accessors.getMilliseconds(date);\n  // Get a year string:\n  var year = \"\" + y;\n  // Get a 0 padded month string\n  var month = zeropad(m + 1);  //months are 0-offset, sigh\n  // Get a 0 padded day string\n  var day = zeropad(d);\n  var frac = hh * 3600 + mm * 60 + ss + 1e-3 * ms;\n  var ret = year + \"/\" + month + \"/\" + day;\n  if (frac) {\n    ret += \" \" + hmsString_(hh, mm, ss, ms);\n  }\n  return ret;\n}\n\n/**\n * Round a number to the specified number of digits past the decimal point.\n * @param {number} num The number to round\n * @param {number} places The number of decimals to which to round\n * @return {number} The rounded number\n * @private\n */\nexport function round_(num, places) {\n  var shift = Math.pow(10, places);\n  return Math.round(num * shift)/shift;\n}\n\n/**\n * Implementation of binary search over an array.\n * Currently does not work when val is outside the range of arry's values.\n * @param {number} val the value to search for\n * @param {Array.<number>} arry is the value over which to search\n * @param {number} abs If abs > 0, find the lowest entry greater than val\n *     If abs < 0, find the highest entry less than val.\n *     If abs == 0, find the entry that equals val.\n * @param {number=} low The first index in arry to consider (optional)\n * @param {number=} high The last index in arry to consider (optional)\n * @return {number} Index of the element, or -1 if it isn't found.\n * @private\n */\nexport function binarySearch(val, arry, abs, low, high) {\n  if (low === null || low === undefined ||\n      high === null || high === undefined) {\n    low = 0;\n    high = arry.length - 1;\n  }\n  if (low > high) {\n    return -1;\n  }\n  if (abs === null || abs === undefined) {\n    abs = 0;\n  }\n  var validIndex = function(idx) {\n    return idx >= 0 && idx < arry.length;\n  };\n  var mid = parseInt((low + high) / 2, 10);\n  var element = arry[mid];\n  var idx;\n  if (element == val) {\n    return mid;\n  } else if (element > val) {\n    if (abs > 0) {\n      // Accept if element > val, but also if prior element < val.\n      idx = mid - 1;\n      if (validIndex(idx) && arry[idx] < val) {\n        return mid;\n      }\n    }\n    return binarySearch(val, arry, abs, low, mid - 1);\n  } else if (element < val) {\n    if (abs < 0) {\n      // Accept if element < val, but also if prior element > val.\n      idx = mid + 1;\n      if (validIndex(idx) && arry[idx] > val) {\n        return mid;\n      }\n    }\n    return binarySearch(val, arry, abs, mid + 1, high);\n  }\n  return -1;  // can't actually happen, but makes closure compiler happy\n}\n\n/**\n * Parses a date, returning the number of milliseconds since epoch. This can be\n * passed in as an xValueParser in the Dygraph constructor.\n * TODO(danvk): enumerate formats that this understands.\n *\n * @param {string} dateStr A date in a variety of possible string formats.\n * @return {number} Milliseconds since epoch.\n * @private\n */\nexport function dateParser(dateStr) {\n  var dateStrSlashed;\n  var d;\n\n  // Let the system try the format first, with one caveat:\n  // YYYY-MM-DD[ HH:MM:SS] is interpreted as UTC by a variety of browsers.\n  // dygraphs displays dates in local time, so this will result in surprising\n  // inconsistencies. But if you specify \"T\" or \"Z\" (i.e. YYYY-MM-DDTHH:MM:SS),\n  // then you probably know what you're doing, so we'll let you go ahead.\n  // Issue: http://code.google.com/p/dygraphs/issues/detail?id=255\n  if (dateStr.search(\"-\") == -1 ||\n      dateStr.search(\"T\") != -1 || dateStr.search(\"Z\") != -1) {\n    d = dateStrToMillis(dateStr);\n    if (d && !isNaN(d)) return d;\n  }\n\n  if (dateStr.search(\"-\") != -1) {  // e.g. '2009-7-12' or '2009-07-12'\n    dateStrSlashed = dateStr.replace(\"-\", \"/\", \"g\");\n    while (dateStrSlashed.search(\"-\") != -1) {\n      dateStrSlashed = dateStrSlashed.replace(\"-\", \"/\");\n    }\n    d = dateStrToMillis(dateStrSlashed);\n  } else {\n    // Any format that Date.parse will accept, e.g. \"2009/07/12\" or\n    // \"2009/07/12 12:34:56\"\n    d = dateStrToMillis(dateStr);\n  }\n\n  if (!d || isNaN(d)) {\n    console.error(\"Couldn't parse \" + dateStr + \" as a date\");\n  }\n  return d;\n}\n\n/**\n * This is identical to JavaScript's built-in Date.parse() method, except that\n * it doesn't get replaced with an incompatible method by aggressive JS\n * libraries like MooTools or Joomla.\n * @param {string} str The date string, e.g. \"2011/05/06\"\n * @return {number} millis since epoch\n * @private\n */\nexport function dateStrToMillis(str) {\n  return new Date(str).getTime();\n}\n\n// These functions are all based on MochiKit.\n/**\n * Copies all the properties from o to self.\n *\n * @param {!Object} self\n * @param {!Object} o\n * @return {!Object}\n */\nexport function update(self, o) {\n  if (typeof(o) != 'undefined' && o !== null) {\n    for (var k in o) {\n      if (o.hasOwnProperty(k)) {\n        self[k] = o[k];\n      }\n    }\n  }\n  return self;\n}\n\n// internal: check if o is a DOM node, and we know it’s not null\nvar _isNode = (typeof(Node) !== 'undefined' &&\n               Node !== null && typeof(Node) === 'object') ?\n  function _isNode(o) {\n    return (o instanceof Node);\n  } : function _isNode(o) {\n    return (typeof(o) === 'object' &&\n            typeof(o.nodeType) === 'number' &&\n            typeof(o.nodeName) === 'string');\n};\n\n/**\n * Copies all the properties from o to self.\n *\n * @param {!Object} self\n * @param {!Object} o\n * @return {!Object}\n * @private\n */\nexport function updateDeep(self, o) {\n  if (typeof(o) != 'undefined' && o !== null) {\n    for (var k in o) {\n      if (o.hasOwnProperty(k)) {\n        const v = o[k];\n        if (v === null) {\n          self[k] = null;\n        } else if (isArrayLike(v)) {\n          self[k] = v.slice();\n        } else if (_isNode(v)) {\n          // DOM objects are shallowly-copied.\n          self[k] = v;\n        } else if (typeof(v) == 'object') {\n          if (typeof(self[k]) != 'object' || self[k] === null) {\n            self[k] = {};\n          }\n          updateDeep(self[k], v);\n        } else {\n          self[k] = v;\n        }\n      }\n    }\n  }\n  return self;\n}\n\n/**\n * @param {*} o\n * @return {string}\n * @private\n */\nexport function typeArrayLike(o) {\n  if (o === null)\n    return 'null';\n  const t = typeof(o);\n  if ((t === 'object' ||\n       (t === 'function' && typeof(o.item) === 'function')) &&\n      typeof(o.length) === 'number' &&\n      o.nodeType !== 3 && o.nodeType !== 4)\n    return 'array';\n  return t;\n}\n\n/**\n * @param {*} o\n * @return {boolean}\n * @private\n */\nexport function isArrayLike(o) {\n  const t = typeof(o);\n  return (o !== null &&\n          (t === 'object' ||\n           (t === 'function' && typeof(o.item) === 'function')) &&\n          typeof(o.length) === 'number' &&\n          o.nodeType !== 3 && o.nodeType !== 4);\n}\n\n/**\n * @param {Object} o\n * @return {boolean}\n * @private\n */\nexport function isDateLike(o) {\n  return (o !== null && typeof(o) === 'object' &&\n          typeof(o.getTime) === 'function');\n}\n\n/**\n * Note: this only seems to work for arrays.\n * @param {!Array} o\n * @return {!Array}\n * @private\n */\nexport function clone(o) {\n  // TODO(danvk): figure out how MochiKit's version works\n  var r = [];\n  for (var i = 0; i < o.length; i++) {\n    if (isArrayLike(o[i])) {\n      r.push(clone(o[i]));\n    } else {\n      r.push(o[i]);\n    }\n  }\n  return r;\n}\n\n/**\n * Create a new canvas element.\n *\n * @return {!HTMLCanvasElement}\n * @private\n */\nexport function createCanvas() {\n  return document.createElement('canvas');\n}\n\n/**\n * Returns the context's pixel ratio, which is the ratio between the device\n * pixel ratio and the backing store ratio. Typically this is 1 for conventional\n * displays, and > 1 for HiDPI displays (such as the Retina MBP).\n * See http://www.html5rocks.com/en/tutorials/canvas/hidpi/ for more details.\n *\n * @param {!CanvasRenderingContext2D} context The canvas's 2d context.\n * @return {number} The ratio of the device pixel ratio and the backing store\n * ratio for the specified context.\n */\nexport function getContextPixelRatio(context) {\n  try {\n    var devicePixelRatio = window.devicePixelRatio;\n    var backingStoreRatio = context.webkitBackingStorePixelRatio ||\n                            context.mozBackingStorePixelRatio ||\n                            context.msBackingStorePixelRatio ||\n                            context.oBackingStorePixelRatio ||\n                            context.backingStorePixelRatio || 1;\n    if (devicePixelRatio !== undefined) {\n      return devicePixelRatio / backingStoreRatio;\n    } else {\n      // At least devicePixelRatio must be defined for this ratio to make sense.\n      // We default backingStoreRatio to 1: this does not exist on some browsers\n      // (i.e. desktop Chrome).\n      return 1;\n    }\n  } catch (e) {\n    return 1;\n  }\n}\n\n/**\n * TODO(danvk): use @template here when it's better supported for classes.\n * @param {!Array} array\n * @param {number} start\n * @param {number} length\n * @param {function(!Array,?):boolean=} predicate\n * @constructor\n */\nexport function Iterator(array, start, length, predicate) {\n  start = start || 0;\n  length = length || array.length;\n  this.hasNext = true; // Use to identify if there's another element.\n  this.peek = null; // Use for look-ahead\n  this.start_ = start;\n  this.array_ = array;\n  this.predicate_ = predicate;\n  this.end_ = Math.min(array.length, start + length);\n  this.nextIdx_ = start - 1; // use -1 so initial advance works.\n  this.next(); // ignoring result.\n}\n\n/**\n * @return {Object}\n */\nIterator.prototype.next = function() {\n  if (!this.hasNext) {\n    return null;\n  }\n  var obj = this.peek;\n\n  var nextIdx = this.nextIdx_ + 1;\n  var found = false;\n  while (nextIdx < this.end_) {\n    if (!this.predicate_ || this.predicate_(this.array_, nextIdx)) {\n      this.peek = this.array_[nextIdx];\n      found = true;\n      break;\n    }\n    nextIdx++;\n  }\n  this.nextIdx_ = nextIdx;\n  if (!found) {\n    this.hasNext = false;\n    this.peek = null;\n  }\n  return obj;\n};\n\n/**\n * Returns a new iterator over array, between indexes start and\n * start + length, and only returns entries that pass the accept function\n *\n * @param {!Array} array the array to iterate over.\n * @param {number} start the first index to iterate over, 0 if absent.\n * @param {number} length the number of elements in the array to iterate over.\n *     This, along with start, defines a slice of the array, and so length\n *     doesn't imply the number of elements in the iterator when accept doesn't\n *     always accept all values. array.length when absent.\n * @param {function(?):boolean=} opt_predicate a function that takes\n *     parameters array and idx, which returns true when the element should be\n *     returned.  If omitted, all elements are accepted.\n * @private\n */\nexport function createIterator(array, start, length, opt_predicate) {\n  return new Iterator(array, start, length, opt_predicate);\n}\n\n// Shim layer with setTimeout fallback.\n// From: http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// Should be called with the window context:\n//   Dygraph.requestAnimFrame.call(window, function() {})\nexport var requestAnimFrame = (function() {\n  return window.requestAnimationFrame       ||\n          window.webkitRequestAnimationFrame ||\n          window.mozRequestAnimationFrame    ||\n          window.oRequestAnimationFrame      ||\n          window.msRequestAnimationFrame     ||\n          function (callback) {\n            window.setTimeout(callback, 1000 / 60);\n          };\n})();\n\n/**\n * Call a function at most maxFrames times at an attempted interval of\n * framePeriodInMillis, then call a cleanup function once. repeatFn is called\n * once immediately, then at most (maxFrames - 1) times asynchronously. If\n * maxFrames==1, then cleanup_fn() is also called synchronously.  This function\n * is used to sequence animation.\n * @param {function(number)} repeatFn Called repeatedly -- takes the frame\n *     number (from 0 to maxFrames-1) as an argument.\n * @param {number} maxFrames The max number of times to call repeatFn\n * @param {number} framePeriodInMillis Max requested time between frames.\n * @param {function()} cleanupFn A function to call after all repeatFn calls.\n * @private\n */\nexport function repeatAndCleanup(repeatFn, maxFrames, framePeriodInMillis,\n    cleanupFn) {\n  var frameNumber = 0;\n  var previousFrameNumber;\n  var startTime = new Date().getTime();\n  repeatFn(frameNumber);\n  if (maxFrames == 1) {\n    cleanupFn();\n    return;\n  }\n  var maxFrameArg = maxFrames - 1;\n\n  (function loop() {\n    if (frameNumber >= maxFrames) return;\n    requestAnimFrame.call(window, function() {\n      // Determine which frame to draw based on the delay so far.  Will skip\n      // frames if necessary.\n      var currentTime = new Date().getTime();\n      var delayInMillis = currentTime - startTime;\n      previousFrameNumber = frameNumber;\n      frameNumber = Math.floor(delayInMillis / framePeriodInMillis);\n      var frameDelta = frameNumber - previousFrameNumber;\n      // If we predict that the subsequent repeatFn call will overshoot our\n      // total frame target, so our last call will cause a stutter, then jump to\n      // the last call immediately.  If we're going to cause a stutter, better\n      // to do it faster than slower.\n      var predictOvershootStutter = (frameNumber + frameDelta) > maxFrameArg;\n      if (predictOvershootStutter || (frameNumber >= maxFrameArg)) {\n        repeatFn(maxFrameArg);  // Ensure final call with maxFrameArg.\n        cleanupFn();\n      } else {\n        if (frameDelta !== 0) {  // Don't call repeatFn with duplicate frames.\n          repeatFn(frameNumber);\n        }\n        loop();\n      }\n    });\n  })();\n}\n\n// A whitelist of options that do not change pixel positions.\nvar pixelSafeOptions = {\n  'annotationClickHandler': true,\n  'annotationDblClickHandler': true,\n  'annotationMouseOutHandler': true,\n  'annotationMouseOverHandler': true,\n  'axisLineColor': true,\n  'axisLineWidth': true,\n  'clickCallback': true,\n  'drawCallback': true,\n  'drawHighlightPointCallback': true,\n  'drawPoints': true,\n  'drawPointCallback': true,\n  'drawGrid': true,\n  'fillAlpha': true,\n  'gridLineColor': true,\n  'gridLineWidth': true,\n  'hideOverlayOnMouseOut': true,\n  'highlightCallback': true,\n  'highlightCircleSize': true,\n  'interactionModel': true,\n  'labelsDiv': true,\n  'labelsKMB': true,\n  'labelsKMG2': true,\n  'labelsSeparateLines': true,\n  'labelsShowZeroValues': true,\n  'legend': true,\n  'panEdgeFraction': true,\n  'pixelsPerYLabel': true,\n  'pointClickCallback': true,\n  'pointSize': true,\n  'rangeSelectorPlotFillColor': true,\n  'rangeSelectorPlotFillGradientColor': true,\n  'rangeSelectorPlotStrokeColor': true,\n  'rangeSelectorBackgroundStrokeColor': true,\n  'rangeSelectorBackgroundLineWidth': true,\n  'rangeSelectorPlotLineWidth': true,\n  'rangeSelectorForegroundStrokeColor': true,\n  'rangeSelectorForegroundLineWidth': true,\n  'rangeSelectorAlpha': true,\n  'showLabelsOnHighlight': true,\n  'showRoller': true,\n  'strokeWidth': true,\n  'underlayCallback': true,\n  'unhighlightCallback': true,\n  'zoomCallback': true\n};\n\n/**\n * This function will scan the option list and determine if they\n * require us to recalculate the pixel positions of each point.\n * TODO: move this into dygraph-options.js\n * @param {!Array.<string>} labels a list of options to check.\n * @param {!Object} attrs\n * @return {boolean} true if the graph needs new points else false.\n * @private\n */\nexport function isPixelChangingOptionList(labels, attrs) {\n  // Assume that we do not require new points.\n  // This will change to true if we actually do need new points.\n\n  // Create a dictionary of series names for faster lookup.\n  // If there are no labels, then the dictionary stays empty.\n  var seriesNamesDictionary = { };\n  if (labels) {\n    for (var i = 1; i < labels.length; i++) {\n      seriesNamesDictionary[labels[i]] = true;\n    }\n  }\n\n  // Scan through a flat (i.e. non-nested) object of options.\n  // Returns true/false depending on whether new points are needed.\n  var scanFlatOptions = function(options) {\n    for (var property in options) {\n      if (options.hasOwnProperty(property) &&\n          !pixelSafeOptions[property]) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  // Iterate through the list of updated options.\n  for (var property in attrs) {\n    if (!attrs.hasOwnProperty(property)) continue;\n\n    // Find out of this field is actually a series specific options list.\n    if (property == 'highlightSeriesOpts' ||\n        (seriesNamesDictionary[property] && !attrs.series)) {\n      // This property value is a list of options for this series.\n      if (scanFlatOptions(attrs[property])) return true;\n    } else if (property == 'series' || property == 'axes') {\n      // This is twice-nested options list.\n      var perSeries = attrs[property];\n      for (var series in perSeries) {\n        if (perSeries.hasOwnProperty(series) &&\n            scanFlatOptions(perSeries[series])) {\n          return true;\n        }\n      }\n    } else {\n      // If this was not a series specific option list,\n      // check if it's a pixel-changing property.\n      if (!pixelSafeOptions[property]) return true;\n    }\n  }\n\n  return false;\n}\n\nexport var Circles = {\n  DEFAULT : function(g, name, ctx, canvasx, canvasy, color, radius) {\n    ctx.beginPath();\n    ctx.fillStyle = color;\n    ctx.arc(canvasx, canvasy, radius, 0, 2 * Math.PI, false);\n    ctx.fill();\n  }\n  // For more shapes, include extras/shapes.js\n};\n\n/**\n * Determine whether |data| is delimited by CR, CRLF, LF, LFCR.\n * @param {string} data\n * @return {?string} the delimiter that was detected (or null on failure).\n */\nexport function detectLineDelimiter(data) {\n  for (var i = 0; i < data.length; i++) {\n    var code = data.charAt(i);\n    if (code === '\\r') {\n      // Might actually be \"\\r\\n\".\n      if (((i + 1) < data.length) && (data.charAt(i + 1) === '\\n')) {\n        return '\\r\\n';\n      }\n      return code;\n    }\n    if (code === '\\n') {\n      // Might actually be \"\\n\\r\".\n      if (((i + 1) < data.length) && (data.charAt(i + 1) === '\\r')) {\n        return '\\n\\r';\n      }\n      return code;\n    }\n  }\n\n  return null;\n}\n\n/**\n * Is one node contained by another?\n * @param {Node} containee The contained node.\n * @param {Node} container The container node.\n * @return {boolean} Whether containee is inside (or equal to) container.\n * @private\n */\nexport function isNodeContainedBy(containee, container) {\n  if (container === null || containee === null) {\n    return false;\n  }\n  var containeeNode = /** @type {Node} */ (containee);\n  while (containeeNode && containeeNode !== container) {\n    containeeNode = containeeNode.parentNode;\n  }\n  return (containeeNode === container);\n}\n\n// This masks some numeric issues in older versions of Firefox,\n// where 1.0/Math.pow(10,2) != Math.pow(10,-2).\n/** @type {function(number,number):number} */\nexport function pow(base, exp) {\n  if (exp < 0) {\n    return 1.0 / Math.pow(base, -exp);\n  }\n  return Math.pow(base, exp);\n}\n\nvar RGBAxRE = /^#([0-9A-Fa-f]{2})([0-9A-Fa-f]{2})([0-9A-Fa-f]{2})([0-9A-Fa-f]{2})?$/;\nvar RGBA_RE = /^rgba?\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})(?:,\\s*([01](?:\\.\\d+)?))?\\)$/;\n\n/**\n * Helper for toRGB_ which parses strings of the form:\n * #RRGGBB (hex)\n * #RRGGBBAA (hex)\n * rgb(123, 45, 67)\n * rgba(123, 45, 67, 0.5)\n * @return parsed {r,g,b,a?} tuple or null.\n */\nfunction parseRGBA(rgbStr) {\n  var bits, r, g, b, a = null;\n  if ((bits = RGBAxRE.exec(rgbStr))) {\n    r = parseInt(bits[1], 16);\n    g = parseInt(bits[2], 16);\n    b = parseInt(bits[3], 16);\n    if (bits[4])\n      a = parseInt(bits[4], 16);\n  } else if ((bits = RGBA_RE.exec(rgbStr))) {\n    r = parseInt(bits[1], 10);\n    g = parseInt(bits[2], 10);\n    b = parseInt(bits[3], 10);\n    if (bits[4])\n      a = parseFloat(bits[4]);\n  } else\n    return null;\n  if (a !== null)\n    return { \"r\": r, \"g\": g, \"b\": b, \"a\": a };\n  return { \"r\": r, \"g\": g, \"b\": b };\n}\n\n/**\n * Converts any valid CSS color (hex, rgb(), named color) to an RGB tuple.\n *\n * @param {!string} colorStr Any valid CSS color string.\n * @return {{r:number,g:number,b:number,a:number?}} Parsed RGB tuple.\n * @private\n */\nexport function toRGB_(colorStr) {\n  // Strategy: First try to parse colorStr directly. This is fast & avoids DOM\n  // manipulation.  If that fails (e.g. for named colors like 'red'), then\n  // create a hidden DOM element and parse its computed color.\n  var rgb = parseRGBA(colorStr);\n  if (rgb) return rgb;\n\n  var div = document.createElement('div');\n  div.style.backgroundColor = colorStr;\n  div.style.visibility = 'hidden';\n  document.body.appendChild(div);\n  var rgbStr = window.getComputedStyle(div, null).backgroundColor;\n  document.body.removeChild(div);\n  return parseRGBA(rgbStr);\n}\n\n/**\n * Checks whether the browser supports the &lt;canvas&gt; tag.\n * @param {HTMLCanvasElement=} opt_canvasElement Pass a canvas element as an\n *     optimization if you have one.\n * @return {boolean} Whether the browser supports canvas.\n */\nexport function isCanvasSupported(opt_canvasElement) {\n  try {\n    var canvas = opt_canvasElement || document.createElement(\"canvas\");\n    canvas.getContext(\"2d\");\n  } catch (e) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Parses the value as a floating point number. This is like the parseFloat()\n * built-in, but with a few differences:\n * - the empty string is parsed as null, rather than NaN.\n * - if the string cannot be parsed at all, an error is logged.\n * If the string can't be parsed, this method returns null.\n * @param {string} x The string to be parsed\n * @param {number=} opt_line_no The line number from which the string comes.\n * @param {string=} opt_line The text of the line from which the string comes.\n */\nexport function parseFloat_(x, opt_line_no, opt_line) {\n  var val = parseFloat(x);\n  if (!isNaN(val)) return val;\n\n  // Try to figure out what happeend.\n  // If the value is the empty string, parse it as null.\n  if (/^ *$/.test(x)) return null;\n\n  // If it was actually \"NaN\", return it as NaN.\n  if (/^ *nan *$/i.test(x)) return NaN;\n\n  // Looks like a parsing error.\n  var msg = \"Unable to parse '\" + x + \"' as a number\";\n  if (opt_line !== undefined && opt_line_no !== undefined) {\n    msg += \" on line \" + (1+(opt_line_no||0)) + \" ('\" + opt_line + \"') of CSV.\";\n  }\n  console.error(msg);\n\n  return null;\n}\n\n// Label constants for the labelsKMB and labelsKMG2 options.\n// (i.e. '100000' -> '100k')\nvar KMB_LABELS_LARGE = [ 'k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y' ];\nvar KMB_LABELS_SMALL = [ 'm', 'µ', 'n', 'p', 'f', 'a', 'z', 'y' ];\nvar KMG2_LABELS_LARGE = [ 'Ki', 'Mi', 'Gi', 'Ti', 'Pi', 'Ei', 'Zi', 'Yi' ];\nvar KMG2_LABELS_SMALL = [ 'p-10', 'p-20', 'p-30', 'p-40', 'p-50', 'p-60', 'p-70', 'p-80' ];\n/* if both are given (legacy/deprecated use only) */\nvar KMB2_LABELS_LARGE = [ 'K', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y' ];\nvar KMB2_LABELS_SMALL = KMB_LABELS_SMALL;\n\n/**\n * @private\n * Return a string version of a number. This respects the digitsAfterDecimal\n * and maxNumberWidth options.\n * @param {number} x The number to be formatted\n * @param {Dygraph} opts An options view\n */\nexport function numberValueFormatter(x, opts) {\n  var sigFigs = opts('sigFigs');\n\n  if (sigFigs !== null) {\n    // User has opted for a fixed number of significant figures.\n    return floatFormat(x, sigFigs);\n  }\n\n  // shortcut 0 so later code does not need to worry about it\n  if (x === 0.0)\n    return '0';\n\n  var digits = opts('digitsAfterDecimal');\n  var maxNumberWidth = opts('maxNumberWidth');\n\n  var kmb = opts('labelsKMB');\n  var kmg2 = opts('labelsKMG2');\n\n  var label;\n  var absx = Math.abs(x);\n\n  if (kmb || kmg2) {\n    var k;\n    var k_labels = [];\n    var m_labels = [];\n    if (kmb) {\n      k = 1000;\n      k_labels = KMB_LABELS_LARGE;\n      m_labels = KMB_LABELS_SMALL;\n    }\n    if (kmg2) {\n      k = 1024;\n      k_labels = KMG2_LABELS_LARGE;\n      m_labels = KMG2_LABELS_SMALL;\n      if (kmb) {\n        k_labels = KMB2_LABELS_LARGE;\n        m_labels = KMB2_LABELS_SMALL;\n      }\n    }\n\n    var n;\n    var j;\n    if (absx >= k) {\n      j = k_labels.length;\n      while (j > 0) {\n        n = pow(k, j);\n        --j;\n        if (absx >= n) {\n          // guaranteed to hit because absx >= k (pow(k, 1))\n          // if immensely large still switch to scientific notation\n          if ((absx / n) >= Math.pow(10, maxNumberWidth))\n            label = x.toExponential(digits);\n          else\n            label = round_(x / n, digits) + k_labels[j];\n          return label;\n        }\n      }\n      // not reached, fall through safely though should it ever be\n    } else if ((absx < 1) /* && (m_labels.length > 0) */) {\n      j = 0;\n      while (j < m_labels.length) {\n        ++j;\n        n = pow(k, j);\n        if ((absx * n) >= 1)\n          break;\n      }\n      // if _still_ too small, switch to scientific notation instead\n      if ((absx * n) < Math.pow(10, -digits))\n        label = x.toExponential(digits);\n      else\n        label = round_(x * n, digits) + m_labels[j - 1];\n      return label;\n    }\n    // else fall through\n  }\n\n  if (absx >= Math.pow(10, maxNumberWidth) ||\n      absx < Math.pow(10, -digits)) {\n    // switch to scientific notation if we underflow or overflow fixed display\n    label = x.toExponential(digits);\n  } else {\n    label = '' + round_(x, digits);\n  }\n\n  return label;\n}\n\n/**\n * variant for use as an axisLabelFormatter.\n * @private\n */\nexport function numberAxisLabelFormatter(x, granularity, opts) {\n  return numberValueFormatter.call(this, x, opts);\n}\n\n/**\n * @type {!Array.<string>}\n * @private\n * @constant\n */\nvar SHORT_MONTH_NAMES_ = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n/**\n * Convert a JS date to a string appropriate to display on an axis that\n * is displaying values at the stated granularity. This respects the\n * labelsUTC option.\n * @param {Date} date The date to format\n * @param {number} granularity One of the Dygraph granularity constants\n * @param {Dygraph} opts An options view\n * @return {string} The date formatted as local time\n * @private\n */\nexport function dateAxisLabelFormatter(date, granularity, opts) {\n  var utc = opts('labelsUTC');\n  var accessors = utc ? DateAccessorsUTC : DateAccessorsLocal;\n\n  var year = accessors.getFullYear(date),\n      month = accessors.getMonth(date),\n      day = accessors.getDate(date),\n      hours = accessors.getHours(date),\n      mins = accessors.getMinutes(date),\n      secs = accessors.getSeconds(date),\n      millis = accessors.getMilliseconds(date);\n\n  if (granularity >= DygraphTickers.Granularity.DECADAL) {\n    return '' + year;\n  } else if (granularity >= DygraphTickers.Granularity.MONTHLY) {\n    return SHORT_MONTH_NAMES_[month] + '&#160;' + year;\n  } else {\n    var frac = hours * 3600 + mins * 60 + secs + 1e-3 * millis;\n    if (frac === 0 || granularity >= DygraphTickers.Granularity.DAILY) {\n      // e.g. '21 Jan' (%d%b)\n      return zeropad(day) + '&#160;' + SHORT_MONTH_NAMES_[month];\n    } else if (granularity < DygraphTickers.Granularity.SECONDLY) {\n      // e.g. 40.310 (meaning 40 seconds and 310 milliseconds)\n      var str = \"\" + millis;\n      return zeropad(secs) + \".\" + ('000'+str).substring(str.length);\n    } else if (granularity > DygraphTickers.Granularity.MINUTELY) {\n      return hmsString_(hours, mins, secs, 0);\n    } else {\n      return hmsString_(hours, mins, secs, millis);\n    }\n  }\n}\n\n/**\n * Return a string version of a JS date for a value label. This respects the\n * labelsUTC option.\n * @param {Date} date The date to be formatted\n * @param {Dygraph} opts An options view\n * @private\n */\nexport function dateValueFormatter(d, opts) {\n  return dateString_(d, opts('labelsUTC'));\n}\n\n// stuff for simple onDOMready implementation\nvar deferDOM_callbacks = [];\nvar deferDOM_handlerCalled = false;\n\n// onDOMready once DOM is ready\n/**\n * Simple onDOMready implementation\n * @param {function()} cb The callback to run once the DOM is ready.\n * @return {boolean} whether the DOM is currently ready\n */\nfunction deferDOM_ready(cb) {\n  if (typeof(cb) === \"function\")\n    cb();\n  return (true);\n}\n\n/**\n * Setup a simple onDOMready implementation on the given objct.\n * @param {*} self the object to update .onDOMready on\n * @private\n */\nexport function setupDOMready_(self) {\n  // only attach if there’s a DOM\n  if (typeof(document) !== \"undefined\") {\n    // called by browser\n    const handler = function deferDOM_handler() {\n      /* execute only once */\n      if (deferDOM_handlerCalled)\n        return;\n      deferDOM_handlerCalled = true;\n      /* subsequent calls must not enqueue */\n      self.onDOMready = deferDOM_ready;\n      /* clear event handlers */\n      document.removeEventListener(\"DOMContentLoaded\", handler, false);\n      window.removeEventListener(\"load\", handler, false);\n      /* run user callbacks */\n      for (let i = 0; i < deferDOM_callbacks.length; ++i)\n        deferDOM_callbacks[i]();\n      deferDOM_callbacks = null; //gc\n    };\n\n    // make callable (mutating, do not copy)\n    self.onDOMready = function deferDOM_initial(cb) {\n      /* if possible, skip all that */\n      if (document.readyState === \"complete\") {\n        self.onDOMready = deferDOM_ready;\n        return (deferDOM_ready(cb));\n      }\n      // onDOMready, after setup, before DOM is ready\n      const enqfn = function deferDOM_enqueue(cb) {\n        if (typeof(cb) === \"function\")\n          deferDOM_callbacks.push(cb);\n        return (false);\n      };\n      /* subsequent calls will enqueue */\n      self.onDOMready = enqfn;\n      /* set up handler */\n      document.addEventListener(\"DOMContentLoaded\", handler, false);\n      /* last resort: always works, but later than possible */\n      window.addEventListener(\"load\", handler, false);\n      /* except if DOM got ready in the meantime */\n      if (document.readyState === \"complete\") {\n        /* undo all that attaching */\n        handler();\n        /* goto finish */\n        self.onDOMready = deferDOM_ready;\n        return (deferDOM_ready(cb));\n      }\n      /* just enqueue that */\n      return (enqfn(cb));\n    };\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;;AAEZ,OAAO,KAAKA,cAAc,MAAM,mBAAmB;;AAEnD;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,IAAIA,CAACC,CAAC,EAAE;EACtB,OAAQA,CAAC,KAAK,IAAI,GAAG,MAAM,GAAG,OAAOA,CAAE;AACzC;AAEA,OAAO,IAAIC,SAAS,GAAG,EAAE;AACzB,OAAO,IAAIC,MAAM,GAAGC,IAAI,CAACC,GAAG,CAACH,SAAS,CAAC;;AAEvC;AACA;AACA;AACA;AACA;AACA,OAAO,IAAII,KAAK,GAAG,SAAAA,CAASC,CAAC,EAAE;EAC7B,OAAOH,IAAI,CAACC,GAAG,CAACE,CAAC,CAAC,GAAGJ,MAAM;AAC7B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIK,gBAAgB,GAAG,SAAAA,CAASC,EAAE,EAAEC,EAAE,EAAEC,GAAG,EAAE;EAClD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAIC,KAAK,GAAGN,KAAK,CAACG,EAAE,CAAC;EACrB,IAAII,KAAK,GAAGP,KAAK,CAACI,EAAE,CAAC;EACrB,IAAII,QAAQ,GAAGF,KAAK,GAAID,GAAG,IAAIE,KAAK,GAAGD,KAAK,CAAE;EAC9C,IAAIG,KAAK,GAAGX,IAAI,CAACY,GAAG,CAACd,SAAS,EAAEY,QAAQ,CAAC;EACzC,OAAOC,KAAK;AACd,CAAC;;AAED;AACA,OAAO,IAAIE,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAC/B;AACA,OAAO,IAAIC,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAC/B;AACA,OAAO,IAAIC,aAAa,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;AAEvC;AACA;AACA,OAAO,IAAIC,UAAU,GAAG,CAAC;AACzB,OAAO,IAAIC,QAAQ,GAAG,CAAC;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,UAAU,GAAG,SAAAA,CAASC,MAAM,EAAE;EACvC,OAAO,sCAAuCA,MAAM,CAACD,UAAU,CAAC,IAAI,CAAC;AACvE,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIE,QAAQ,GAAG,SAASA,QAAQA,CAACC,IAAI,EAAEzB,IAAI,EAAE0B,EAAE,EAAE;EACtDD,IAAI,CAACE,gBAAgB,CAAC3B,IAAI,EAAE0B,EAAE,EAAE,KAAK,CAAC;AACxC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,WAAWA,CAACH,IAAI,EAAEzB,IAAI,EAAE0B,EAAE,EAAE;EAC1CD,IAAI,CAACI,mBAAmB,CAAC7B,IAAI,EAAE0B,EAAE,EAAE,KAAK,CAAC;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASI,WAAWA,CAACC,CAAC,EAAE;EAC7BA,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAGC,MAAM,CAACC,KAAK;EACxB,IAAIF,CAAC,CAACG,eAAe,EAAE;IACrBH,CAAC,CAACG,eAAe,CAAC,CAAC;EACrB;EACA,IAAIH,CAAC,CAACI,cAAc,EAAE;IACpBJ,CAAC,CAACI,cAAc,CAAC,CAAC;EACpB;EACAJ,CAAC,CAACK,YAAY,GAAG,IAAI;EACrBL,CAAC,CAACM,MAAM,GAAG,IAAI;EACfN,CAAC,CAACO,WAAW,GAAG,KAAK;EACrB,OAAO,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,QAAQA,CAACC,GAAG,EAAEC,UAAU,EAAE1B,KAAK,EAAE;EAC/C,IAAI2B,GAAG;EACP,IAAIC,KAAK;EACT,IAAIC,IAAI;EACR,IAAIH,UAAU,KAAK,CAAC,EAAE;IACpBC,GAAG,GAAG3B,KAAK;IACX4B,KAAK,GAAG5B,KAAK;IACb6B,IAAI,GAAG7B,KAAK;EACd,CAAC,MAAM;IACL,IAAI8B,CAAC,GAAGzC,IAAI,CAAC0C,KAAK,CAACN,GAAG,GAAG,CAAC,CAAC;IAC3B,IAAIO,CAAC,GAAIP,GAAG,GAAG,CAAC,GAAIK,CAAC;IACrB,IAAIG,CAAC,GAAGjC,KAAK,IAAI,CAAC,GAAG0B,UAAU,CAAC;IAChC,IAAIQ,CAAC,GAAGlC,KAAK,IAAI,CAAC,GAAI0B,UAAU,GAAGM,CAAE,CAAC;IACtC,IAAIG,CAAC,GAAGnC,KAAK,IAAI,CAAC,GAAI0B,UAAU,IAAI,CAAC,GAAGM,CAAC,CAAE,CAAC;IAC5C,QAAQF,CAAC;MACP,KAAK,CAAC;QAAEH,GAAG,GAAGO,CAAC;QAAEN,KAAK,GAAG5B,KAAK;QAAE6B,IAAI,GAAGI,CAAC;QAAE;MAC1C,KAAK,CAAC;QAAEN,GAAG,GAAGM,CAAC;QAAEL,KAAK,GAAG5B,KAAK;QAAE6B,IAAI,GAAGM,CAAC;QAAE;MAC1C,KAAK,CAAC;QAAER,GAAG,GAAGM,CAAC;QAAEL,KAAK,GAAGM,CAAC;QAAEL,IAAI,GAAG7B,KAAK;QAAE;MAC1C,KAAK,CAAC;QAAE2B,GAAG,GAAGQ,CAAC;QAAEP,KAAK,GAAGK,CAAC;QAAEJ,IAAI,GAAG7B,KAAK;QAAE;MAC1C,KAAK,CAAC;QAAE2B,GAAG,GAAG3B,KAAK;QAAE4B,KAAK,GAAGK,CAAC;QAAEJ,IAAI,GAAGK,CAAC;QAAE;MAC1C,KAAK,CAAC,CAAC,CAAC;MACR,KAAK,CAAC;QAAEP,GAAG,GAAG3B,KAAK;QAAE4B,KAAK,GAAGO,CAAC;QAAEN,IAAI,GAAGI,CAAC;QAAE;IAC5C;EACF;EACAN,GAAG,GAAGtC,IAAI,CAAC0C,KAAK,CAAC,GAAG,GAAGJ,GAAG,GAAG,GAAG,CAAC;EACjCC,KAAK,GAAGvC,IAAI,CAAC0C,KAAK,CAAC,GAAG,GAAGH,KAAK,GAAG,GAAG,CAAC;EACrCC,IAAI,GAAGxC,IAAI,CAAC0C,KAAK,CAAC,GAAG,GAAGF,IAAI,GAAG,GAAG,CAAC;EACnC,OAAO,MAAM,GAAGF,GAAG,GAAG,GAAG,GAAGC,KAAK,GAAG,GAAG,GAAGC,IAAI,GAAG,GAAG;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASO,OAAOA,CAACC,GAAG,EAAE;EAC3B,IAAIJ,CAAC,GAAGI,GAAG,CAACC,qBAAqB,CAAC,CAAC;IAC/BC,CAAC,GAAGtB,MAAM;IACVuB,CAAC,GAAGC,QAAQ,CAACC,eAAe;EAEhC,OAAO;IACLlD,CAAC,EAAEyC,CAAC,CAACU,IAAI,IAAIJ,CAAC,CAACK,WAAW,IAAIJ,CAAC,CAACK,UAAU,CAAC;IAC3CC,CAAC,EAAEb,CAAC,CAACc,GAAG,IAAKR,CAAC,CAACS,WAAW,IAAIR,CAAC,CAACS,SAAS;EAC3C,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,KAAKA,CAAClC,CAAC,EAAE;EACvB,OAAQ,CAACA,CAAC,CAACkC,KAAK,IAAIlC,CAAC,CAACkC,KAAK,GAAG,CAAC,GAAI,CAAC,GAAGlC,CAAC,CAACkC,KAAK;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,KAAKA,CAACnC,CAAC,EAAE;EACvB,OAAQ,CAACA,CAAC,CAACmC,KAAK,IAAInC,CAAC,CAACmC,KAAK,GAAG,CAAC,GAAI,CAAC,GAAGnC,CAAC,CAACmC,KAAK;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAACpC,CAAC,EAAEqC,OAAO,EAAE;EACpC,OAAOH,KAAK,CAAClC,CAAC,CAAC,GAAGqC,OAAO,CAACC,EAAE;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAACvC,CAAC,EAAEqC,OAAO,EAAE;EACpC,OAAOF,KAAK,CAACnC,CAAC,CAAC,GAAGqC,OAAO,CAACG,EAAE;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,IAAIA,CAACjE,CAAC,EAAE;EACtB,OAAO,CAAC,CAACA,CAAC,IAAI,CAACkE,KAAK,CAAClE,CAAC,CAAC;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASmE,YAAYA,CAAC1B,CAAC,EAAE2B,aAAa,EAAE;EAC7C,IAAI,CAAC3B,CAAC,EAAE,OAAO,KAAK,CAAC,CAAE;EACvB,IAAIA,CAAC,CAAC4B,IAAI,KAAK,IAAI,EAAE,OAAO,KAAK,CAAC,CAAE;EACpC,IAAI5B,CAAC,CAACzC,CAAC,KAAK,IAAI,IAAIyC,CAAC,CAACzC,CAAC,KAAKsE,SAAS,EAAE,OAAO,KAAK;EACnD,IAAI7B,CAAC,CAACa,CAAC,KAAK,IAAI,IAAIb,CAAC,CAACa,CAAC,KAAKgB,SAAS,EAAE,OAAO,KAAK;EACnD,IAAIJ,KAAK,CAACzB,CAAC,CAACzC,CAAC,CAAC,IAAK,CAACoE,aAAa,IAAIF,KAAK,CAACzB,CAAC,CAACa,CAAC,CAAE,EAAE,OAAO,KAAK;EAC9D,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASiB,WAAWA,CAACvE,CAAC,EAAEwE,aAAa,EAAE;EAC5C;EACA,IAAI/B,CAAC,GAAG5C,IAAI,CAAC4E,GAAG,CAAC5E,IAAI,CAAC6E,GAAG,CAAC,CAAC,EAAEF,aAAa,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC;;EAErD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,OAAQ3E,IAAI,CAAC8E,GAAG,CAAC3E,CAAC,CAAC,GAAG,MAAM,IAAIA,CAAC,KAAK,GAAG,GACrCA,CAAC,CAAC4E,aAAa,CAACnC,CAAC,GAAG,CAAC,CAAC,GAAGzC,CAAC,CAAC6E,WAAW,CAACpC,CAAC,CAAC;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASqC,OAAOA,CAAC9E,CAAC,EAAE;EACzB,IAAIA,CAAC,GAAG,EAAE,EAAE,OAAO,GAAG,GAAGA,CAAC,CAAC,KAAM,OAAO,EAAE,GAAGA,CAAC;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAI+E,kBAAkB,GAAG;EAC9BC,WAAW,EAAMhC,CAAC,IAAIA,CAAC,CAACgC,WAAW,CAAC,CAAC;EACrCC,QAAQ,EAASjC,CAAC,IAAIA,CAAC,CAACiC,QAAQ,CAAC,CAAC;EAClCC,OAAO,EAAUlC,CAAC,IAAIA,CAAC,CAACkC,OAAO,CAAC,CAAC;EACjCC,QAAQ,EAASnC,CAAC,IAAIA,CAAC,CAACmC,QAAQ,CAAC,CAAC;EAClCC,UAAU,EAAOpC,CAAC,IAAIA,CAAC,CAACoC,UAAU,CAAC,CAAC;EACpCC,UAAU,EAAOrC,CAAC,IAAIA,CAAC,CAACqC,UAAU,CAAC,CAAC;EACpCC,eAAe,EAAEtC,CAAC,IAAIA,CAAC,CAACsC,eAAe,CAAC,CAAC;EACzCC,MAAM,EAAWvC,CAAC,IAAIA,CAAC,CAACuC,MAAM,CAAC,CAAC;EAChCC,QAAQ,EAAS,SAAAA,CAASlC,CAAC,EAAEmC,CAAC,EAAEzC,CAAC,EAAE0C,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;IACjD,OAAO,IAAIC,IAAI,CAACxC,CAAC,EAAEmC,CAAC,EAAEzC,CAAC,EAAE0C,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;EAC1C;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIE,gBAAgB,GAAG;EAC5Bf,WAAW,EAAMhC,CAAC,IAAIA,CAAC,CAACgD,cAAc,CAAC,CAAC;EACxCf,QAAQ,EAASjC,CAAC,IAAIA,CAAC,CAACiD,WAAW,CAAC,CAAC;EACrCf,OAAO,EAAUlC,CAAC,IAAIA,CAAC,CAACkD,UAAU,CAAC,CAAC;EACpCf,QAAQ,EAASnC,CAAC,IAAIA,CAAC,CAACmD,WAAW,CAAC,CAAC;EACrCf,UAAU,EAAOpC,CAAC,IAAIA,CAAC,CAACoD,aAAa,CAAC,CAAC;EACvCf,UAAU,EAAOrC,CAAC,IAAIA,CAAC,CAACqD,aAAa,CAAC,CAAC;EACvCf,eAAe,EAAEtC,CAAC,IAAIA,CAAC,CAACsD,kBAAkB,CAAC,CAAC;EAC5Cf,MAAM,EAAWvC,CAAC,IAAIA,CAAC,CAACuD,SAAS,CAAC,CAAC;EACnCf,QAAQ,EAAS,SAAAA,CAASlC,CAAC,EAAEmC,CAAC,EAAEzC,CAAC,EAAE0C,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;IACjD,OAAO,IAAIC,IAAI,CAACA,IAAI,CAACU,GAAG,CAAClD,CAAC,EAAEmC,CAAC,EAAEzC,CAAC,EAAE0C,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC,CAAC;EACpD;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASY,UAAUA,CAACf,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;EACzC,IAAIa,GAAG,GAAG5B,OAAO,CAACY,EAAE,CAAC,GAAG,GAAG,GAAGZ,OAAO,CAACa,EAAE,CAAC;EACzC,IAAIC,EAAE,EAAE;IACNc,GAAG,IAAI,GAAG,GAAG5B,OAAO,CAACc,EAAE,CAAC;IACxB,IAAIC,EAAE,EAAE;MACN,IAAIc,GAAG,GAAG,EAAE,GAAGd,EAAE;MACjBa,GAAG,IAAI,GAAG,GAAG,CAAC,KAAK,GAACC,GAAG,EAAEC,SAAS,CAACD,GAAG,CAACE,MAAM,CAAC;IAChD;EACF;EACA,OAAOH,GAAG;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASI,WAAWA,CAACC,IAAI,EAAEC,GAAG,EAAE;EACrC,IAAIC,SAAS,GAAGD,GAAG,GAAGjB,gBAAgB,GAAGhB,kBAAkB;EAC3D,IAAImC,IAAI,GAAG,IAAIpB,IAAI,CAACiB,IAAI,CAAC;EACzB,IAAIzD,CAAC,GAAG2D,SAAS,CAACjC,WAAW,CAACkC,IAAI,CAAC;EACnC,IAAIzB,CAAC,GAAGwB,SAAS,CAAChC,QAAQ,CAACiC,IAAI,CAAC;EAChC,IAAIlE,CAAC,GAAGiE,SAAS,CAAC/B,OAAO,CAACgC,IAAI,CAAC;EAC/B,IAAIxB,EAAE,GAAGuB,SAAS,CAAC9B,QAAQ,CAAC+B,IAAI,CAAC;EACjC,IAAIvB,EAAE,GAAGsB,SAAS,CAAC7B,UAAU,CAAC8B,IAAI,CAAC;EACnC,IAAItB,EAAE,GAAGqB,SAAS,CAAC5B,UAAU,CAAC6B,IAAI,CAAC;EACnC,IAAIrB,EAAE,GAAGoB,SAAS,CAAC3B,eAAe,CAAC4B,IAAI,CAAC;EACxC;EACA,IAAIC,IAAI,GAAG,EAAE,GAAG7D,CAAC;EACjB;EACA,IAAI8D,KAAK,GAAGtC,OAAO,CAACW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAE;EAC7B;EACA,IAAI4B,GAAG,GAAGvC,OAAO,CAAC9B,CAAC,CAAC;EACpB,IAAIsE,IAAI,GAAG5B,EAAE,GAAG,IAAI,GAAGC,EAAE,GAAG,EAAE,GAAGC,EAAE,GAAG,IAAI,GAAGC,EAAE;EAC/C,IAAIa,GAAG,GAAGS,IAAI,GAAG,GAAG,GAAGC,KAAK,GAAG,GAAG,GAAGC,GAAG;EACxC,IAAIC,IAAI,EAAE;IACRZ,GAAG,IAAI,GAAG,GAAGD,UAAU,CAACf,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;EACzC;EACA,OAAOa,GAAG;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASa,MAAMA,CAACC,GAAG,EAAEC,MAAM,EAAE;EAClC,IAAIC,KAAK,GAAG7H,IAAI,CAACY,GAAG,CAAC,EAAE,EAAEgH,MAAM,CAAC;EAChC,OAAO5H,IAAI,CAAC8H,KAAK,CAACH,GAAG,GAAGE,KAAK,CAAC,GAACA,KAAK;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,YAAYA,CAACC,GAAG,EAAEC,IAAI,EAAEnD,GAAG,EAAEoD,GAAG,EAAEC,IAAI,EAAE;EACtD,IAAID,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAKzD,SAAS,IACjC0D,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK1D,SAAS,EAAE;IACvCyD,GAAG,GAAG,CAAC;IACPC,IAAI,GAAGF,IAAI,CAACjB,MAAM,GAAG,CAAC;EACxB;EACA,IAAIkB,GAAG,GAAGC,IAAI,EAAE;IACd,OAAO,CAAC,CAAC;EACX;EACA,IAAIrD,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAKL,SAAS,EAAE;IACrCK,GAAG,GAAG,CAAC;EACT;EACA,IAAIsD,UAAU,GAAG,SAAAA,CAASC,GAAG,EAAE;IAC7B,OAAOA,GAAG,IAAI,CAAC,IAAIA,GAAG,GAAGJ,IAAI,CAACjB,MAAM;EACtC,CAAC;EACD,IAAIsB,GAAG,GAAGC,QAAQ,CAAC,CAACL,GAAG,GAAGC,IAAI,IAAI,CAAC,EAAE,EAAE,CAAC;EACxC,IAAIK,OAAO,GAAGP,IAAI,CAACK,GAAG,CAAC;EACvB,IAAID,GAAG;EACP,IAAIG,OAAO,IAAIR,GAAG,EAAE;IAClB,OAAOM,GAAG;EACZ,CAAC,MAAM,IAAIE,OAAO,GAAGR,GAAG,EAAE;IACxB,IAAIlD,GAAG,GAAG,CAAC,EAAE;MACX;MACAuD,GAAG,GAAGC,GAAG,GAAG,CAAC;MACb,IAAIF,UAAU,CAACC,GAAG,CAAC,IAAIJ,IAAI,CAACI,GAAG,CAAC,GAAGL,GAAG,EAAE;QACtC,OAAOM,GAAG;MACZ;IACF;IACA,OAAOP,YAAY,CAACC,GAAG,EAAEC,IAAI,EAAEnD,GAAG,EAAEoD,GAAG,EAAEI,GAAG,GAAG,CAAC,CAAC;EACnD,CAAC,MAAM,IAAIE,OAAO,GAAGR,GAAG,EAAE;IACxB,IAAIlD,GAAG,GAAG,CAAC,EAAE;MACX;MACAuD,GAAG,GAAGC,GAAG,GAAG,CAAC;MACb,IAAIF,UAAU,CAACC,GAAG,CAAC,IAAIJ,IAAI,CAACI,GAAG,CAAC,GAAGL,GAAG,EAAE;QACtC,OAAOM,GAAG;MACZ;IACF;IACA,OAAOP,YAAY,CAACC,GAAG,EAAEC,IAAI,EAAEnD,GAAG,EAAEwD,GAAG,GAAG,CAAC,EAAEH,IAAI,CAAC;EACpD;EACA,OAAO,CAAC,CAAC,CAAC,CAAE;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASM,UAAUA,CAACC,OAAO,EAAE;EAClC,IAAIC,cAAc;EAClB,IAAIxF,CAAC;;EAEL;EACA;EACA;EACA;EACA;EACA;EACA,IAAIuF,OAAO,CAACE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IACzBF,OAAO,CAACE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAIF,OAAO,CAACE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE;IAC1DzF,CAAC,GAAG0F,eAAe,CAACH,OAAO,CAAC;IAC5B,IAAIvF,CAAC,IAAI,CAACkB,KAAK,CAAClB,CAAC,CAAC,EAAE,OAAOA,CAAC;EAC9B;EAEA,IAAIuF,OAAO,CAACE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE;IAAG;IAChCD,cAAc,GAAGD,OAAO,CAACI,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IAC/C,OAAOH,cAAc,CAACC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE;MACvCD,cAAc,GAAGA,cAAc,CAACG,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;IACnD;IACA3F,CAAC,GAAG0F,eAAe,CAACF,cAAc,CAAC;EACrC,CAAC,MAAM;IACL;IACA;IACAxF,CAAC,GAAG0F,eAAe,CAACH,OAAO,CAAC;EAC9B;EAEA,IAAI,CAACvF,CAAC,IAAIkB,KAAK,CAAClB,CAAC,CAAC,EAAE;IAClB4F,OAAO,CAACC,KAAK,CAAC,iBAAiB,GAAGN,OAAO,GAAG,YAAY,CAAC;EAC3D;EACA,OAAOvF,CAAC;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAAS0F,eAAeA,CAAC/B,GAAG,EAAE;EACnC,OAAO,IAAIb,IAAI,CAACa,GAAG,CAAC,CAACmC,OAAO,CAAC,CAAC;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,MAAMA,CAACC,IAAI,EAAEtJ,CAAC,EAAE;EAC9B,IAAI,OAAOA,CAAE,IAAI,WAAW,IAAIA,CAAC,KAAK,IAAI,EAAE;IAC1C,KAAK,IAAIuJ,CAAC,IAAIvJ,CAAC,EAAE;MACf,IAAIA,CAAC,CAACwJ,cAAc,CAACD,CAAC,CAAC,EAAE;QACvBD,IAAI,CAACC,CAAC,CAAC,GAAGvJ,CAAC,CAACuJ,CAAC,CAAC;MAChB;IACF;EACF;EACA,OAAOD,IAAI;AACb;;AAEA;AACA,IAAIG,OAAO,GAAI,OAAOC,IAAK,KAAK,WAAW,IAC5BA,IAAI,KAAK,IAAI,IAAI,OAAOA,IAAK,KAAK,QAAQ,GACvD,SAASD,OAAOA,CAACzJ,CAAC,EAAE;EAClB,OAAQA,CAAC,YAAY0J,IAAI;AAC3B,CAAC,GAAG,SAASD,OAAOA,CAACzJ,CAAC,EAAE;EACtB,OAAQ,OAAOA,CAAE,KAAK,QAAQ,IACtB,OAAOA,CAAC,CAAC2J,QAAS,KAAK,QAAQ,IAC/B,OAAO3J,CAAC,CAAC4J,QAAS,KAAK,QAAQ;AAC3C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAUA,CAACP,IAAI,EAAEtJ,CAAC,EAAE;EAClC,IAAI,OAAOA,CAAE,IAAI,WAAW,IAAIA,CAAC,KAAK,IAAI,EAAE;IAC1C,KAAK,IAAIuJ,CAAC,IAAIvJ,CAAC,EAAE;MACf,IAAIA,CAAC,CAACwJ,cAAc,CAACD,CAAC,CAAC,EAAE;QACvB,MAAMO,CAAC,GAAG9J,CAAC,CAACuJ,CAAC,CAAC;QACd,IAAIO,CAAC,KAAK,IAAI,EAAE;UACdR,IAAI,CAACC,CAAC,CAAC,GAAG,IAAI;QAChB,CAAC,MAAM,IAAIQ,WAAW,CAACD,CAAC,CAAC,EAAE;UACzBR,IAAI,CAACC,CAAC,CAAC,GAAGO,CAAC,CAACE,KAAK,CAAC,CAAC;QACrB,CAAC,MAAM,IAAIP,OAAO,CAACK,CAAC,CAAC,EAAE;UACrB;UACAR,IAAI,CAACC,CAAC,CAAC,GAAGO,CAAC;QACb,CAAC,MAAM,IAAI,OAAOA,CAAE,IAAI,QAAQ,EAAE;UAChC,IAAI,OAAOR,IAAI,CAACC,CAAC,CAAE,IAAI,QAAQ,IAAID,IAAI,CAACC,CAAC,CAAC,KAAK,IAAI,EAAE;YACnDD,IAAI,CAACC,CAAC,CAAC,GAAG,CAAC,CAAC;UACd;UACAM,UAAU,CAACP,IAAI,CAACC,CAAC,CAAC,EAAEO,CAAC,CAAC;QACxB,CAAC,MAAM;UACLR,IAAI,CAACC,CAAC,CAAC,GAAGO,CAAC;QACb;MACF;IACF;EACF;EACA,OAAOR,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASW,aAAaA,CAACjK,CAAC,EAAE;EAC/B,IAAIA,CAAC,KAAK,IAAI,EACZ,OAAO,MAAM;EACf,MAAMiD,CAAC,GAAG,OAAOjD,CAAE;EACnB,IAAI,CAACiD,CAAC,KAAK,QAAQ,IACbA,CAAC,KAAK,UAAU,IAAI,OAAOjD,CAAC,CAACkK,IAAK,KAAK,UAAW,KACpD,OAAOlK,CAAC,CAACmH,MAAO,KAAK,QAAQ,IAC7BnH,CAAC,CAAC2J,QAAQ,KAAK,CAAC,IAAI3J,CAAC,CAAC2J,QAAQ,KAAK,CAAC,EACtC,OAAO,OAAO;EAChB,OAAO1G,CAAC;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAAS8G,WAAWA,CAAC/J,CAAC,EAAE;EAC7B,MAAMiD,CAAC,GAAG,OAAOjD,CAAE;EACnB,OAAQA,CAAC,KAAK,IAAI,KACTiD,CAAC,KAAK,QAAQ,IACbA,CAAC,KAAK,UAAU,IAAI,OAAOjD,CAAC,CAACkK,IAAK,KAAK,UAAW,CAAC,IACrD,OAAOlK,CAAC,CAACmH,MAAO,KAAK,QAAQ,IAC7BnH,CAAC,CAAC2J,QAAQ,KAAK,CAAC,IAAI3J,CAAC,CAAC2J,QAAQ,KAAK,CAAC;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASQ,UAAUA,CAACnK,CAAC,EAAE;EAC5B,OAAQA,CAAC,KAAK,IAAI,IAAI,OAAOA,CAAE,KAAK,QAAQ,IACpC,OAAOA,CAAC,CAACoJ,OAAQ,KAAK,UAAU;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASgB,KAAKA,CAACpK,CAAC,EAAE;EACvB;EACA,IAAIqK,CAAC,GAAG,EAAE;EACV,KAAK,IAAIzH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG5C,CAAC,CAACmH,MAAM,EAAEvE,CAAC,EAAE,EAAE;IACjC,IAAImH,WAAW,CAAC/J,CAAC,CAAC4C,CAAC,CAAC,CAAC,EAAE;MACrByH,CAAC,CAACC,IAAI,CAACF,KAAK,CAACpK,CAAC,CAAC4C,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,MAAM;MACLyH,CAAC,CAACC,IAAI,CAACtK,CAAC,CAAC4C,CAAC,CAAC,CAAC;IACd;EACF;EACA,OAAOyH,CAAC;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,YAAYA,CAAA,EAAG;EAC7B,OAAOhH,QAAQ,CAACiH,aAAa,CAAC,QAAQ,CAAC;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,oBAAoBA,CAACtG,OAAO,EAAE;EAC5C,IAAI;IACF,IAAIuG,gBAAgB,GAAG3I,MAAM,CAAC2I,gBAAgB;IAC9C,IAAIC,iBAAiB,GAAGxG,OAAO,CAACyG,4BAA4B,IACpCzG,OAAO,CAAC0G,yBAAyB,IACjC1G,OAAO,CAAC2G,wBAAwB,IAChC3G,OAAO,CAAC4G,uBAAuB,IAC/B5G,OAAO,CAAC6G,sBAAsB,IAAI,CAAC;IAC3D,IAAIN,gBAAgB,KAAK9F,SAAS,EAAE;MAClC,OAAO8F,gBAAgB,GAAGC,iBAAiB;IAC7C,CAAC,MAAM;MACL;MACA;MACA;MACA,OAAO,CAAC;IACV;EACF,CAAC,CAAC,OAAO7I,CAAC,EAAE;IACV,OAAO,CAAC;EACV;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASmJ,QAAQA,CAACC,KAAK,EAAEC,KAAK,EAAEhE,MAAM,EAAEiE,SAAS,EAAE;EACxDD,KAAK,GAAGA,KAAK,IAAI,CAAC;EAClBhE,MAAM,GAAGA,MAAM,IAAI+D,KAAK,CAAC/D,MAAM;EAC/B,IAAI,CAACkE,OAAO,GAAG,IAAI,CAAC,CAAC;EACrB,IAAI,CAACC,IAAI,GAAG,IAAI,CAAC,CAAC;EAClB,IAAI,CAACC,MAAM,GAAGJ,KAAK;EACnB,IAAI,CAACK,MAAM,GAAGN,KAAK;EACnB,IAAI,CAACO,UAAU,GAAGL,SAAS;EAC3B,IAAI,CAACM,IAAI,GAAGvL,IAAI,CAAC4E,GAAG,CAACmG,KAAK,CAAC/D,MAAM,EAAEgE,KAAK,GAAGhE,MAAM,CAAC;EAClD,IAAI,CAACwE,QAAQ,GAAGR,KAAK,GAAG,CAAC,CAAC,CAAC;EAC3B,IAAI,CAACS,IAAI,CAAC,CAAC,CAAC,CAAC;AACf;;AAEA;AACA;AACA;AACAX,QAAQ,CAACY,SAAS,CAACD,IAAI,GAAG,YAAW;EACnC,IAAI,CAAC,IAAI,CAACP,OAAO,EAAE;IACjB,OAAO,IAAI;EACb;EACA,IAAIlI,GAAG,GAAG,IAAI,CAACmI,IAAI;EAEnB,IAAIQ,OAAO,GAAG,IAAI,CAACH,QAAQ,GAAG,CAAC;EAC/B,IAAII,KAAK,GAAG,KAAK;EACjB,OAAOD,OAAO,GAAG,IAAI,CAACJ,IAAI,EAAE;IAC1B,IAAI,CAAC,IAAI,CAACD,UAAU,IAAI,IAAI,CAACA,UAAU,CAAC,IAAI,CAACD,MAAM,EAAEM,OAAO,CAAC,EAAE;MAC7D,IAAI,CAACR,IAAI,GAAG,IAAI,CAACE,MAAM,CAACM,OAAO,CAAC;MAChCC,KAAK,GAAG,IAAI;MACZ;IACF;IACAD,OAAO,EAAE;EACX;EACA,IAAI,CAACH,QAAQ,GAAGG,OAAO;EACvB,IAAI,CAACC,KAAK,EAAE;IACV,IAAI,CAACV,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,IAAI,GAAG,IAAI;EAClB;EACA,OAAOnI,GAAG;AACZ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAAS6I,cAAcA,CAACd,KAAK,EAAEC,KAAK,EAAEhE,MAAM,EAAE8E,aAAa,EAAE;EAClE,OAAO,IAAIhB,QAAQ,CAACC,KAAK,EAAEC,KAAK,EAAEhE,MAAM,EAAE8E,aAAa,CAAC;AAC1D;;AAEA;AACA;AACA;AACA;AACA,OAAO,IAAIC,gBAAgB,GAAI,YAAW;EACxC,OAAOnK,MAAM,CAACoK,qBAAqB,IAC3BpK,MAAM,CAACqK,2BAA2B,IAClCrK,MAAM,CAACsK,wBAAwB,IAC/BtK,MAAM,CAACuK,sBAAsB,IAC7BvK,MAAM,CAACwK,uBAAuB,IAC9B,UAAUC,QAAQ,EAAE;IAClBzK,MAAM,CAAC0K,UAAU,CAACD,QAAQ,EAAE,IAAI,GAAG,EAAE,CAAC;EACxC,CAAC;AACX,CAAC,CAAE,CAAC;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,gBAAgBA,CAACC,QAAQ,EAAEC,SAAS,EAAEC,mBAAmB,EACrEC,SAAS,EAAE;EACb,IAAIC,WAAW,GAAG,CAAC;EACnB,IAAIC,mBAAmB;EACvB,IAAIC,SAAS,GAAG,IAAI7G,IAAI,CAAC,CAAC,CAACgD,OAAO,CAAC,CAAC;EACpCuD,QAAQ,CAACI,WAAW,CAAC;EACrB,IAAIH,SAAS,IAAI,CAAC,EAAE;IAClBE,SAAS,CAAC,CAAC;IACX;EACF;EACA,IAAII,WAAW,GAAGN,SAAS,GAAG,CAAC;EAE/B,CAAC,SAASO,IAAIA,CAAA,EAAG;IACf,IAAIJ,WAAW,IAAIH,SAAS,EAAE;IAC9BV,gBAAgB,CAACkB,IAAI,CAACrL,MAAM,EAAE,YAAW;MACvC;MACA;MACA,IAAIsL,WAAW,GAAG,IAAIjH,IAAI,CAAC,CAAC,CAACgD,OAAO,CAAC,CAAC;MACtC,IAAIkE,aAAa,GAAGD,WAAW,GAAGJ,SAAS;MAC3CD,mBAAmB,GAAGD,WAAW;MACjCA,WAAW,GAAG5M,IAAI,CAAC0C,KAAK,CAACyK,aAAa,GAAGT,mBAAmB,CAAC;MAC7D,IAAIU,UAAU,GAAGR,WAAW,GAAGC,mBAAmB;MAClD;MACA;MACA;MACA;MACA,IAAIQ,uBAAuB,GAAIT,WAAW,GAAGQ,UAAU,GAAIL,WAAW;MACtE,IAAIM,uBAAuB,IAAKT,WAAW,IAAIG,WAAY,EAAE;QAC3DP,QAAQ,CAACO,WAAW,CAAC,CAAC,CAAE;QACxBJ,SAAS,CAAC,CAAC;MACb,CAAC,MAAM;QACL,IAAIS,UAAU,KAAK,CAAC,EAAE;UAAG;UACvBZ,QAAQ,CAACI,WAAW,CAAC;QACvB;QACAI,IAAI,CAAC,CAAC;MACR;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC;AACN;;AAEA;AACA,IAAIM,gBAAgB,GAAG;EACrB,wBAAwB,EAAE,IAAI;EAC9B,2BAA2B,EAAE,IAAI;EACjC,2BAA2B,EAAE,IAAI;EACjC,4BAA4B,EAAE,IAAI;EAClC,eAAe,EAAE,IAAI;EACrB,eAAe,EAAE,IAAI;EACrB,eAAe,EAAE,IAAI;EACrB,cAAc,EAAE,IAAI;EACpB,4BAA4B,EAAE,IAAI;EAClC,YAAY,EAAE,IAAI;EAClB,mBAAmB,EAAE,IAAI;EACzB,UAAU,EAAE,IAAI;EAChB,WAAW,EAAE,IAAI;EACjB,eAAe,EAAE,IAAI;EACrB,eAAe,EAAE,IAAI;EACrB,uBAAuB,EAAE,IAAI;EAC7B,mBAAmB,EAAE,IAAI;EACzB,qBAAqB,EAAE,IAAI;EAC3B,kBAAkB,EAAE,IAAI;EACxB,WAAW,EAAE,IAAI;EACjB,WAAW,EAAE,IAAI;EACjB,YAAY,EAAE,IAAI;EAClB,qBAAqB,EAAE,IAAI;EAC3B,sBAAsB,EAAE,IAAI;EAC5B,QAAQ,EAAE,IAAI;EACd,iBAAiB,EAAE,IAAI;EACvB,iBAAiB,EAAE,IAAI;EACvB,oBAAoB,EAAE,IAAI;EAC1B,WAAW,EAAE,IAAI;EACjB,4BAA4B,EAAE,IAAI;EAClC,oCAAoC,EAAE,IAAI;EAC1C,8BAA8B,EAAE,IAAI;EACpC,oCAAoC,EAAE,IAAI;EAC1C,kCAAkC,EAAE,IAAI;EACxC,4BAA4B,EAAE,IAAI;EAClC,oCAAoC,EAAE,IAAI;EAC1C,kCAAkC,EAAE,IAAI;EACxC,oBAAoB,EAAE,IAAI;EAC1B,uBAAuB,EAAE,IAAI;EAC7B,YAAY,EAAE,IAAI;EAClB,aAAa,EAAE,IAAI;EACnB,kBAAkB,EAAE,IAAI;EACxB,qBAAqB,EAAE,IAAI;EAC3B,cAAc,EAAE;AAClB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,yBAAyBA,CAACC,MAAM,EAAEC,KAAK,EAAE;EACvD;EACA;;EAEA;EACA;EACA,IAAIC,qBAAqB,GAAG,CAAE,CAAC;EAC/B,IAAIF,MAAM,EAAE;IACV,KAAK,IAAI/K,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+K,MAAM,CAACxG,MAAM,EAAEvE,CAAC,EAAE,EAAE;MACtCiL,qBAAqB,CAACF,MAAM,CAAC/K,CAAC,CAAC,CAAC,GAAG,IAAI;IACzC;EACF;;EAEA;EACA;EACA,IAAIkL,eAAe,GAAG,SAAAA,CAASC,OAAO,EAAE;IACtC,KAAK,IAAIC,QAAQ,IAAID,OAAO,EAAE;MAC5B,IAAIA,OAAO,CAACvE,cAAc,CAACwE,QAAQ,CAAC,IAChC,CAACP,gBAAgB,CAACO,QAAQ,CAAC,EAAE;QAC/B,OAAO,IAAI;MACb;IACF;IACA,OAAO,KAAK;EACd,CAAC;;EAED;EACA,KAAK,IAAIA,QAAQ,IAAIJ,KAAK,EAAE;IAC1B,IAAI,CAACA,KAAK,CAACpE,cAAc,CAACwE,QAAQ,CAAC,EAAE;;IAErC;IACA,IAAIA,QAAQ,IAAI,qBAAqB,IAChCH,qBAAqB,CAACG,QAAQ,CAAC,IAAI,CAACJ,KAAK,CAACK,MAAO,EAAE;MACtD;MACA,IAAIH,eAAe,CAACF,KAAK,CAACI,QAAQ,CAAC,CAAC,EAAE,OAAO,IAAI;IACnD,CAAC,MAAM,IAAIA,QAAQ,IAAI,QAAQ,IAAIA,QAAQ,IAAI,MAAM,EAAE;MACrD;MACA,IAAIE,SAAS,GAAGN,KAAK,CAACI,QAAQ,CAAC;MAC/B,KAAK,IAAIC,MAAM,IAAIC,SAAS,EAAE;QAC5B,IAAIA,SAAS,CAAC1E,cAAc,CAACyE,MAAM,CAAC,IAChCH,eAAe,CAACI,SAAS,CAACD,MAAM,CAAC,CAAC,EAAE;UACtC,OAAO,IAAI;QACb;MACF;IACF,CAAC,MAAM;MACL;MACA;MACA,IAAI,CAACR,gBAAgB,CAACO,QAAQ,CAAC,EAAE,OAAO,IAAI;IAC9C;EACF;EAEA,OAAO,KAAK;AACd;AAEA,OAAO,IAAIG,OAAO,GAAG;EACnBC,OAAO,EAAG,SAAAA,CAASC,CAAC,EAAEC,IAAI,EAAEC,GAAG,EAAEC,OAAO,EAAEC,OAAO,EAAEC,KAAK,EAAEC,MAAM,EAAE;IAChEJ,GAAG,CAACK,SAAS,CAAC,CAAC;IACfL,GAAG,CAACM,SAAS,GAAGH,KAAK;IACrBH,GAAG,CAACO,GAAG,CAACN,OAAO,EAAEC,OAAO,EAAEE,MAAM,EAAE,CAAC,EAAE,CAAC,GAAGxO,IAAI,CAAC4O,EAAE,EAAE,KAAK,CAAC;IACxDR,GAAG,CAACS,IAAI,CAAC,CAAC;EACZ;EACA;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,mBAAmBA,CAACC,IAAI,EAAE;EACxC,KAAK,IAAItM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsM,IAAI,CAAC/H,MAAM,EAAEvE,CAAC,EAAE,EAAE;IACpC,IAAIuM,IAAI,GAAGD,IAAI,CAACE,MAAM,CAACxM,CAAC,CAAC;IACzB,IAAIuM,IAAI,KAAK,IAAI,EAAE;MACjB;MACA,IAAMvM,CAAC,GAAG,CAAC,GAAIsM,IAAI,CAAC/H,MAAM,IAAM+H,IAAI,CAACE,MAAM,CAACxM,CAAC,GAAG,CAAC,CAAC,KAAK,IAAK,EAAE;QAC5D,OAAO,MAAM;MACf;MACA,OAAOuM,IAAI;IACb;IACA,IAAIA,IAAI,KAAK,IAAI,EAAE;MACjB;MACA,IAAMvM,CAAC,GAAG,CAAC,GAAIsM,IAAI,CAAC/H,MAAM,IAAM+H,IAAI,CAACE,MAAM,CAACxM,CAAC,GAAG,CAAC,CAAC,KAAK,IAAK,EAAE;QAC5D,OAAO,MAAM;MACf;MACA,OAAOuM,IAAI;IACb;EACF;EAEA,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,iBAAiBA,CAACC,SAAS,EAAEC,SAAS,EAAE;EACtD,IAAIA,SAAS,KAAK,IAAI,IAAID,SAAS,KAAK,IAAI,EAAE;IAC5C,OAAO,KAAK;EACd;EACA,IAAIE,aAAa,GAAG,mBAAqBF,SAAU;EACnD,OAAOE,aAAa,IAAIA,aAAa,KAAKD,SAAS,EAAE;IACnDC,aAAa,GAAGA,aAAa,CAACC,UAAU;EAC1C;EACA,OAAQD,aAAa,KAAKD,SAAS;AACrC;;AAEA;AACA;AACA;AACA,OAAO,SAASxO,GAAGA,CAAC2O,IAAI,EAAEC,GAAG,EAAE;EAC7B,IAAIA,GAAG,GAAG,CAAC,EAAE;IACX,OAAO,GAAG,GAAGxP,IAAI,CAACY,GAAG,CAAC2O,IAAI,EAAE,CAACC,GAAG,CAAC;EACnC;EACA,OAAOxP,IAAI,CAACY,GAAG,CAAC2O,IAAI,EAAEC,GAAG,CAAC;AAC5B;AAEA,IAAIC,OAAO,GAAG,sEAAsE;AACpF,IAAIC,OAAO,GAAG,yEAAyE;;AAEvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,SAASA,CAACC,MAAM,EAAE;EACzB,IAAIC,IAAI;IAAE3F,CAAC;IAAEgE,CAAC;IAAE4B,CAAC;IAAEC,CAAC,GAAG,IAAI;EAC3B,IAAKF,IAAI,GAAGJ,OAAO,CAACO,IAAI,CAACJ,MAAM,CAAC,EAAG;IACjC1F,CAAC,GAAG3B,QAAQ,CAACsH,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IACzB3B,CAAC,GAAG3F,QAAQ,CAACsH,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IACzBC,CAAC,GAAGvH,QAAQ,CAACsH,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IACzB,IAAIA,IAAI,CAAC,CAAC,CAAC,EACTE,CAAC,GAAGxH,QAAQ,CAACsH,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;EAC7B,CAAC,MAAM,IAAKA,IAAI,GAAGH,OAAO,CAACM,IAAI,CAACJ,MAAM,CAAC,EAAG;IACxC1F,CAAC,GAAG3B,QAAQ,CAACsH,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IACzB3B,CAAC,GAAG3F,QAAQ,CAACsH,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IACzBC,CAAC,GAAGvH,QAAQ,CAACsH,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IACzB,IAAIA,IAAI,CAAC,CAAC,CAAC,EACTE,CAAC,GAAGE,UAAU,CAACJ,IAAI,CAAC,CAAC,CAAC,CAAC;EAC3B,CAAC,MACC,OAAO,IAAI;EACb,IAAIE,CAAC,KAAK,IAAI,EACZ,OAAO;IAAE,GAAG,EAAE7F,CAAC;IAAE,GAAG,EAAEgE,CAAC;IAAE,GAAG,EAAE4B,CAAC;IAAE,GAAG,EAAEC;EAAE,CAAC;EAC3C,OAAO;IAAE,GAAG,EAAE7F,CAAC;IAAE,GAAG,EAAEgE,CAAC;IAAE,GAAG,EAAE4B;EAAE,CAAC;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASI,MAAMA,CAACC,QAAQ,EAAE;EAC/B;EACA;EACA;EACA,IAAIC,GAAG,GAAGT,SAAS,CAACQ,QAAQ,CAAC;EAC7B,IAAIC,GAAG,EAAE,OAAOA,GAAG;EAEnB,IAAIC,GAAG,GAAGjN,QAAQ,CAACiH,aAAa,CAAC,KAAK,CAAC;EACvCgG,GAAG,CAACC,KAAK,CAACC,eAAe,GAAGJ,QAAQ;EACpCE,GAAG,CAACC,KAAK,CAACE,UAAU,GAAG,QAAQ;EAC/BpN,QAAQ,CAACqN,IAAI,CAACC,WAAW,CAACL,GAAG,CAAC;EAC9B,IAAIT,MAAM,GAAGhO,MAAM,CAAC+O,gBAAgB,CAACN,GAAG,EAAE,IAAI,CAAC,CAACE,eAAe;EAC/DnN,QAAQ,CAACqN,IAAI,CAACG,WAAW,CAACP,GAAG,CAAC;EAC9B,OAAOV,SAAS,CAACC,MAAM,CAAC;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASiB,iBAAiBA,CAACC,iBAAiB,EAAE;EACnD,IAAI;IACF,IAAI3P,MAAM,GAAG2P,iBAAiB,IAAI1N,QAAQ,CAACiH,aAAa,CAAC,QAAQ,CAAC;IAClElJ,MAAM,CAACD,UAAU,CAAC,IAAI,CAAC;EACzB,CAAC,CAAC,OAAOS,CAAC,EAAE;IACV,OAAO,KAAK;EACd;EACA,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASoP,WAAWA,CAAC5Q,CAAC,EAAE6Q,WAAW,EAAEC,QAAQ,EAAE;EACpD,IAAIjJ,GAAG,GAAGiI,UAAU,CAAC9P,CAAC,CAAC;EACvB,IAAI,CAACkE,KAAK,CAAC2D,GAAG,CAAC,EAAE,OAAOA,GAAG;;EAE3B;EACA;EACA,IAAI,MAAM,CAACkJ,IAAI,CAAC/Q,CAAC,CAAC,EAAE,OAAO,IAAI;;EAE/B;EACA,IAAI,YAAY,CAAC+Q,IAAI,CAAC/Q,CAAC,CAAC,EAAE,OAAOgR,GAAG;;EAEpC;EACA,IAAIC,GAAG,GAAG,mBAAmB,GAAGjR,CAAC,GAAG,eAAe;EACnD,IAAI8Q,QAAQ,KAAKxM,SAAS,IAAIuM,WAAW,KAAKvM,SAAS,EAAE;IACvD2M,GAAG,IAAI,WAAW,IAAI,CAAC,IAAEJ,WAAW,IAAE,CAAC,CAAC,CAAC,GAAG,KAAK,GAAGC,QAAQ,GAAG,YAAY;EAC7E;EACAlI,OAAO,CAACC,KAAK,CAACoI,GAAG,CAAC;EAElB,OAAO,IAAI;AACb;;AAEA;AACA;AACA,IAAIC,gBAAgB,GAAG,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE;AACjE,IAAIC,gBAAgB,GAAG,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE;AACjE,IAAIC,iBAAiB,GAAG,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE;AAC1E,IAAIC,iBAAiB,GAAG,CAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAE;AAC1F;AACA,IAAIC,iBAAiB,GAAG,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE;AAClE,IAAIC,iBAAiB,GAAGJ,gBAAgB;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASK,oBAAoBA,CAACxR,CAAC,EAAEyR,IAAI,EAAE;EAC5C,IAAIC,OAAO,GAAGD,IAAI,CAAC,SAAS,CAAC;EAE7B,IAAIC,OAAO,KAAK,IAAI,EAAE;IACpB;IACA,OAAOnN,WAAW,CAACvE,CAAC,EAAE0R,OAAO,CAAC;EAChC;;EAEA;EACA,IAAI1R,CAAC,KAAK,GAAG,EACX,OAAO,GAAG;EAEZ,IAAI2R,MAAM,GAAGF,IAAI,CAAC,oBAAoB,CAAC;EACvC,IAAIG,cAAc,GAAGH,IAAI,CAAC,gBAAgB,CAAC;EAE3C,IAAII,GAAG,GAAGJ,IAAI,CAAC,WAAW,CAAC;EAC3B,IAAIK,IAAI,GAAGL,IAAI,CAAC,YAAY,CAAC;EAE7B,IAAIM,KAAK;EACT,IAAIC,IAAI,GAAGnS,IAAI,CAAC8E,GAAG,CAAC3E,CAAC,CAAC;EAEtB,IAAI6R,GAAG,IAAIC,IAAI,EAAE;IACf,IAAI7I,CAAC;IACL,IAAIgJ,QAAQ,GAAG,EAAE;IACjB,IAAIC,QAAQ,GAAG,EAAE;IACjB,IAAIL,GAAG,EAAE;MACP5I,CAAC,GAAG,IAAI;MACRgJ,QAAQ,GAAGf,gBAAgB;MAC3BgB,QAAQ,GAAGf,gBAAgB;IAC7B;IACA,IAAIW,IAAI,EAAE;MACR7I,CAAC,GAAG,IAAI;MACRgJ,QAAQ,GAAGb,iBAAiB;MAC5Bc,QAAQ,GAAGb,iBAAiB;MAC5B,IAAIQ,GAAG,EAAE;QACPI,QAAQ,GAAGX,iBAAiB;QAC5BY,QAAQ,GAAGX,iBAAiB;MAC9B;IACF;IAEA,IAAIY,CAAC;IACL,IAAIC,CAAC;IACL,IAAIJ,IAAI,IAAI/I,CAAC,EAAE;MACbmJ,CAAC,GAAGH,QAAQ,CAACpL,MAAM;MACnB,OAAOuL,CAAC,GAAG,CAAC,EAAE;QACZD,CAAC,GAAG1R,GAAG,CAACwI,CAAC,EAAEmJ,CAAC,CAAC;QACb,EAAEA,CAAC;QACH,IAAIJ,IAAI,IAAIG,CAAC,EAAE;UACb;UACA;UACA,IAAKH,IAAI,GAAGG,CAAC,IAAKtS,IAAI,CAACY,GAAG,CAAC,EAAE,EAAEmR,cAAc,CAAC,EAC5CG,KAAK,GAAG/R,CAAC,CAAC4E,aAAa,CAAC+M,MAAM,CAAC,CAAC,KAEhCI,KAAK,GAAGxK,MAAM,CAACvH,CAAC,GAAGmS,CAAC,EAAER,MAAM,CAAC,GAAGM,QAAQ,CAACG,CAAC,CAAC;UAC7C,OAAOL,KAAK;QACd;MACF;MACA;IACF,CAAC,MAAM,IAAKC,IAAI,GAAG,CAAC,CAAE,gCAAgC;MACpDI,CAAC,GAAG,CAAC;MACL,OAAOA,CAAC,GAAGF,QAAQ,CAACrL,MAAM,EAAE;QAC1B,EAAEuL,CAAC;QACHD,CAAC,GAAG1R,GAAG,CAACwI,CAAC,EAAEmJ,CAAC,CAAC;QACb,IAAKJ,IAAI,GAAGG,CAAC,IAAK,CAAC,EACjB;MACJ;MACA;MACA,IAAKH,IAAI,GAAGG,CAAC,GAAItS,IAAI,CAACY,GAAG,CAAC,EAAE,EAAE,CAACkR,MAAM,CAAC,EACpCI,KAAK,GAAG/R,CAAC,CAAC4E,aAAa,CAAC+M,MAAM,CAAC,CAAC,KAEhCI,KAAK,GAAGxK,MAAM,CAACvH,CAAC,GAAGmS,CAAC,EAAER,MAAM,CAAC,GAAGO,QAAQ,CAACE,CAAC,GAAG,CAAC,CAAC;MACjD,OAAOL,KAAK;IACd;IACA;EACF;EAEA,IAAIC,IAAI,IAAInS,IAAI,CAACY,GAAG,CAAC,EAAE,EAAEmR,cAAc,CAAC,IACpCI,IAAI,GAAGnS,IAAI,CAACY,GAAG,CAAC,EAAE,EAAE,CAACkR,MAAM,CAAC,EAAE;IAChC;IACAI,KAAK,GAAG/R,CAAC,CAAC4E,aAAa,CAAC+M,MAAM,CAAC;EACjC,CAAC,MAAM;IACLI,KAAK,GAAG,EAAE,GAAGxK,MAAM,CAACvH,CAAC,EAAE2R,MAAM,CAAC;EAChC;EAEA,OAAOI,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA,OAAO,SAASM,wBAAwBA,CAACrS,CAAC,EAAEsS,WAAW,EAAEb,IAAI,EAAE;EAC7D,OAAOD,oBAAoB,CAAC1E,IAAI,CAAC,IAAI,EAAE9M,CAAC,EAAEyR,IAAI,CAAC;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAIc,kBAAkB,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;;AAE7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,sBAAsBA,CAACtL,IAAI,EAAEoL,WAAW,EAAEb,IAAI,EAAE;EAC9D,IAAIzK,GAAG,GAAGyK,IAAI,CAAC,WAAW,CAAC;EAC3B,IAAIxK,SAAS,GAAGD,GAAG,GAAGjB,gBAAgB,GAAGhB,kBAAkB;EAE3D,IAAIoC,IAAI,GAAGF,SAAS,CAACjC,WAAW,CAACkC,IAAI,CAAC;IAClCE,KAAK,GAAGH,SAAS,CAAChC,QAAQ,CAACiC,IAAI,CAAC;IAChCG,GAAG,GAAGJ,SAAS,CAAC/B,OAAO,CAACgC,IAAI,CAAC;IAC7BuL,KAAK,GAAGxL,SAAS,CAAC9B,QAAQ,CAAC+B,IAAI,CAAC;IAChCwL,IAAI,GAAGzL,SAAS,CAAC7B,UAAU,CAAC8B,IAAI,CAAC;IACjCyL,IAAI,GAAG1L,SAAS,CAAC5B,UAAU,CAAC6B,IAAI,CAAC;IACjC0L,MAAM,GAAG3L,SAAS,CAAC3B,eAAe,CAAC4B,IAAI,CAAC;EAE5C,IAAIoL,WAAW,IAAI9S,cAAc,CAACqT,WAAW,CAACC,OAAO,EAAE;IACrD,OAAO,EAAE,GAAG3L,IAAI;EAClB,CAAC,MAAM,IAAImL,WAAW,IAAI9S,cAAc,CAACqT,WAAW,CAACE,OAAO,EAAE;IAC5D,OAAOR,kBAAkB,CAACnL,KAAK,CAAC,GAAG,QAAQ,GAAGD,IAAI;EACpD,CAAC,MAAM;IACL,IAAIG,IAAI,GAAGmL,KAAK,GAAG,IAAI,GAAGC,IAAI,GAAG,EAAE,GAAGC,IAAI,GAAG,IAAI,GAAGC,MAAM;IAC1D,IAAItL,IAAI,KAAK,CAAC,IAAIgL,WAAW,IAAI9S,cAAc,CAACqT,WAAW,CAACG,KAAK,EAAE;MACjE;MACA,OAAOlO,OAAO,CAACuC,GAAG,CAAC,GAAG,QAAQ,GAAGkL,kBAAkB,CAACnL,KAAK,CAAC;IAC5D,CAAC,MAAM,IAAIkL,WAAW,GAAG9S,cAAc,CAACqT,WAAW,CAACI,QAAQ,EAAE;MAC5D;MACA,IAAItM,GAAG,GAAG,EAAE,GAAGiM,MAAM;MACrB,OAAO9N,OAAO,CAAC6N,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,KAAK,GAAChM,GAAG,EAAEC,SAAS,CAACD,GAAG,CAACE,MAAM,CAAC;IAChE,CAAC,MAAM,IAAIyL,WAAW,GAAG9S,cAAc,CAACqT,WAAW,CAACK,QAAQ,EAAE;MAC5D,OAAOzM,UAAU,CAACgM,KAAK,EAAEC,IAAI,EAAEC,IAAI,EAAE,CAAC,CAAC;IACzC,CAAC,MAAM;MACL,OAAOlM,UAAU,CAACgM,KAAK,EAAEC,IAAI,EAAEC,IAAI,EAAEC,MAAM,CAAC;IAC9C;EACF;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASO,kBAAkBA,CAACnQ,CAAC,EAAEyO,IAAI,EAAE;EAC1C,OAAO3K,WAAW,CAAC9D,CAAC,EAAEyO,IAAI,CAAC,WAAW,CAAC,CAAC;AAC1C;;AAEA;AACA,IAAI2B,kBAAkB,GAAG,EAAE;AAC3B,IAAIC,sBAAsB,GAAG,KAAK;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,cAAcA,CAACC,EAAE,EAAE;EAC1B,IAAI,OAAOA,EAAG,KAAK,UAAU,EAC3BA,EAAE,CAAC,CAAC;EACN,OAAQ,IAAI;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACxK,IAAI,EAAE;EACnC;EACA,IAAI,OAAO/F,QAAS,KAAK,WAAW,EAAE;IACpC;IACA,MAAMwQ,OAAO,GAAG,SAASC,gBAAgBA,CAAA,EAAG;MAC1C;MACA,IAAIL,sBAAsB,EACxB;MACFA,sBAAsB,GAAG,IAAI;MAC7B;MACArK,IAAI,CAAC2K,UAAU,GAAGL,cAAc;MAChC;MACArQ,QAAQ,CAAC3B,mBAAmB,CAAC,kBAAkB,EAAEmS,OAAO,EAAE,KAAK,CAAC;MAChEhS,MAAM,CAACH,mBAAmB,CAAC,MAAM,EAAEmS,OAAO,EAAE,KAAK,CAAC;MAClD;MACA,KAAK,IAAInR,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8Q,kBAAkB,CAACvM,MAAM,EAAE,EAAEvE,CAAC,EAChD8Q,kBAAkB,CAAC9Q,CAAC,CAAC,CAAC,CAAC;MACzB8Q,kBAAkB,GAAG,IAAI,CAAC,CAAC;IAC7B,CAAC;;IAED;IACApK,IAAI,CAAC2K,UAAU,GAAG,SAASC,gBAAgBA,CAACL,EAAE,EAAE;MAC9C;MACA,IAAItQ,QAAQ,CAAC4Q,UAAU,KAAK,UAAU,EAAE;QACtC7K,IAAI,CAAC2K,UAAU,GAAGL,cAAc;QAChC,OAAQA,cAAc,CAACC,EAAE,CAAC;MAC5B;MACA;MACA,MAAMO,KAAK,GAAG,SAASC,gBAAgBA,CAACR,EAAE,EAAE;QAC1C,IAAI,OAAOA,EAAG,KAAK,UAAU,EAC3BH,kBAAkB,CAACpJ,IAAI,CAACuJ,EAAE,CAAC;QAC7B,OAAQ,KAAK;MACf,CAAC;MACD;MACAvK,IAAI,CAAC2K,UAAU,GAAGG,KAAK;MACvB;MACA7Q,QAAQ,CAAC7B,gBAAgB,CAAC,kBAAkB,EAAEqS,OAAO,EAAE,KAAK,CAAC;MAC7D;MACAhS,MAAM,CAACL,gBAAgB,CAAC,MAAM,EAAEqS,OAAO,EAAE,KAAK,CAAC;MAC/C;MACA,IAAIxQ,QAAQ,CAAC4Q,UAAU,KAAK,UAAU,EAAE;QACtC;QACAJ,OAAO,CAAC,CAAC;QACT;QACAzK,IAAI,CAAC2K,UAAU,GAAGL,cAAc;QAChC,OAAQA,cAAc,CAACC,EAAE,CAAC;MAC5B;MACA;MACA,OAAQO,KAAK,CAACP,EAAE,CAAC;IACnB,CAAC;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}