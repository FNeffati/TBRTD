{"ast":null,"code":"/**\n * @license\n * Copyright 2013 David Eberlein (david.eberlein@ch.sauter-bc.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n\n/**\n * @fileoverview DataHandler base implementation for the \"bar\"\n * data formats. This implementation must be extended and the\n * extractSeries and rollingAverage must be implemented.\n * @author David Eberlein (david.eberlein@ch.sauter-bc.com)\n */\n\n/*global Dygraph:false */\n/*global DygraphLayout:false */\n\"use strict\";\n\nimport DygraphDataHandler from './datahandler';\nimport DygraphLayout from '../dygraph-layout';\n\n/**\n * @constructor\n * @extends {Dygraph.DataHandler}\n */\nvar BarsHandler = function () {\n  DygraphDataHandler.call(this);\n};\nBarsHandler.prototype = new DygraphDataHandler();\n\n// TODO(danvk): figure out why the jsdoc has to be copy/pasted from superclass.\n//   (I get closure compiler errors if this isn't here.)\n/**\n * @override\n * @param {!Array.<Array>} rawData The raw data passed into dygraphs where\n *     rawData[i] = [x,ySeries1,...,ySeriesN].\n * @param {!number} seriesIndex Index of the series to extract. All other\n *     series should be ignored.\n * @param {!DygraphOptions} options Dygraph options.\n * @return {Array.<[!number,?number,?]>} The series in the unified data format\n *     where series[i] = [x,y,{extras}].\n */\nBarsHandler.prototype.extractSeries = function (rawData, seriesIndex, options) {\n  // Not implemented here must be extended\n};\n\n/**\n * @override\n * @param {!Array.<[!number,?number,?]>} series The series in the unified\n *          data format where series[i] = [x,y,{extras}].\n * @param {!number} rollPeriod The number of points over which to average the data\n * @param {!DygraphOptions} options The dygraph options.\n * @param {!number} seriesIndex Index of the series this was extracted from.\n * TODO(danvk): be more specific than \"Array\" here.\n * @return {!Array.<[!number,?number,?]>} the rolled series.\n */\nBarsHandler.prototype.rollingAverage = function (series, rollPeriod, options, seriesIndex) {\n  // Not implemented here, must be extended.\n};\n\n/** @inheritDoc */\nBarsHandler.prototype.onPointsCreated_ = function (series, points) {\n  for (var i = 0; i < series.length; ++i) {\n    var item = series[i];\n    var point = points[i];\n    point.y_top = NaN;\n    point.y_bottom = NaN;\n    point.yval_minus = DygraphDataHandler.parseFloat(item[2][0]);\n    point.yval_plus = DygraphDataHandler.parseFloat(item[2][1]);\n  }\n};\n\n/** @inheritDoc */\nBarsHandler.prototype.getExtremeYValues = function (series, dateWindow, stepPlot) {\n  var minY = null,\n    maxY = null,\n    y;\n  var firstIdx = 0;\n  var lastIdx = series.length - 1;\n  for (var j = firstIdx; j <= lastIdx; j++) {\n    y = series[j][1];\n    if (y === null || isNaN(y)) continue;\n    var low = series[j][2][0];\n    var high = series[j][2][1];\n    if (low > y) low = y; // this can happen with custom bars,\n    if (high < y) high = y; // e.g. in tests/custom-bars.html\n\n    if (maxY === null || high > maxY) maxY = high;\n    if (minY === null || low < minY) minY = low;\n  }\n  return [minY, maxY];\n};\n\n/** @inheritDoc */\nBarsHandler.prototype.onLineEvaluated = function (points, axis, logscale) {\n  var point;\n  for (var j = 0; j < points.length; j++) {\n    // Copy over the error terms\n    point = points[j];\n    point.y_top = DygraphLayout.calcYNormal_(axis, point.yval_minus, logscale);\n    point.y_bottom = DygraphLayout.calcYNormal_(axis, point.yval_plus, logscale);\n  }\n};\nexport default BarsHandler;","map":{"version":3,"names":["DygraphDataHandler","DygraphLayout","BarsHandler","call","prototype","extractSeries","rawData","seriesIndex","options","rollingAverage","series","rollPeriod","onPointsCreated_","points","i","length","item","point","y_top","NaN","y_bottom","yval_minus","parseFloat","yval_plus","getExtremeYValues","dateWindow","stepPlot","minY","maxY","y","firstIdx","lastIdx","j","isNaN","low","high","onLineEvaluated","axis","logscale","calcYNormal_"],"sources":["/Users/fneffati/Documents/Classes/TBENVDASH/frontEnd/tbenv/node_modules/dygraphs/src/datahandler/bars.js"],"sourcesContent":["/**\n * @license\n * Copyright 2013 David Eberlein (david.eberlein@ch.sauter-bc.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n\n/**\n * @fileoverview DataHandler base implementation for the \"bar\"\n * data formats. This implementation must be extended and the\n * extractSeries and rollingAverage must be implemented.\n * @author David Eberlein (david.eberlein@ch.sauter-bc.com)\n */\n\n/*global Dygraph:false */\n/*global DygraphLayout:false */\n\"use strict\";\n\nimport DygraphDataHandler from './datahandler';\nimport DygraphLayout from '../dygraph-layout';\n\n/**\n * @constructor\n * @extends {Dygraph.DataHandler}\n */\nvar BarsHandler = function() {\n  DygraphDataHandler.call(this);\n};\nBarsHandler.prototype = new DygraphDataHandler();\n\n// TODO(danvk): figure out why the jsdoc has to be copy/pasted from superclass.\n//   (I get closure compiler errors if this isn't here.)\n/**\n * @override\n * @param {!Array.<Array>} rawData The raw data passed into dygraphs where\n *     rawData[i] = [x,ySeries1,...,ySeriesN].\n * @param {!number} seriesIndex Index of the series to extract. All other\n *     series should be ignored.\n * @param {!DygraphOptions} options Dygraph options.\n * @return {Array.<[!number,?number,?]>} The series in the unified data format\n *     where series[i] = [x,y,{extras}].\n */\nBarsHandler.prototype.extractSeries = function(rawData, seriesIndex, options) {\n  // Not implemented here must be extended\n};\n\n/**\n * @override\n * @param {!Array.<[!number,?number,?]>} series The series in the unified\n *          data format where series[i] = [x,y,{extras}].\n * @param {!number} rollPeriod The number of points over which to average the data\n * @param {!DygraphOptions} options The dygraph options.\n * @param {!number} seriesIndex Index of the series this was extracted from.\n * TODO(danvk): be more specific than \"Array\" here.\n * @return {!Array.<[!number,?number,?]>} the rolled series.\n */\nBarsHandler.prototype.rollingAverage =\n    function(series, rollPeriod, options, seriesIndex) {\n  // Not implemented here, must be extended.\n};\n\n/** @inheritDoc */\nBarsHandler.prototype.onPointsCreated_ = function(series, points) {\n  for (var i = 0; i < series.length; ++i) {\n    var item = series[i];\n    var point = points[i];\n    point.y_top = NaN;\n    point.y_bottom = NaN;\n    point.yval_minus = DygraphDataHandler.parseFloat(item[2][0]);\n    point.yval_plus = DygraphDataHandler.parseFloat(item[2][1]);\n  }\n};\n\n/** @inheritDoc */\nBarsHandler.prototype.getExtremeYValues = function(series, dateWindow, stepPlot) {\n  var minY = null, maxY = null, y;\n\n  var firstIdx = 0;\n  var lastIdx = series.length - 1;\n\n  for ( var j = firstIdx; j <= lastIdx; j++) {\n    y = series[j][1];\n    if (y === null || isNaN(y)) continue;\n\n    var low = series[j][2][0];\n    var high = series[j][2][1];\n\n    if (low > y) low = y; // this can happen with custom bars,\n    if (high < y) high = y; // e.g. in tests/custom-bars.html\n\n    if (maxY === null || high > maxY) maxY = high;\n    if (minY === null || low < minY) minY = low;\n  }\n\n  return [ minY, maxY ];\n};\n\n/** @inheritDoc */\nBarsHandler.prototype.onLineEvaluated = function(points, axis, logscale) {\n  var point;\n  for (var j = 0; j < points.length; j++) {\n    // Copy over the error terms\n    point = points[j];\n    point.y_top = DygraphLayout.calcYNormal_(axis, point.yval_minus, logscale);\n    point.y_bottom = DygraphLayout.calcYNormal_(axis, point.yval_plus, logscale);\n  }\n};\n\nexport default BarsHandler;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}