{"ast":null,"code":"/**\n * @license\n * Copyright 2013 David Eberlein (david.eberlein@ch.sauter-bc.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n\n/**\n * @fileoverview DataHandler default implementation used for simple line charts.\n * @author David Eberlein (david.eberlein@ch.sauter-bc.com)\n */\n\n/*global Dygraph:false */\n\"use strict\";\n\nimport DygraphDataHandler from './datahandler';\n\n/**\n * @constructor\n * @extends Dygraph.DataHandler\n */\nvar DefaultHandler = function () {};\nDefaultHandler.prototype = new DygraphDataHandler();\n\n/** @inheritDoc */\nDefaultHandler.prototype.extractSeries = function (rawData, i, options) {\n  // TODO(danvk): pre-allocate series here.\n  var series = [];\n  const seriesLabel = options.get(\"labels\")[i];\n  const logScale = options.getForSeries(\"logscale\", seriesLabel);\n  for (var j = 0; j < rawData.length; j++) {\n    var x = rawData[j][0];\n    var point = rawData[j][i];\n    if (logScale) {\n      // On the log scale, points less than zero do not exist.\n      // This will create a gap in the chart.\n      if (point <= 0) {\n        point = null;\n      }\n    }\n    series.push([x, point]);\n  }\n  return series;\n};\n\n/** @inheritDoc */\nDefaultHandler.prototype.rollingAverage = function (originalData, rollPeriod, options, i) {\n  rollPeriod = Math.min(rollPeriod, originalData.length);\n  var rollingData = [];\n  var i, j, y, sum, num_ok;\n  // Calculate the rolling average for the first rollPeriod - 1 points\n  // where\n  // there is not enough data to roll over the full number of points\n  if (rollPeriod == 1) {\n    return originalData;\n  }\n  for (i = 0; i < originalData.length; i++) {\n    sum = 0;\n    num_ok = 0;\n    for (j = Math.max(0, i - rollPeriod + 1); j < i + 1; j++) {\n      y = originalData[j][1];\n      if (y === null || isNaN(y)) continue;\n      num_ok++;\n      sum += originalData[j][1];\n    }\n    if (num_ok) {\n      rollingData[i] = [originalData[i][0], sum / num_ok];\n    } else {\n      rollingData[i] = [originalData[i][0], null];\n    }\n  }\n  return rollingData;\n};\n\n/** @inheritDoc */\nDefaultHandler.prototype.getExtremeYValues = function getExtremeYValues(series, dateWindow, stepPlot) {\n  var minY = null,\n    maxY = null,\n    y;\n  var firstIdx = 0,\n    lastIdx = series.length - 1;\n  for (var j = firstIdx; j <= lastIdx; j++) {\n    y = series[j][1];\n    if (y === null || isNaN(y)) continue;\n    if (maxY === null || y > maxY) {\n      maxY = y;\n    }\n    if (minY === null || y < minY) {\n      minY = y;\n    }\n  }\n  return [minY, maxY];\n};\nexport default DefaultHandler;","map":{"version":3,"names":["DygraphDataHandler","DefaultHandler","prototype","extractSeries","rawData","i","options","series","seriesLabel","get","logScale","getForSeries","j","length","x","point","push","rollingAverage","originalData","rollPeriod","Math","min","rollingData","y","sum","num_ok","max","isNaN","getExtremeYValues","dateWindow","stepPlot","minY","maxY","firstIdx","lastIdx"],"sources":["/Users/fneffati/Documents/Classes/TBRTD/frontEnd/node_modules/dygraphs/src/datahandler/default.js"],"sourcesContent":["/**\n * @license\n * Copyright 2013 David Eberlein (david.eberlein@ch.sauter-bc.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n\n/**\n * @fileoverview DataHandler default implementation used for simple line charts.\n * @author David Eberlein (david.eberlein@ch.sauter-bc.com)\n */\n\n/*global Dygraph:false */\n\"use strict\";\n\nimport DygraphDataHandler from './datahandler';\n\n/**\n * @constructor\n * @extends Dygraph.DataHandler\n */\nvar DefaultHandler = function() {\n};\n\nDefaultHandler.prototype = new DygraphDataHandler();\n\n/** @inheritDoc */\nDefaultHandler.prototype.extractSeries = function(rawData, i, options) {\n  // TODO(danvk): pre-allocate series here.\n  var series = [];\n  const seriesLabel = options.get(\"labels\")[i];\n  const logScale = options.getForSeries(\"logscale\", seriesLabel);\n  for ( var j = 0; j < rawData.length; j++) {\n    var x = rawData[j][0];\n    var point = rawData[j][i];\n    if (logScale) {\n      // On the log scale, points less than zero do not exist.\n      // This will create a gap in the chart.\n      if (point <= 0) {\n        point = null;\n      }\n    }\n    series.push([ x, point ]);\n  }\n  return series;\n};\n\n/** @inheritDoc */\nDefaultHandler.prototype.rollingAverage = function(originalData, rollPeriod,\n    options, i) {\n  rollPeriod = Math.min(rollPeriod, originalData.length);\n  var rollingData = [];\n\n  var i, j, y, sum, num_ok;\n  // Calculate the rolling average for the first rollPeriod - 1 points\n  // where\n  // there is not enough data to roll over the full number of points\n  if (rollPeriod == 1) {\n    return originalData;\n  }\n  for (i = 0; i < originalData.length; i++) {\n    sum = 0;\n    num_ok = 0;\n    for (j = Math.max(0, i - rollPeriod + 1); j < i + 1; j++) {\n      y = originalData[j][1];\n      if (y === null || isNaN(y))\n        continue;\n      num_ok++;\n      sum += originalData[j][1];\n    }\n    if (num_ok) {\n      rollingData[i] = [ originalData[i][0], sum / num_ok ];\n    } else {\n      rollingData[i] = [ originalData[i][0], null ];\n    }\n  }\n\n  return rollingData;\n};\n\n/** @inheritDoc */\nDefaultHandler.prototype.getExtremeYValues = function getExtremeYValues(series, dateWindow, stepPlot) {\n  var minY = null, maxY = null, y;\n  var firstIdx = 0, lastIdx = series.length - 1;\n\n  for ( var j = firstIdx; j <= lastIdx; j++) {\n    y = series[j][1];\n    if (y === null || isNaN(y))\n      continue;\n    if (maxY === null || y > maxY) {\n      maxY = y;\n    }\n    if (minY === null || y < minY) {\n      minY = y;\n    }\n  }\n  return [ minY, maxY ];\n};\n\nexport default DefaultHandler;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}