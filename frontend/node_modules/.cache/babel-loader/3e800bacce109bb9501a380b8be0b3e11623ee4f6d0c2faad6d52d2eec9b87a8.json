{"ast":null,"code":"import React,{useEffect,useState,useMemo,useCallback}from\"react\";import ReactWordcloud from\"react-wordcloud\";import debounce from\"lodash/debounce\";import'tippy.js/dist/tippy.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const WordCloud=_ref=>{let{cloud_type,tweets,onWordCloudClick}=_ref;const[words,setWords]=useState([]);const[loading,setLoading]=useState(false);const fetchTerms=useCallback(debounce(()=>{setLoading(true);fetch(\"/get_terms\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify([cloud_type,tweets])}).then(response=>response.json()).then(data=>{setWords(data.value1);setLoading(false);}).catch(error=>{console.error(error);setLoading(false);});},500),[cloud_type,tweets]);useEffect(()=>{if(tweets.length>0){fetchTerms();}},[fetchTerms,tweets]);const options=useMemo(()=>({rotations:1,rotationAngles:[0],fontSizes:[15,60],colors:[\"#1f77b4\",\"#ff7f0e\",\"#2ca02c\",\"#d62728\",\"#9467bd\",\"#8c564b\"],enableTooltip:true,deterministic:true,fontFamily:\"impact\",fontStyle:\"normal\",fontWeight:\"normal\",padding:1,scale:\"sqrt\",spiral:\"archimedean\",transitionDuration:1000}),[]);const callbacks=useMemo(()=>({onWordClick:word=>onWordCloudClick(word.text)}),[]);const size=useMemo(()=>[500,600],[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"word-cloud-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:loading&&/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"word-cloud\",children:/*#__PURE__*/_jsx(ReactWordcloud,{words:words,options:options,size:size,padding:0,callbacks:callbacks})})]});};export default WordCloud;","map":{"version":3,"names":["React","useEffect","useState","useMemo","useCallback","ReactWordcloud","debounce","jsx","_jsx","jsxs","_jsxs","WordCloud","_ref","cloud_type","tweets","onWordCloudClick","words","setWords","loading","setLoading","fetchTerms","fetch","method","headers","body","JSON","stringify","then","response","json","data","value1","catch","error","console","length","options","rotations","rotationAngles","fontSizes","colors","enableTooltip","deterministic","fontFamily","fontStyle","fontWeight","padding","scale","spiral","transitionDuration","callbacks","onWordClick","word","text","size","className","children"],"sources":["/Users/fneffati/Documents/Classes/TBENVDASH/frontEnd/tbenv/src/components/WordCloud.js"],"sourcesContent":["import React, { useEffect, useState, useMemo, useCallback } from \"react\";\nimport ReactWordcloud from \"react-wordcloud\";\nimport debounce from \"lodash/debounce\";\nimport 'tippy.js/dist/tippy.css';\n\nconst WordCloud = ({ cloud_type, tweets, onWordCloudClick}) => {\n    const [words, setWords] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const fetchTerms = useCallback(\n        debounce(() => {\n            setLoading(true);\n            fetch(\"/get_terms\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify([cloud_type, tweets]),\n            })\n                .then((response) => response.json())\n                .then((data) => {\n                    setWords(data.value1);\n                    setLoading(false);\n                })\n                .catch((error) => {\n                    console.error(error);\n                    setLoading(false);\n                });\n        }, 500),\n        [cloud_type, tweets]\n    );\n\n    useEffect(() => {\n        if (tweets.length > 0) {\n            fetchTerms();\n        }\n    }, [fetchTerms, tweets]);\n\n    const options = useMemo(\n        () => ({\n            rotations: 1,\n            rotationAngles: [0],\n            fontSizes: [15, 60],\n            colors: [\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\"],\n            enableTooltip: true,\n            deterministic: true,\n            fontFamily: \"impact\",\n            fontStyle: \"normal\",\n            fontWeight: \"normal\",\n            padding: 1,\n            scale: \"sqrt\",\n            spiral: \"archimedean\",\n            transitionDuration: 1000,\n        }),\n        []\n    );\n\n    const callbacks = useMemo(\n        () => ({\n            onWordClick: (word) => onWordCloudClick(word.text)\n        }),\n        []\n    );\n\n    const size = useMemo(() => [500, 600], []);\n\n    return (\n        <div className=\"word-cloud-container\">\n            <div className=\"loading\">{loading && <p>Loading...</p>}</div>\n            <div className=\"word-cloud\">\n                <ReactWordcloud  words={words} options={options} size={size} padding={0} callbacks={callbacks}/>\n            </div>\n        </div>\n    );\n};\n\nexport default WordCloud;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}