{"ast":null,"code":"/**\n * @license\n * Copyright 2011 Dan Vanderkam (danvdk@gmail.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n\n/**\n * @fileoverview Based on PlotKitLayout, but modified to meet the needs of\n * dygraphs.\n */\n\n/*global Dygraph:false */\n\"use strict\";\n\nimport * as utils from './dygraph-utils';\n\n/**\n * Creates a new DygraphLayout object.\n *\n * This class contains all the data to be charted.\n * It uses data coordinates, but also records the chart range (in data\n * coordinates) and hence is able to calculate percentage positions ('In this\n * view, Point A lies 25% down the x-axis.')\n *\n * Two things that it does not do are:\n * 1. Record pixel coordinates for anything.\n * 2. (oddly) determine anything about the layout of chart elements.\n *\n * The naming is a vestige of Dygraph's original PlotKit roots.\n *\n * @constructor\n */\nvar DygraphLayout = function (dygraph) {\n  this.dygraph_ = dygraph;\n  /**\n   * Array of points for each series.\n   *\n   * [series index][row index in series] = |Point| structure,\n   * where series index refers to visible series only, and the\n   * point index is for the reduced set of points for the current\n   * zoom region (including one point just outside the window).\n   * All points in the same row index share the same X value.\n   *\n   * @type {Array.<Array.<Dygraph.PointType>>}\n   */\n  this.points = [];\n  this.setNames = [];\n  this.annotations = [];\n  this.yAxes_ = null;\n\n  // TODO(danvk): it's odd that xTicks_ and yTicks_ are inputs,\n  // but xticks and yticks are outputs. Clean this up.\n  this.xTicks_ = null;\n  this.yTicks_ = null;\n};\n\n/**\n * Add points for a single series.\n *\n * @param {string} setname Name of the series.\n * @param {Array.<Dygraph.PointType>} set_xy Points for the series.\n */\nDygraphLayout.prototype.addDataset = function (setname, set_xy) {\n  this.points.push(set_xy);\n  this.setNames.push(setname);\n};\n\n/**\n * Returns the box which the chart should be drawn in. This is the canvas's\n * box, less space needed for the axis and chart labels.\n *\n * @return {{x: number, y: number, w: number, h: number}}\n */\nDygraphLayout.prototype.getPlotArea = function () {\n  return this.area_;\n};\n\n// Compute the box which the chart should be drawn in. This is the canvas's\n// box, less space needed for axis, chart labels, and other plug-ins.\n// NOTE: This should only be called by Dygraph.predraw_().\nDygraphLayout.prototype.computePlotArea = function () {\n  var area = {\n    // TODO(danvk): per-axis setting.\n    x: 0,\n    y: 0\n  };\n  area.w = this.dygraph_.width_ - area.x - this.dygraph_.getOption('rightGap');\n  area.h = this.dygraph_.height_;\n\n  // Let plugins reserve space.\n  var e = {\n    chart_div: this.dygraph_.graphDiv,\n    reserveSpaceLeft: function (px) {\n      var r = {\n        x: area.x,\n        y: area.y,\n        w: px,\n        h: area.h\n      };\n      area.x += px;\n      area.w -= px;\n      return r;\n    },\n    reserveSpaceRight: function (px) {\n      var r = {\n        x: area.x + area.w - px,\n        y: area.y,\n        w: px,\n        h: area.h\n      };\n      area.w -= px;\n      return r;\n    },\n    reserveSpaceTop: function (px) {\n      var r = {\n        x: area.x,\n        y: area.y,\n        w: area.w,\n        h: px\n      };\n      area.y += px;\n      area.h -= px;\n      return r;\n    },\n    reserveSpaceBottom: function (px) {\n      var r = {\n        x: area.x,\n        y: area.y + area.h - px,\n        w: area.w,\n        h: px\n      };\n      area.h -= px;\n      return r;\n    },\n    chartRect: function () {\n      return {\n        x: area.x,\n        y: area.y,\n        w: area.w,\n        h: area.h\n      };\n    }\n  };\n  this.dygraph_.cascadeEvents_('layout', e);\n  this.area_ = area;\n};\nDygraphLayout.prototype.setAnnotations = function (ann) {\n  // The Dygraph object's annotations aren't parsed. We parse them here and\n  // save a copy. If there is no parser, then the user must be using raw format.\n  this.annotations = [];\n  var parse = this.dygraph_.getOption('xValueParser') || function (x) {\n    return x;\n  };\n  for (var i = 0; i < ann.length; i++) {\n    var a = {};\n    if (!ann[i].xval && ann[i].x === undefined) {\n      console.error(\"Annotations must have an 'x' property\");\n      return;\n    }\n    if (ann[i].icon && !(ann[i].hasOwnProperty('width') && ann[i].hasOwnProperty('height'))) {\n      console.error(\"Must set width and height when setting \" + \"annotation.icon property\");\n      return;\n    }\n    utils.update(a, ann[i]);\n    if (!a.xval) a.xval = parse(a.x);\n    this.annotations.push(a);\n  }\n};\nDygraphLayout.prototype.setXTicks = function (xTicks) {\n  this.xTicks_ = xTicks;\n};\n\n// TODO(danvk): add this to the Dygraph object's API or move it into Layout.\nDygraphLayout.prototype.setYAxes = function (yAxes) {\n  this.yAxes_ = yAxes;\n};\nDygraphLayout.prototype.evaluate = function () {\n  this._xAxis = {};\n  this._evaluateLimits();\n  this._evaluateLineCharts();\n  this._evaluateLineTicks();\n  this._evaluateAnnotations();\n};\nDygraphLayout.prototype._evaluateLimits = function () {\n  var xlimits = this.dygraph_.xAxisRange();\n  this._xAxis.minval = xlimits[0];\n  this._xAxis.maxval = xlimits[1];\n  var xrange = xlimits[1] - xlimits[0];\n  this._xAxis.scale = xrange !== 0 ? 1 / xrange : 1.0;\n  if (this.dygraph_.getOptionForAxis(\"logscale\", 'x')) {\n    this._xAxis.xlogrange = utils.log10(this._xAxis.maxval) - utils.log10(this._xAxis.minval);\n    this._xAxis.xlogscale = this._xAxis.xlogrange !== 0 ? 1.0 / this._xAxis.xlogrange : 1.0;\n  }\n  for (var i = 0; i < this.yAxes_.length; i++) {\n    var axis = this.yAxes_[i];\n    axis.minyval = axis.computedValueRange[0];\n    axis.maxyval = axis.computedValueRange[1];\n    axis.yrange = axis.maxyval - axis.minyval;\n    axis.yscale = axis.yrange !== 0 ? 1.0 / axis.yrange : 1.0;\n    if (this.dygraph_.getOption(\"logscale\") || axis.logscale) {\n      axis.ylogrange = utils.log10(axis.maxyval) - utils.log10(axis.minyval);\n      axis.ylogscale = axis.ylogrange !== 0 ? 1.0 / axis.ylogrange : 1.0;\n      if (!isFinite(axis.ylogrange) || isNaN(axis.ylogrange)) {\n        console.error('axis ' + i + ' of graph at ' + axis.g + ' can\\'t be displayed in log scale for range [' + axis.minyval + ' - ' + axis.maxyval + ']');\n      }\n    }\n  }\n};\nDygraphLayout.calcXNormal_ = function (value, xAxis, logscale) {\n  if (logscale) {\n    return (utils.log10(value) - utils.log10(xAxis.minval)) * xAxis.xlogscale;\n  } else {\n    return (value - xAxis.minval) * xAxis.scale;\n  }\n};\n\n/**\n * @param {DygraphAxisType} axis\n * @param {number} value\n * @param {boolean} logscale\n * @return {number}\n */\nDygraphLayout.calcYNormal_ = function (axis, value, logscale) {\n  if (logscale) {\n    var x = 1.0 - (utils.log10(value) - utils.log10(axis.minyval)) * axis.ylogscale;\n    return isFinite(x) ? x : NaN; // shim for v8 issue; see pull request 276\n  } else {\n    return 1.0 - (value - axis.minyval) * axis.yscale;\n  }\n};\nDygraphLayout.prototype._evaluateLineCharts = function () {\n  var isStacked = this.dygraph_.getOption(\"stackedGraph\");\n  var isLogscaleForX = this.dygraph_.getOptionForAxis(\"logscale\", 'x');\n  for (var setIdx = 0; setIdx < this.points.length; setIdx++) {\n    var points = this.points[setIdx];\n    var setName = this.setNames[setIdx];\n    var connectSeparated = this.dygraph_.getOption('connectSeparatedPoints', setName);\n    var axis = this.dygraph_.axisPropertiesForSeries(setName);\n    // TODO (konigsberg): use optionsForAxis instead.\n    var logscale = this.dygraph_.attributes_.getForSeries(\"logscale\", setName);\n    for (var j = 0; j < points.length; j++) {\n      var point = points[j];\n\n      // Range from 0-1 where 0 represents left and 1 represents right.\n      point.x = DygraphLayout.calcXNormal_(point.xval, this._xAxis, isLogscaleForX);\n      // Range from 0-1 where 0 represents top and 1 represents bottom\n      var yval = point.yval;\n      if (isStacked) {\n        point.y_stacked = DygraphLayout.calcYNormal_(axis, point.yval_stacked, logscale);\n        if (yval !== null && !isNaN(yval)) {\n          yval = point.yval_stacked;\n        }\n      }\n      if (yval === null) {\n        yval = NaN;\n        if (!connectSeparated) {\n          point.yval = NaN;\n        }\n      }\n      point.y = DygraphLayout.calcYNormal_(axis, yval, logscale);\n    }\n    this.dygraph_.dataHandler_.onLineEvaluated(points, axis, logscale);\n  }\n};\nDygraphLayout.prototype._evaluateLineTicks = function () {\n  var i, tick, label, pos, v, has_tick;\n  this.xticks = [];\n  for (i = 0; i < this.xTicks_.length; i++) {\n    tick = this.xTicks_[i];\n    label = tick.label;\n    has_tick = !('label_v' in tick);\n    v = has_tick ? tick.v : tick.label_v;\n    pos = this.dygraph_.toPercentXCoord(v);\n    if (pos >= 0.0 && pos < 1.0) {\n      this.xticks.push({\n        pos,\n        label,\n        has_tick\n      });\n    }\n  }\n  this.yticks = [];\n  for (i = 0; i < this.yAxes_.length; i++) {\n    var axis = this.yAxes_[i];\n    for (var j = 0; j < axis.ticks.length; j++) {\n      tick = axis.ticks[j];\n      label = tick.label;\n      has_tick = !('label_v' in tick);\n      v = has_tick ? tick.v : tick.label_v;\n      pos = this.dygraph_.toPercentYCoord(v, i);\n      if (pos > 0.0 && pos <= 1.0) {\n        this.yticks.push({\n          axis: i,\n          pos,\n          label,\n          has_tick\n        });\n      }\n    }\n  }\n};\nDygraphLayout.prototype._evaluateAnnotations = function () {\n  // Add the annotations to the point to which they belong.\n  // Make a map from (setName, xval) to annotation for quick lookups.\n  var i;\n  var annotations = {};\n  for (i = 0; i < this.annotations.length; i++) {\n    var a = this.annotations[i];\n    annotations[a.xval + \",\" + a.series] = a;\n  }\n  this.annotated_points = [];\n\n  // Exit the function early if there are no annotations.\n  if (!this.annotations || !this.annotations.length) {\n    return;\n  }\n\n  // TODO(antrob): loop through annotations not points.\n  for (var setIdx = 0; setIdx < this.points.length; setIdx++) {\n    var points = this.points[setIdx];\n    for (i = 0; i < points.length; i++) {\n      var p = points[i];\n      var k = p.xval + \",\" + p.name;\n      if (k in annotations) {\n        p.annotation = annotations[k];\n        this.annotated_points.push(p);\n        //if there are multiple same x-valued points, the annotation would be rendered multiple times\n        //remove already rendered annotation\n        delete annotations[k];\n      }\n    }\n  }\n};\n\n/**\n * Convenience function to remove all the data sets from a graph\n */\nDygraphLayout.prototype.removeAllDatasets = function () {\n  delete this.points;\n  delete this.setNames;\n  delete this.setPointsLengths;\n  delete this.setPointsOffsets;\n  this.points = [];\n  this.setNames = [];\n  this.setPointsLengths = [];\n  this.setPointsOffsets = [];\n};\nexport default DygraphLayout;","map":{"version":3,"names":["utils","DygraphLayout","dygraph","dygraph_","points","setNames","annotations","yAxes_","xTicks_","yTicks_","prototype","addDataset","setname","set_xy","push","getPlotArea","area_","computePlotArea","area","x","y","w","width_","getOption","h","height_","e","chart_div","graphDiv","reserveSpaceLeft","px","r","reserveSpaceRight","reserveSpaceTop","reserveSpaceBottom","chartRect","cascadeEvents_","setAnnotations","ann","parse","i","length","a","xval","undefined","console","error","icon","hasOwnProperty","update","setXTicks","xTicks","setYAxes","yAxes","evaluate","_xAxis","_evaluateLimits","_evaluateLineCharts","_evaluateLineTicks","_evaluateAnnotations","xlimits","xAxisRange","minval","maxval","xrange","scale","getOptionForAxis","xlogrange","log10","xlogscale","axis","minyval","computedValueRange","maxyval","yrange","yscale","logscale","ylogrange","ylogscale","isFinite","isNaN","g","calcXNormal_","value","xAxis","calcYNormal_","NaN","isStacked","isLogscaleForX","setIdx","setName","connectSeparated","axisPropertiesForSeries","attributes_","getForSeries","j","point","yval","y_stacked","yval_stacked","dataHandler_","onLineEvaluated","tick","label","pos","v","has_tick","xticks","label_v","toPercentXCoord","yticks","ticks","toPercentYCoord","series","annotated_points","p","k","name","annotation","removeAllDatasets","setPointsLengths","setPointsOffsets"],"sources":["/Users/fneffati/Documents/Classes/TBRTD/frontEnd/node_modules/dygraphs/src/dygraph-layout.js"],"sourcesContent":["/**\n * @license\n * Copyright 2011 Dan Vanderkam (danvdk@gmail.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n\n/**\n * @fileoverview Based on PlotKitLayout, but modified to meet the needs of\n * dygraphs.\n */\n\n/*global Dygraph:false */\n\"use strict\";\n\nimport * as utils from './dygraph-utils';\n\n/**\n * Creates a new DygraphLayout object.\n *\n * This class contains all the data to be charted.\n * It uses data coordinates, but also records the chart range (in data\n * coordinates) and hence is able to calculate percentage positions ('In this\n * view, Point A lies 25% down the x-axis.')\n *\n * Two things that it does not do are:\n * 1. Record pixel coordinates for anything.\n * 2. (oddly) determine anything about the layout of chart elements.\n *\n * The naming is a vestige of Dygraph's original PlotKit roots.\n *\n * @constructor\n */\nvar DygraphLayout = function(dygraph) {\n  this.dygraph_ = dygraph;\n  /**\n   * Array of points for each series.\n   *\n   * [series index][row index in series] = |Point| structure,\n   * where series index refers to visible series only, and the\n   * point index is for the reduced set of points for the current\n   * zoom region (including one point just outside the window).\n   * All points in the same row index share the same X value.\n   *\n   * @type {Array.<Array.<Dygraph.PointType>>}\n   */\n  this.points = [];\n  this.setNames = [];\n  this.annotations = [];\n  this.yAxes_ = null;\n\n  // TODO(danvk): it's odd that xTicks_ and yTicks_ are inputs,\n  // but xticks and yticks are outputs. Clean this up.\n  this.xTicks_ = null;\n  this.yTicks_ = null;\n};\n\n/**\n * Add points for a single series.\n *\n * @param {string} setname Name of the series.\n * @param {Array.<Dygraph.PointType>} set_xy Points for the series.\n */\nDygraphLayout.prototype.addDataset = function(setname, set_xy) {\n  this.points.push(set_xy);\n  this.setNames.push(setname);\n};\n\n/**\n * Returns the box which the chart should be drawn in. This is the canvas's\n * box, less space needed for the axis and chart labels.\n *\n * @return {{x: number, y: number, w: number, h: number}}\n */\nDygraphLayout.prototype.getPlotArea = function() {\n  return this.area_;\n};\n\n// Compute the box which the chart should be drawn in. This is the canvas's\n// box, less space needed for axis, chart labels, and other plug-ins.\n// NOTE: This should only be called by Dygraph.predraw_().\nDygraphLayout.prototype.computePlotArea = function() {\n  var area = {\n    // TODO(danvk): per-axis setting.\n    x: 0,\n    y: 0\n  };\n\n  area.w = this.dygraph_.width_ - area.x - this.dygraph_.getOption('rightGap');\n  area.h = this.dygraph_.height_;\n\n  // Let plugins reserve space.\n  var e = {\n    chart_div: this.dygraph_.graphDiv,\n    reserveSpaceLeft: function(px) {\n      var r = {\n        x: area.x,\n        y: area.y,\n        w: px,\n        h: area.h\n      };\n      area.x += px;\n      area.w -= px;\n      return r;\n    },\n    reserveSpaceRight: function(px) {\n      var r = {\n        x: area.x + area.w - px,\n        y: area.y,\n        w: px,\n        h: area.h\n      };\n      area.w -= px;\n      return r;\n    },\n    reserveSpaceTop: function(px) {\n      var r = {\n        x: area.x,\n        y: area.y,\n        w: area.w,\n        h: px\n      };\n      area.y += px;\n      area.h -= px;\n      return r;\n    },\n    reserveSpaceBottom: function(px) {\n      var r = {\n        x: area.x,\n        y: area.y + area.h - px,\n        w: area.w,\n        h: px\n      };\n      area.h -= px;\n      return r;\n    },\n    chartRect: function() {\n      return {x:area.x, y:area.y, w:area.w, h:area.h};\n    }\n  };\n  this.dygraph_.cascadeEvents_('layout', e);\n\n  this.area_ = area;\n};\n\nDygraphLayout.prototype.setAnnotations = function(ann) {\n  // The Dygraph object's annotations aren't parsed. We parse them here and\n  // save a copy. If there is no parser, then the user must be using raw format.\n  this.annotations = [];\n  var parse = this.dygraph_.getOption('xValueParser') || function(x) { return x; };\n  for (var i = 0; i < ann.length; i++) {\n    var a = {};\n    if (!ann[i].xval && ann[i].x === undefined) {\n      console.error(\"Annotations must have an 'x' property\");\n      return;\n    }\n    if (ann[i].icon &&\n        !(ann[i].hasOwnProperty('width') &&\n          ann[i].hasOwnProperty('height'))) {\n      console.error(\"Must set width and height when setting \" +\n                    \"annotation.icon property\");\n      return;\n    }\n    utils.update(a, ann[i]);\n    if (!a.xval) a.xval = parse(a.x);\n    this.annotations.push(a);\n  }\n};\n\nDygraphLayout.prototype.setXTicks = function(xTicks) {\n  this.xTicks_ = xTicks;\n};\n\n// TODO(danvk): add this to the Dygraph object's API or move it into Layout.\nDygraphLayout.prototype.setYAxes = function (yAxes) {\n  this.yAxes_ = yAxes;\n};\n\nDygraphLayout.prototype.evaluate = function() {\n  this._xAxis = {};\n  this._evaluateLimits();\n  this._evaluateLineCharts();\n  this._evaluateLineTicks();\n  this._evaluateAnnotations();\n};\n\nDygraphLayout.prototype._evaluateLimits = function() {\n  var xlimits = this.dygraph_.xAxisRange();\n  this._xAxis.minval = xlimits[0];\n  this._xAxis.maxval = xlimits[1];\n  var xrange = xlimits[1] - xlimits[0];\n  this._xAxis.scale = (xrange !== 0 ? 1 / xrange : 1.0);\n\n  if (this.dygraph_.getOptionForAxis(\"logscale\", 'x')) {\n    this._xAxis.xlogrange = utils.log10(this._xAxis.maxval) - utils.log10(this._xAxis.minval);\n    this._xAxis.xlogscale = (this._xAxis.xlogrange !== 0 ? 1.0 / this._xAxis.xlogrange : 1.0);\n  }\n  for (var i = 0; i < this.yAxes_.length; i++) {\n    var axis = this.yAxes_[i];\n    axis.minyval = axis.computedValueRange[0];\n    axis.maxyval = axis.computedValueRange[1];\n    axis.yrange = axis.maxyval - axis.minyval;\n    axis.yscale = (axis.yrange !== 0 ? 1.0 / axis.yrange : 1.0);\n\n    if (this.dygraph_.getOption(\"logscale\") || axis.logscale) {\n      axis.ylogrange = utils.log10(axis.maxyval) - utils.log10(axis.minyval);\n      axis.ylogscale = (axis.ylogrange !== 0 ? 1.0 / axis.ylogrange : 1.0);\n      if (!isFinite(axis.ylogrange) || isNaN(axis.ylogrange)) {\n        console.error('axis ' + i + ' of graph at ' + axis.g +\n                      ' can\\'t be displayed in log scale for range [' +\n                      axis.minyval + ' - ' + axis.maxyval + ']');\n      }\n    }\n  }\n};\n\nDygraphLayout.calcXNormal_ = function(value, xAxis, logscale) {\n  if (logscale) {\n    return ((utils.log10(value) - utils.log10(xAxis.minval)) * xAxis.xlogscale);\n  } else {\n    return (value - xAxis.minval) * xAxis.scale;\n  }\n};\n\n/**\n * @param {DygraphAxisType} axis\n * @param {number} value\n * @param {boolean} logscale\n * @return {number}\n */\nDygraphLayout.calcYNormal_ = function(axis, value, logscale) {\n  if (logscale) {\n    var x = 1.0 - ((utils.log10(value) - utils.log10(axis.minyval)) * axis.ylogscale);\n    return isFinite(x) ? x : NaN;  // shim for v8 issue; see pull request 276\n  } else {\n    return 1.0 - ((value - axis.minyval) * axis.yscale);\n  }\n};\n\nDygraphLayout.prototype._evaluateLineCharts = function() {\n  var isStacked = this.dygraph_.getOption(\"stackedGraph\");\n  var isLogscaleForX = this.dygraph_.getOptionForAxis(\"logscale\", 'x');\n\n  for (var setIdx = 0; setIdx < this.points.length; setIdx++) {\n    var points = this.points[setIdx];\n    var setName = this.setNames[setIdx];\n    var connectSeparated = this.dygraph_.getOption('connectSeparatedPoints', setName);\n    var axis = this.dygraph_.axisPropertiesForSeries(setName);\n    // TODO (konigsberg): use optionsForAxis instead.\n    var logscale = this.dygraph_.attributes_.getForSeries(\"logscale\", setName);\n\n    for (var j = 0; j < points.length; j++) {\n      var point = points[j];\n\n      // Range from 0-1 where 0 represents left and 1 represents right.\n      point.x = DygraphLayout.calcXNormal_(point.xval, this._xAxis, isLogscaleForX);\n      // Range from 0-1 where 0 represents top and 1 represents bottom\n      var yval = point.yval;\n      if (isStacked) {\n        point.y_stacked = DygraphLayout.calcYNormal_(\n            axis, point.yval_stacked, logscale);\n        if (yval !== null && !isNaN(yval)) {\n          yval = point.yval_stacked;\n        }\n      }\n      if (yval === null) {\n        yval = NaN;\n        if (!connectSeparated) {\n          point.yval = NaN;\n        }\n      }\n      point.y = DygraphLayout.calcYNormal_(axis, yval, logscale);\n    }\n\n    this.dygraph_.dataHandler_.onLineEvaluated(points, axis, logscale);\n  }\n};\n\nDygraphLayout.prototype._evaluateLineTicks = function() {\n  var i, tick, label, pos, v, has_tick;\n  this.xticks = [];\n  for (i = 0; i < this.xTicks_.length; i++) {\n    tick = this.xTicks_[i];\n    label = tick.label;\n    has_tick = !('label_v' in tick);\n    v = has_tick ? tick.v : tick.label_v;\n    pos = this.dygraph_.toPercentXCoord(v);\n    if ((pos >= 0.0) && (pos < 1.0)) {\n      this.xticks.push({pos, label, has_tick});\n    }\n  }\n\n  this.yticks = [];\n  for (i = 0; i < this.yAxes_.length; i++ ) {\n    var axis = this.yAxes_[i];\n    for (var j = 0; j < axis.ticks.length; j++) {\n      tick = axis.ticks[j];\n      label = tick.label;\n      has_tick = !('label_v' in tick);\n      v = has_tick ? tick.v : tick.label_v;\n      pos = this.dygraph_.toPercentYCoord(v, i);\n      if ((pos > 0.0) && (pos <= 1.0)) {\n        this.yticks.push({axis: i, pos, label, has_tick});\n      }\n    }\n  }\n};\n\nDygraphLayout.prototype._evaluateAnnotations = function() {\n  // Add the annotations to the point to which they belong.\n  // Make a map from (setName, xval) to annotation for quick lookups.\n  var i;\n  var annotations = {};\n  for (i = 0; i < this.annotations.length; i++) {\n    var a = this.annotations[i];\n    annotations[a.xval + \",\" + a.series] = a;\n  }\n\n  this.annotated_points = [];\n\n  // Exit the function early if there are no annotations.\n  if (!this.annotations || !this.annotations.length) {\n    return;\n  }\n\n  // TODO(antrob): loop through annotations not points.\n  for (var setIdx = 0; setIdx < this.points.length; setIdx++) {\n    var points = this.points[setIdx];\n    for (i = 0; i < points.length; i++) {\n      var p = points[i];\n      var k = p.xval + \",\" + p.name;\n      if (k in annotations) {\n        p.annotation = annotations[k];\n        this.annotated_points.push(p);\n        //if there are multiple same x-valued points, the annotation would be rendered multiple times\n        //remove already rendered annotation\n        delete annotations[k];\n      }\n    }\n  }\n};\n\n/**\n * Convenience function to remove all the data sets from a graph\n */\nDygraphLayout.prototype.removeAllDatasets = function() {\n  delete this.points;\n  delete this.setNames;\n  delete this.setPointsLengths;\n  delete this.setPointsOffsets;\n  this.points = [];\n  this.setNames = [];\n  this.setPointsLengths = [];\n  this.setPointsOffsets = [];\n};\n\nexport default DygraphLayout;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}