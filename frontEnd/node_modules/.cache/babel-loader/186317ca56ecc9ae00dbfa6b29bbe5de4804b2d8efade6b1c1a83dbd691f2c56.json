{"ast":null,"code":"import React,{useEffect,useMemo,useState}from\"react\";import ReactWordcloud from\"react-wordcloud\";import'tippy.js/dist/tippy.css';import Util from'./analysis';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const WordCloud=_ref=>{let{cloud_type,tweets,onWordCloudClick}=_ref;const[words,setWords]=useState([{text:\"LOADING\",value:20}]);const[loading,setLoading]=useState(false);useEffect(()=>{if(tweets.length>0){if(cloud_type.length===0||cloud_type[0]==='Single Term Cloud'){const top100Words=Util.regularWordCloud(tweets);setWords(top100Words);}else if(cloud_type[0]===\"Geo Hashtags\"){const hashtags=Util.geohashtagsCloud(tweets);setWords(hashtags);}else if(cloud_type[0]===\"Non-Geo Hashtags\"){const hashtags=Util.nonGeohashtagsCloud(tweets);setWords(hashtags);}}else{setWords([{text:\"LOADING\",value:20}]);}},[tweets,cloud_type]);const options=useMemo(()=>({rotations:1,rotationAngles:[0],fontSizes:[15,60],colors:[\"#1f77b4\",\"#ff7f0e\",\"#2ca02c\",\"#d62728\",\"#9467bd\",\"#8c564b\"],enableTooltip:true,deterministic:true,fontFamily:\"impact\",fontStyle:\"normal\",fontWeight:\"normal\",padding:1,scale:\"sqrt\",spiral:\"archimedean\",transitionDuration:1000}),[]);const callbacks=useMemo(()=>({onWordClick:word=>onWordCloudClick(word.text)}),[]);const size=useMemo(()=>[500,600],[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"word-cloud-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:loading&&/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"word-cloud\",children:/*#__PURE__*/_jsx(ReactWordcloud,{words:words,options:options,size:size,padding:0,callbacks:callbacks})})]});};export default WordCloud;","map":{"version":3,"names":["React","useEffect","useMemo","useState","ReactWordcloud","Util","jsx","_jsx","jsxs","_jsxs","WordCloud","_ref","cloud_type","tweets","onWordCloudClick","words","setWords","text","value","loading","setLoading","length","top100Words","regularWordCloud","hashtags","geohashtagsCloud","nonGeohashtagsCloud","options","rotations","rotationAngles","fontSizes","colors","enableTooltip","deterministic","fontFamily","fontStyle","fontWeight","padding","scale","spiral","transitionDuration","callbacks","onWordClick","word","size","className","children"],"sources":["/Users/fneffati/Documents/Classes/TBRTD/frontend/src/components/WordCloud.js"],"sourcesContent":["import React, {useEffect, useMemo, useState} from \"react\";\nimport ReactWordcloud from \"react-wordcloud\";\nimport 'tippy.js/dist/tippy.css';\nimport Util from './analysis';\n\n\nconst WordCloud = ({ cloud_type, tweets, onWordCloudClick}) => {\n\n    const [words, setWords] = useState([{\n        text: \"LOADING\",\n        value: 20\n    }]);\n    const [loading, setLoading] = useState(false);\n\n\n    useEffect(() => {\n        if (tweets.length > 0) {\n            if (cloud_type.length === 0 || cloud_type[0] === 'Single Term Cloud') {\n                const top100Words = Util.regularWordCloud(tweets);\n                setWords(top100Words);\n            } else if (cloud_type[0] === \"Geo Hashtags\") {\n                const hashtags = Util.geohashtagsCloud(tweets);\n                setWords(hashtags);\n            }\n            else if (cloud_type[0] === \"Non-Geo Hashtags\") {\n                const hashtags = Util.nonGeohashtagsCloud(tweets);\n                setWords(hashtags);\n            }\n        } else {\n            setWords([{\n                text: \"LOADING\",\n                value: 20\n            }]);\n        }\n    }, [tweets, cloud_type]);\n\n\n    const options = useMemo(\n        () => ({\n            rotations: 1,\n            rotationAngles: [0],\n            fontSizes: [15, 60],\n            colors: [\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\"],\n            enableTooltip: true,\n            deterministic: true,\n            fontFamily: \"impact\",\n            fontStyle: \"normal\",\n            fontWeight: \"normal\",\n            padding: 1,\n            scale: \"sqrt\",\n            spiral: \"archimedean\",\n            transitionDuration: 1000,\n        }),\n        []\n    );\n\n    const callbacks = useMemo(\n        () => ({\n            onWordClick: (word) => onWordCloudClick(word.text)\n        }),\n        []\n    );\n\n    const size = useMemo(() => [500, 600], []);\n\n    return (\n        <div className=\"word-cloud-container\">\n            <div className=\"loading\">{loading && <p>Loading...</p>}</div>\n            <div className=\"word-cloud\">\n                <ReactWordcloud  words={words} options={options} size={size} padding={0} callbacks={callbacks}/>\n            </div>\n        </div>\n    );\n};\n\nexport default WordCloud;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}