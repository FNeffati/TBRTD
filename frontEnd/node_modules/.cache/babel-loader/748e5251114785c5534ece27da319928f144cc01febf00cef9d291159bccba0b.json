{"ast":null,"code":"import * as DomEvent from './DomEvent';\nimport Browser from '../core/Browser';\nimport { falseFn } from '../core/Util';\n\n/*\n * Extends L.DomEvent to provide touch support for Internet Explorer and Windows-based devices.\n */\n\nvar POINTER_DOWN = Browser.msPointer ? 'MSPointerDown' : 'pointerdown';\nvar POINTER_MOVE = Browser.msPointer ? 'MSPointerMove' : 'pointermove';\nvar POINTER_UP = Browser.msPointer ? 'MSPointerUp' : 'pointerup';\nvar POINTER_CANCEL = Browser.msPointer ? 'MSPointerCancel' : 'pointercancel';\nvar pEvent = {\n  touchstart: POINTER_DOWN,\n  touchmove: POINTER_MOVE,\n  touchend: POINTER_UP,\n  touchcancel: POINTER_CANCEL\n};\nvar handle = {\n  touchstart: _onPointerStart,\n  touchmove: _handlePointer,\n  touchend: _handlePointer,\n  touchcancel: _handlePointer\n};\nvar _pointers = {};\nvar _pointerDocListener = false;\n\n// Provides a touch events wrapper for (ms)pointer events.\n// ref https://www.w3.org/TR/pointerevents/ https://www.w3.org/Bugs/Public/show_bug.cgi?id=22890\n\nexport function addPointerListener(obj, type, handler) {\n  if (type === 'touchstart') {\n    _addPointerDocListener();\n  }\n  if (!handle[type]) {\n    console.warn('wrong event specified:', type);\n    return falseFn;\n  }\n  handler = handle[type].bind(this, handler);\n  obj.addEventListener(pEvent[type], handler, false);\n  return handler;\n}\nexport function removePointerListener(obj, type, handler) {\n  if (!pEvent[type]) {\n    console.warn('wrong event specified:', type);\n    return;\n  }\n  obj.removeEventListener(pEvent[type], handler, false);\n}\nfunction _globalPointerDown(e) {\n  _pointers[e.pointerId] = e;\n}\nfunction _globalPointerMove(e) {\n  if (_pointers[e.pointerId]) {\n    _pointers[e.pointerId] = e;\n  }\n}\nfunction _globalPointerUp(e) {\n  delete _pointers[e.pointerId];\n}\nfunction _addPointerDocListener() {\n  // need to keep track of what pointers and how many are active to provide e.touches emulation\n  if (!_pointerDocListener) {\n    // we listen document as any drags that end by moving the touch off the screen get fired there\n    document.addEventListener(POINTER_DOWN, _globalPointerDown, true);\n    document.addEventListener(POINTER_MOVE, _globalPointerMove, true);\n    document.addEventListener(POINTER_UP, _globalPointerUp, true);\n    document.addEventListener(POINTER_CANCEL, _globalPointerUp, true);\n    _pointerDocListener = true;\n  }\n}\nfunction _handlePointer(handler, e) {\n  if (e.pointerType === (e.MSPOINTER_TYPE_MOUSE || 'mouse')) {\n    return;\n  }\n  e.touches = [];\n  for (var i in _pointers) {\n    e.touches.push(_pointers[i]);\n  }\n  e.changedTouches = [e];\n  handler(e);\n}\nfunction _onPointerStart(handler, e) {\n  // IE10 specific: MsTouch needs preventDefault. See #2000\n  if (e.MSPOINTER_TYPE_TOUCH && e.pointerType === e.MSPOINTER_TYPE_TOUCH) {\n    DomEvent.preventDefault(e);\n  }\n  _handlePointer(handler, e);\n}","map":{"version":3,"names":["DomEvent","Browser","falseFn","POINTER_DOWN","msPointer","POINTER_MOVE","POINTER_UP","POINTER_CANCEL","pEvent","touchstart","touchmove","touchend","touchcancel","handle","_onPointerStart","_handlePointer","_pointers","_pointerDocListener","addPointerListener","obj","type","handler","_addPointerDocListener","console","warn","bind","addEventListener","removePointerListener","removeEventListener","_globalPointerDown","e","pointerId","_globalPointerMove","_globalPointerUp","document","pointerType","MSPOINTER_TYPE_MOUSE","touches","i","push","changedTouches","MSPOINTER_TYPE_TOUCH","preventDefault"],"sources":["/Users/fneffati/Documents/Classes/TBRTD/frontend/node_modules/leaflet/src/dom/DomEvent.Pointer.js"],"sourcesContent":["import * as DomEvent from './DomEvent';\nimport Browser from '../core/Browser';\nimport {falseFn} from '../core/Util';\n\n/*\n * Extends L.DomEvent to provide touch support for Internet Explorer and Windows-based devices.\n */\n\nvar POINTER_DOWN =   Browser.msPointer ? 'MSPointerDown'   : 'pointerdown';\nvar POINTER_MOVE =   Browser.msPointer ? 'MSPointerMove'   : 'pointermove';\nvar POINTER_UP =     Browser.msPointer ? 'MSPointerUp'     : 'pointerup';\nvar POINTER_CANCEL = Browser.msPointer ? 'MSPointerCancel' : 'pointercancel';\nvar pEvent = {\n\ttouchstart  : POINTER_DOWN,\n\ttouchmove   : POINTER_MOVE,\n\ttouchend    : POINTER_UP,\n\ttouchcancel : POINTER_CANCEL\n};\nvar handle = {\n\ttouchstart  : _onPointerStart,\n\ttouchmove   : _handlePointer,\n\ttouchend    : _handlePointer,\n\ttouchcancel : _handlePointer\n};\nvar _pointers = {};\nvar _pointerDocListener = false;\n\n// Provides a touch events wrapper for (ms)pointer events.\n// ref https://www.w3.org/TR/pointerevents/ https://www.w3.org/Bugs/Public/show_bug.cgi?id=22890\n\nexport function addPointerListener(obj, type, handler) {\n\tif (type === 'touchstart') {\n\t\t_addPointerDocListener();\n\t}\n\tif (!handle[type]) {\n\t\tconsole.warn('wrong event specified:', type);\n\t\treturn falseFn;\n\t}\n\thandler = handle[type].bind(this, handler);\n\tobj.addEventListener(pEvent[type], handler, false);\n\treturn handler;\n}\n\nexport function removePointerListener(obj, type, handler) {\n\tif (!pEvent[type]) {\n\t\tconsole.warn('wrong event specified:', type);\n\t\treturn;\n\t}\n\tobj.removeEventListener(pEvent[type], handler, false);\n}\n\nfunction _globalPointerDown(e) {\n\t_pointers[e.pointerId] = e;\n}\n\nfunction _globalPointerMove(e) {\n\tif (_pointers[e.pointerId]) {\n\t\t_pointers[e.pointerId] = e;\n\t}\n}\n\nfunction _globalPointerUp(e) {\n\tdelete _pointers[e.pointerId];\n}\n\nfunction _addPointerDocListener() {\n\t// need to keep track of what pointers and how many are active to provide e.touches emulation\n\tif (!_pointerDocListener) {\n\t\t// we listen document as any drags that end by moving the touch off the screen get fired there\n\t\tdocument.addEventListener(POINTER_DOWN, _globalPointerDown, true);\n\t\tdocument.addEventListener(POINTER_MOVE, _globalPointerMove, true);\n\t\tdocument.addEventListener(POINTER_UP, _globalPointerUp, true);\n\t\tdocument.addEventListener(POINTER_CANCEL, _globalPointerUp, true);\n\n\t\t_pointerDocListener = true;\n\t}\n}\n\nfunction _handlePointer(handler, e) {\n\tif (e.pointerType === (e.MSPOINTER_TYPE_MOUSE || 'mouse')) { return; }\n\n\te.touches = [];\n\tfor (var i in _pointers) {\n\t\te.touches.push(_pointers[i]);\n\t}\n\te.changedTouches = [e];\n\n\thandler(e);\n}\n\nfunction _onPointerStart(handler, e) {\n\t// IE10 specific: MsTouch needs preventDefault. See #2000\n\tif (e.MSPOINTER_TYPE_TOUCH && e.pointerType === e.MSPOINTER_TYPE_TOUCH) {\n\t\tDomEvent.preventDefault(e);\n\t}\n\t_handlePointer(handler, e);\n}\n"],"mappings":"AAAA,OAAO,KAAKA,QAAQ,MAAM,YAAY;AACtC,OAAOC,OAAO,MAAM,iBAAiB;AACrC,SAAQC,OAAO,QAAO,cAAc;;AAEpC;AACA;AACA;;AAEA,IAAIC,YAAY,GAAKF,OAAO,CAACG,SAAS,GAAG,eAAe,GAAK,aAAa;AAC1E,IAAIC,YAAY,GAAKJ,OAAO,CAACG,SAAS,GAAG,eAAe,GAAK,aAAa;AAC1E,IAAIE,UAAU,GAAOL,OAAO,CAACG,SAAS,GAAG,aAAa,GAAO,WAAW;AACxE,IAAIG,cAAc,GAAGN,OAAO,CAACG,SAAS,GAAG,iBAAiB,GAAG,eAAe;AAC5E,IAAII,MAAM,GAAG;EACZC,UAAU,EAAIN,YAAY;EAC1BO,SAAS,EAAKL,YAAY;EAC1BM,QAAQ,EAAML,UAAU;EACxBM,WAAW,EAAGL;AACf,CAAC;AACD,IAAIM,MAAM,GAAG;EACZJ,UAAU,EAAIK,eAAe;EAC7BJ,SAAS,EAAKK,cAAc;EAC5BJ,QAAQ,EAAMI,cAAc;EAC5BH,WAAW,EAAGG;AACf,CAAC;AACD,IAAIC,SAAS,GAAG,CAAC,CAAC;AAClB,IAAIC,mBAAmB,GAAG,KAAK;;AAE/B;AACA;;AAEA,OAAO,SAASC,kBAAkBA,CAACC,GAAG,EAAEC,IAAI,EAAEC,OAAO,EAAE;EACtD,IAAID,IAAI,KAAK,YAAY,EAAE;IAC1BE,sBAAsB,CAAC,CAAC;EACzB;EACA,IAAI,CAACT,MAAM,CAACO,IAAI,CAAC,EAAE;IAClBG,OAAO,CAACC,IAAI,CAAC,wBAAwB,EAAEJ,IAAI,CAAC;IAC5C,OAAOlB,OAAO;EACf;EACAmB,OAAO,GAAGR,MAAM,CAACO,IAAI,CAAC,CAACK,IAAI,CAAC,IAAI,EAAEJ,OAAO,CAAC;EAC1CF,GAAG,CAACO,gBAAgB,CAAClB,MAAM,CAACY,IAAI,CAAC,EAAEC,OAAO,EAAE,KAAK,CAAC;EAClD,OAAOA,OAAO;AACf;AAEA,OAAO,SAASM,qBAAqBA,CAACR,GAAG,EAAEC,IAAI,EAAEC,OAAO,EAAE;EACzD,IAAI,CAACb,MAAM,CAACY,IAAI,CAAC,EAAE;IAClBG,OAAO,CAACC,IAAI,CAAC,wBAAwB,EAAEJ,IAAI,CAAC;IAC5C;EACD;EACAD,GAAG,CAACS,mBAAmB,CAACpB,MAAM,CAACY,IAAI,CAAC,EAAEC,OAAO,EAAE,KAAK,CAAC;AACtD;AAEA,SAASQ,kBAAkBA,CAACC,CAAC,EAAE;EAC9Bd,SAAS,CAACc,CAAC,CAACC,SAAS,CAAC,GAAGD,CAAC;AAC3B;AAEA,SAASE,kBAAkBA,CAACF,CAAC,EAAE;EAC9B,IAAId,SAAS,CAACc,CAAC,CAACC,SAAS,CAAC,EAAE;IAC3Bf,SAAS,CAACc,CAAC,CAACC,SAAS,CAAC,GAAGD,CAAC;EAC3B;AACD;AAEA,SAASG,gBAAgBA,CAACH,CAAC,EAAE;EAC5B,OAAOd,SAAS,CAACc,CAAC,CAACC,SAAS,CAAC;AAC9B;AAEA,SAAST,sBAAsBA,CAAA,EAAG;EACjC;EACA,IAAI,CAACL,mBAAmB,EAAE;IACzB;IACAiB,QAAQ,CAACR,gBAAgB,CAACvB,YAAY,EAAE0B,kBAAkB,EAAE,IAAI,CAAC;IACjEK,QAAQ,CAACR,gBAAgB,CAACrB,YAAY,EAAE2B,kBAAkB,EAAE,IAAI,CAAC;IACjEE,QAAQ,CAACR,gBAAgB,CAACpB,UAAU,EAAE2B,gBAAgB,EAAE,IAAI,CAAC;IAC7DC,QAAQ,CAACR,gBAAgB,CAACnB,cAAc,EAAE0B,gBAAgB,EAAE,IAAI,CAAC;IAEjEhB,mBAAmB,GAAG,IAAI;EAC3B;AACD;AAEA,SAASF,cAAcA,CAACM,OAAO,EAAES,CAAC,EAAE;EACnC,IAAIA,CAAC,CAACK,WAAW,MAAML,CAAC,CAACM,oBAAoB,IAAI,OAAO,CAAC,EAAE;IAAE;EAAQ;EAErEN,CAAC,CAACO,OAAO,GAAG,EAAE;EACd,KAAK,IAAIC,CAAC,IAAItB,SAAS,EAAE;IACxBc,CAAC,CAACO,OAAO,CAACE,IAAI,CAACvB,SAAS,CAACsB,CAAC,CAAC,CAAC;EAC7B;EACAR,CAAC,CAACU,cAAc,GAAG,CAACV,CAAC,CAAC;EAEtBT,OAAO,CAACS,CAAC,CAAC;AACX;AAEA,SAAShB,eAAeA,CAACO,OAAO,EAAES,CAAC,EAAE;EACpC;EACA,IAAIA,CAAC,CAACW,oBAAoB,IAAIX,CAAC,CAACK,WAAW,KAAKL,CAAC,CAACW,oBAAoB,EAAE;IACvEzC,QAAQ,CAAC0C,cAAc,CAACZ,CAAC,CAAC;EAC3B;EACAf,cAAc,CAACM,OAAO,EAAES,CAAC,CAAC;AAC3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}