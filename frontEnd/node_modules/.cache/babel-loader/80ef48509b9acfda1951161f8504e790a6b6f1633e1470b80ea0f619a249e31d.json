{"ast":null,"code":"import'./App.css';import Header from\"./components/Header\";import Filters from\"./components/Filters\";import TimeFrameSelector from\"./components/TimeFrameSelector\";import Twitter from\"./components/Twitter\";import{useState}from\"react\";import WordCloud from\"./components/WordCloud\";import GallerySwitch from\"./components/Gallery\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[tweets,setTweets]=useState([]);const Account_Type_Options=[\"Academic\",\"Government\",\"Media\",\"Other\",\"Tourism\"];const County_Options=[\"Pasco\",\"Pinellas\",\"Hillsborough\",\"Manatee\",\"Sarasota\"];const Word_Cloud_Options=[\"Geo Hashtags\",\"Non-Geo Hashtags\",'Single Term Cloud'];const[selectedFilters,setSelectedFilters]=useState({timeFrame:\"2018-06-30 2024-03-03\",accountType:[],county:[],wordCloud:[]});const handleFilterChange=(filterType,selectedOptions)=>{setSelectedFilters(prevState=>({...prevState,[filterType]:selectedOptions}));};const handleTimeFrameChange=(start,end)=>{handleFilterChange('timeFrame',start+\" \"+end);};const handleTweets=newTweets=>{setTweets(newTweets);};const[clickedWord,setClickedWord]=useState(\"\");const handleWordClick=word=>{setClickedWord(word);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"App-header\",children:/*#__PURE__*/_jsx(Header,{})}),/*#__PURE__*/_jsxs(\"div\",{className:\"Filters_Bar\",children:[/*#__PURE__*/_jsx(TimeFrameSelector,{onTimeFrameChange:handleTimeFrameChange}),/*#__PURE__*/_jsx(Filters,{options:Account_Type_Options,Title:\"ACCOUNT TYPE\",information:\"<ul> <li><strong>Default:</strong> All Accounts are selected</li> <li><strong>Functionality:</strong> Click an option to see tweets from accounts under that category.</li> </ul>\",onChange:selectedOptions=>handleFilterChange('accountType',selectedOptions)}),/*#__PURE__*/_jsx(Filters,{options:Word_Cloud_Options,Title:\"WORD CLOUD\",information:\"<ul> <li><strong>Default:</strong> Non Geo Hashtags Selected\\\"</li>  <li><strong>Functionality:</strong> Click an option to see the counts of hashtags under that category.</li> </ul>\",onChange:selectedOptions=>handleFilterChange('wordCloud',selectedOptions),isMultiChoice:false}),/*#__PURE__*/_jsx(Filters,{options:County_Options,Title:\"COUNTY\",information:\"<ul> <li><strong>Default:</strong> All counties selected.</li>  <li><strong>Functionality:</strong> Upon hovering a county, the Map will display how many tweets are about that county.</li> </ul>\",onChange:selectedOptions=>handleFilterChange('county',selectedOptions)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"Body\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"Twitter_container\",children:/*#__PURE__*/_jsx(Twitter,{selectedFilters:selectedFilters,onTweetsFetched:handleTweets,clickedWord:clickedWord})}),/*#__PURE__*/_jsx(\"div\",{className:\"Word_Cloud_container\",children:/*#__PURE__*/_jsx(WordCloud,{cloud_type:selectedFilters.wordCloud,tweets:tweets,onWordCloudClick:handleWordClick})}),/*#__PURE__*/_jsx(\"div\",{className:\"Map_container\",children:/*#__PURE__*/_jsx(GallerySwitch,{account_types:selectedFilters.accountType,date:selectedFilters.timeFrame})})]})]});}export default App;","map":{"version":3,"names":["Header","Filters","TimeFrameSelector","Twitter","useState","WordCloud","GallerySwitch","jsx","_jsx","jsxs","_jsxs","App","tweets","setTweets","Account_Type_Options","County_Options","Word_Cloud_Options","selectedFilters","setSelectedFilters","timeFrame","accountType","county","wordCloud","handleFilterChange","filterType","selectedOptions","prevState","handleTimeFrameChange","start","end","handleTweets","newTweets","clickedWord","setClickedWord","handleWordClick","word","className","children","onTimeFrameChange","options","Title","information","onChange","isMultiChoice","onTweetsFetched","cloud_type","onWordCloudClick","account_types","date"],"sources":["/Users/fneffati/Documents/Classes/TBRTD/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport Header from \"./components/Header\";\nimport Filters from \"./components/Filters\";\nimport TimeFrameSelector from \"./components/TimeFrameSelector\";\nimport Twitter from \"./components/Twitter\";\nimport {useState} from \"react\";\nimport WordCloud from \"./components/WordCloud\";\nimport GallerySwitch from \"./components/Gallery\";\n\nfunction App() {\n\n    const [tweets, setTweets] = useState([]);\n    const Account_Type_Options = [\"Academic\", \"Government\", \"Media\", \"Other\", \"Tourism\"]\n    const County_Options = [\"Pasco\", \"Pinellas\", \"Hillsborough\", \"Manatee\", \"Sarasota\"]\n    const Word_Cloud_Options = [\"Geo Hashtags\", \"Non-Geo Hashtags\", 'Single Term Cloud']\n\n    const [selectedFilters, setSelectedFilters] = useState({\n        timeFrame: \"2018-06-30 2024-03-03\",\n        accountType: [],\n        county: [],\n        wordCloud: [],\n    });\n    const handleFilterChange = (filterType, selectedOptions) => {\n        setSelectedFilters(prevState => ({\n            ...prevState,\n            [filterType]: selectedOptions\n        }));\n    };\n\n    const handleTimeFrameChange = (start, end) => {\n        handleFilterChange('timeFrame', start + \" \" + end)\n    };\n\n    const handleTweets = (newTweets) => {\n        setTweets(newTweets);\n    };\n\n    const [clickedWord, setClickedWord] = useState(\"\")\n    const handleWordClick = (word) => {\n        setClickedWord(word)\n    }\n    \n\n\n    return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Header />\n      </header>\n      <div className=\"Filters_Bar\">\n          <TimeFrameSelector onTimeFrameChange={handleTimeFrameChange} />\n          <Filters options={Account_Type_Options} Title={\"ACCOUNT TYPE\"} information={\"<ul> <li><strong>Default:</strong> All Accounts are selected</li> <li><strong>Functionality:</strong> Click an option to see tweets from accounts under that category.</li> </ul>\"} onChange={(selectedOptions) =>\n              handleFilterChange('accountType', selectedOptions)\n          } />\n          <Filters options={Word_Cloud_Options} Title={\"WORD CLOUD\"} information={\"<ul> <li><strong>Default:</strong> Non Geo Hashtags Selected\\\"</li>  <li><strong>Functionality:</strong> Click an option to see the counts of hashtags under that category.</li> </ul>\"} onChange={(selectedOptions) => handleFilterChange('wordCloud', selectedOptions)} isMultiChoice={false} />\n          <Filters options={County_Options} Title={\"COUNTY\"} information={\"<ul> <li><strong>Default:</strong> All counties selected.</li>  <li><strong>Functionality:</strong> Upon hovering a county, the Map will display how many tweets are about that county.</li> </ul>\"\n          } onChange={(selectedOptions) => handleFilterChange('county', selectedOptions)} />\n\n      </div>\n      <div className=\"Body\">\n\n          <div className=\"Twitter_container\">\n              <Twitter selectedFilters={selectedFilters} onTweetsFetched={handleTweets} clickedWord={clickedWord} />\n          </div>\n          <div className=\"Word_Cloud_container\">\n              <WordCloud cloud_type={selectedFilters.wordCloud} tweets={tweets} onWordCloudClick={handleWordClick}/>\n          </div>\n\n          <div className=\"Map_container\">\n              <GallerySwitch account_types={selectedFilters.accountType} date={selectedFilters.timeFrame}/>\n          </div>\n\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}