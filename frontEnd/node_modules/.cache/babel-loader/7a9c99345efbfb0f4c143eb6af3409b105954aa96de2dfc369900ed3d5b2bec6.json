{"ast":null,"code":"import t from \"lodash.debounce\";\nimport n, { useRef as r, useState as e, useEffect as o } from \"react\";\nimport { select as a, event as i } from \"d3-selection\";\nimport u from \"resize-observer-polyfill\";\nimport \"d3-transition\";\nimport { range as f, min as l, max as s, descending as c } from \"d3-array\";\nimport h from \"d3-cloud\";\nimport d from \"lodash.clonedeep\";\nimport m from \"seedrandom\";\nimport y from \"tippy.js\";\nimport { dispatch as p } from \"d3-dispatch\";\nimport { scaleOrdinal as x, scaleLinear as v, scaleSqrt as g, scaleLog as b } from \"d3-scale\";\nimport { schemeCategory10 as w } from \"d3-scale-chromatic\";\nfunction M() {\n  return (M = Object.assign || function (t) {\n    for (var n = 1; n < arguments.length; n++) {\n      var r = arguments[n];\n      for (var e in r) Object.prototype.hasOwnProperty.call(r, e) && (t[e] = r[e]);\n    }\n    return t;\n  }).apply(this, arguments);\n}\nvar z = Math.PI / 180;\nfunction k(t) {\n  return t.text;\n}\nfunction W() {\n  return \"serif\";\n}\nfunction S() {\n  return \"normal\";\n}\nfunction O(t) {\n  return Math.sqrt(t.value);\n}\nfunction T() {\n  return 30 * (~~(6 * Math.random()) - 3);\n}\nfunction j() {\n  return 1;\n}\nfunction A(t, n, r, e) {\n  if (!n.sprite) {\n    var o = t.context,\n      a = t.ratio;\n    o.clearRect(0, 0, 2048 / a, 2048 / a);\n    var i = 0,\n      u = 0,\n      f = 0,\n      l = r.length;\n    for (--e; ++e < l;) {\n      n = r[e], o.save(), o.font = n.style + \" \" + n.weight + \" \" + ~~((n.size + 1) / a) + \"px \" + n.font;\n      var s = o.measureText(n.text + \"m\").width * a,\n        c = n.size << 1;\n      if (n.rotate) {\n        var h = Math.sin(n.rotate * z),\n          d = Math.cos(n.rotate * z),\n          m = s * d,\n          y = s * h,\n          p = c * d,\n          x = c * h;\n        s = Math.max(Math.abs(m + x), Math.abs(m - x)) + 31 >> 5 << 5, c = ~~Math.max(Math.abs(y + p), Math.abs(y - p));\n      } else s = s + 31 >> 5 << 5;\n      if (c > f && (f = c), i + s >= 2048 && (i = 0, u += f, f = 0), u + c >= 2048) break;\n      o.translate((i + (s >> 1)) / a, (u + (c >> 1)) / a), n.rotate && o.rotate(n.rotate * z), o.fillText(n.text, 0, 0), n.padding && (o.lineWidth = 2 * n.padding, o.strokeText(n.text, 0, 0)), o.restore(), n.width = s, n.height = c, n.xoff = i, n.yoff = u, n.x1 = s >> 1, n.y1 = c >> 1, n.x0 = -n.x1, n.y0 = -n.y1, n.hasText = !0, i += s;\n    }\n    for (var v = o.getImageData(0, 0, 2048 / a, 2048 / a).data, g = []; --e >= 0;) if ((n = r[e]).hasText) {\n      for (var b = (s = n.width) >> 5, w = (c = n.y1 - n.y0, 0); w < c * b; w++) g[w] = 0;\n      if (null == (i = n.xoff)) return;\n      u = n.yoff;\n      for (var M = 0, k = -1, W = 0; W < c; W++) {\n        for (w = 0; w < s; w++) {\n          var S = v[2048 * (u + W) + (i + w) << 2] ? 1 << 31 - w % 32 : 0;\n          g[b * W + (w >> 5)] |= S, M |= S;\n        }\n        M ? k = W : (n.y0++, c--, W--, u++);\n      }\n      n.y1 = n.y0 + k, n.sprite = g.slice(0, (n.y1 - n.y0) * b);\n    }\n  }\n}\nfunction I(t, n, r) {\n  for (var e, o = t.sprite, a = t.width >> 5, i = t.x - (a << 4), u = 127 & i, f = 32 - u, l = t.y1 - t.y0, s = (t.y + t.y0) * (r >>= 5) + (i >> 5), c = 0; c < l; c++) {\n    e = 0;\n    for (var h = 0; h <= a; h++) if ((e << f | (h < a ? (e = o[c * a + h]) >>> u : 0)) & n[s + h]) return !0;\n    s += r;\n  }\n  return !1;\n}\nfunction q(t, n) {\n  var r = t[0],\n    e = t[1];\n  n.x + n.x0 < r.x && (r.x = n.x + n.x0), n.y + n.y0 < r.y && (r.y = n.y + n.y0), n.x + n.x1 > e.x && (e.x = n.x + n.x1), n.y + n.y1 > e.y && (e.y = n.y + n.y1);\n}\nfunction E(t) {\n  var n = t[0] / t[1];\n  return function (t) {\n    return [n * (t *= .1) * Math.cos(t), t * Math.sin(t)];\n  };\n}\nfunction C() {\n  return document.createElement(\"canvas\");\n}\nfunction D(t) {\n  return \"function\" == typeof t ? t : function () {\n    return t;\n  };\n}\nvar F = {\n  archimedean: E,\n  rectangular: function (t) {\n    var n = 4 * t[0] / t[1],\n      r = 0,\n      e = 0;\n    return function (t) {\n      var o = t < 0 ? -1 : 1;\n      switch (Math.sqrt(1 + 4 * o * t) - o & 3) {\n        case 0:\n          r += n;\n          break;\n        case 1:\n          e += 4;\n          break;\n        case 2:\n          r -= n;\n          break;\n        default:\n          e -= 4;\n      }\n      return [r, e];\n    };\n  }\n};\nfunction P(t, n) {\n  return t[Math.floor(n() * t.length)];\n}\nfunction L(t) {\n  return t.size + \"px\";\n}\nfunction N(t) {\n  return t.text;\n}\nfunction R(t) {\n  return \"translate(\" + t.x + \", \" + t.y + \")\" + (\"number\" == typeof t.rotate ? \"rotate(\" + t.rotate + \")\" : \"\");\n}\nfunction U(t) {\n  var n,\n    r = t.callbacks,\n    e = t.maxWords,\n    o = t.options,\n    a = t.selection,\n    u = t.size,\n    f = o.deterministic,\n    x = o.enableOptimizations,\n    w = o.fontFamily,\n    z = o.fontStyle,\n    U = o.fontSizes,\n    H = o.fontWeight,\n    B = o.padding,\n    G = o.randomSeed,\n    J = o.rotations,\n    K = o.rotationAngles,\n    Q = o.spiral,\n    V = o.scale,\n    X = t.words.concat().sort(function (t, n) {\n      return c(t.value, n.value);\n    }).slice(0, e),\n    Y = m(f ? G || \"deterministic\" : null);\n  (n = x ? function () {\n    var t = [256, 256],\n      n = k,\n      r = W,\n      e = O,\n      o = S,\n      a = S,\n      i = T,\n      u = j,\n      f = E,\n      l = [],\n      s = Infinity,\n      c = p(\"word\", \"end\"),\n      h = Math.random,\n      d = {},\n      m = C,\n      y = !1;\n    function x(n, r, e) {\n      for (var o, a, i, u, l, s = r.x, c = r.y, d = Math.sqrt(t[0] * t[0] + t[1] * t[1]), m = f(t), y = h() < .5 ? 1 : -1, p = -y; (o = m(p += y)) && (a = ~~o[0], i = ~~o[1], !(Math.min(Math.abs(a), Math.abs(i)) >= d));) if (r.x = s + a, r.y = c + i, !(r.x + r.x0 < 0 || r.y + r.y0 < 0 || r.x + r.x1 > t[0] || r.y + r.y1 > t[1] || e && I(r, n, t[0]) || e && !((u = r).x + u.x1 > (l = e)[0].x && u.x + u.x0 < l[1].x && u.y + u.y1 > l[0].y && u.y + u.y0 < l[1].y))) {\n        for (var x, v = r.sprite, g = r.width >> 5, b = t[0] >> 5, w = r.x - (g << 4), M = 127 & w, z = 32 - M, k = r.y1 - r.y0, W = (r.y + r.y0) * b + (w >> 5), S = 0; S < k; S++) {\n          x = 0;\n          for (var O = 0; O <= g; O++) n[W + O] |= x << z | (O < g ? (x = v[S * g + O]) >>> M : 0);\n          W += b;\n        }\n        return delete r.sprite, !0;\n      }\n      return !1;\n    }\n    return d.canvas = function (t) {\n      return arguments.length ? (m = D(t), d) : m;\n    }, d.start = function () {\n      var f = function (t) {\n          t.width = t.height = 1;\n          var n = Math.sqrt(t.getContext(\"2d\").getImageData(0, 0, 1, 1).data.length >> 2);\n          t.width = 2048 / n, t.height = 2048 / n;\n          var r = t.getContext(\"2d\");\n          return r.fillStyle = r.strokeStyle = \"red\", r.textAlign = \"center\", {\n            context: r,\n            ratio: n\n          };\n        }(m()),\n        s = new Uint32Array((t[0] >> 5) * t[1]),\n        p = null,\n        v = [],\n        g = l.map(function (t, f) {\n          return t.text = n.call(this, t, f), t.font = r.call(this, t, f), t.style = o.call(this, t, f), t.weight = a.call(this, t, f), t.rotate = i.call(this, t, f), t.size = ~~e.call(this, t, f), t.padding = u.call(this, t, f), t;\n        }).sort(function (t, n) {\n          return n.size - t.size;\n        });\n      return setTimeout(function () {\n        return function n(r) {\n          var e = 50 * r,\n            o = Math.min(50 * (r + 1), l.length);\n          !function (n, r) {\n            for (var e = n; e < r; e += 1) {\n              var o = g[e];\n              o.x = t[0] * (h() + .5) >> 1, o.y = t[1] * (h() + .5) >> 1, A(f, o, g, e), o.hasText && x(s, o, p) && (v.push(o), c.call(\"word\", d, o), p ? q(p, o) : p = [{\n                x: o.x + o.x0,\n                y: o.y + o.y0\n              }, {\n                x: o.x + o.x1,\n                y: o.y + o.y1\n              }], o.x -= t[0] >> 1, o.y -= t[1] >> 1);\n            }\n          }(e, o), y || (o < l.length ? setTimeout(function () {\n            return n(r + 1);\n          }, 0) : (d.stop(), c.call(\"end\", d, v, p)));\n        }(0);\n      }, 0), d;\n    }, d.revive = function () {\n      return y = !1, d;\n    }, d.stop = function () {\n      return y = !0, d;\n    }, d.timeInterval = function (t) {\n      return arguments.length ? (s = null == t ? Infinity : t, d) : s;\n    }, d.words = function (t) {\n      return arguments.length ? (l = t, d) : l;\n    }, d.size = function (n) {\n      return arguments.length ? (t = [+n[0], +n[1]], d) : t;\n    }, d.font = function (t) {\n      return arguments.length ? (r = D(t), d) : r;\n    }, d.fontStyle = function (t) {\n      return arguments.length ? (o = D(t), d) : o;\n    }, d.fontWeight = function (t) {\n      return arguments.length ? (a = D(t), d) : a;\n    }, d.rotate = function (t) {\n      return arguments.length ? (i = D(t), d) : i;\n    }, d.text = function (t) {\n      return arguments.length ? (n = D(t), d) : n;\n    }, d.spiral = function (t) {\n      return arguments.length ? (f = F[t] || t, d) : f;\n    }, d.fontSize = function (t) {\n      return arguments.length ? (e = D(t), d) : e;\n    }, d.padding = function (t) {\n      return arguments.length ? (u = D(t), d) : u;\n    }, d.random = function (t) {\n      return arguments.length ? (h = t, d) : h;\n    }, d.on = function () {\n      var t = c.on.apply(c, arguments);\n      return t === c ? d : t;\n    }, d;\n  }() : h()).size(u).padding(B).words(d(X)).rotate(function () {\n    return void 0 === J ? 30 * (~~(6 * Y()) - 3) : function (t, n, r) {\n      if (t < 1) return 0;\n      var e = [];\n      if (1 === t) e = [n[0]];else {\n        e = [].concat(n);\n        for (var o = (n[1] - n[0]) / (t - 1), a = n[0] + o; a < n[1];) e.push(a), a += o;\n      }\n      return P(e, r);\n    }(J, K, Y);\n  }).spiral(Q).random(Y).text(N).font(w).fontStyle(z).fontWeight(H), function t(e, u) {\n    void 0 === u && (u = 1), x && n.revive(), n.fontSize(function (t) {\n      return function (t, n, r) {\n        var e,\n          o = l(t, function (t) {\n            return Number(t.value);\n          }),\n          a = s(t, function (t) {\n            return Number(t.value);\n          });\n        switch (r) {\n          case \"log\":\n            e = b;\n            break;\n          case \"sqrt\":\n            e = g;\n            break;\n          case \"linear\":\n          default:\n            e = v;\n        }\n        return e().domain([o, a]).range(n);\n      }(X, e, V)(t.value);\n    }).on(\"end\", function (n) {\n      if (X.length !== n.length && u <= 10) {\n        10 === u && console.warn(\"Unable to layout \" + (X.length - n.length) + \" word(s) after \" + u + \" attempts.  Consider: (1) Increasing the container/component size. (2) Lowering the max font size. (3) Limiting the rotation angles.\");\n        var f = Math.max(.95 * e[0], 1);\n        t([f, Math.max(.95 * e[1], f)], u + 1);\n      } else !function (t) {\n        var n,\n          r = t.callbacks,\n          e = t.options,\n          o = t.random,\n          a = t.words,\n          u = r.getWordColor,\n          f = r.getWordTooltip,\n          l = r.onWordClick,\n          s = r.onWordMouseOver,\n          c = r.onWordMouseOut,\n          h = e.colors,\n          d = e.enableTooltip,\n          m = e.fontStyle,\n          p = e.fontWeight,\n          x = e.textAttributes,\n          v = e.tooltipOptions,\n          g = e.fontFamily,\n          b = e.transitionDuration;\n        function w(t) {\n          return u ? u(t) : P(h, o);\n        }\n        t.selection.selectAll(\"text\").data(a).join(function (t) {\n          var r = t.append(\"text\").on(\"click\", function (t) {\n            l && l(t, i);\n          }).on(\"mouseover\", function (t) {\n            d && (n = y(i.target, M({\n              animation: \"scale\",\n              arrow: !0,\n              content: function () {\n                return f(t);\n              }\n            }, v))), s && s(t, i);\n          }).on(\"mouseout\", function (t) {\n            n && n.destroy(), c && c(t, i);\n          }).attr(\"cursor\", l ? \"pointer\" : \"default\").attr(\"fill\", w).attr(\"font-family\", g).attr(\"font-style\", m).attr(\"font-weight\", p).attr(\"text-anchor\", \"middle\").attr(\"transform\", \"translate(0, 0) rotate(0)\");\n          \"object\" == typeof x && Object.keys(x).forEach(function (t) {\n            r = r.attr(t, x[t]);\n          }), r = r.call(function (t) {\n            return t.transition().duration(b).attr(\"font-size\", L).attr(\"transform\", R).text(N);\n          });\n        }, function (t) {\n          t.transition().duration(b).attr(\"fill\", w).attr(\"font-family\", g).attr(\"font-size\", L).attr(\"transform\", R).text(N);\n        }, function (t) {\n          t.transition().duration(b).attr(\"fill-opacity\", 0).remove();\n        });\n      }({\n        callbacks: r,\n        options: o,\n        random: Y,\n        selection: a,\n        words: n\n      });\n    }).start();\n  }(U);\n}\nvar H = {\n    getWordTooltip: function (t) {\n      return t.text + \" (\" + t.value + \")\";\n    }\n  },\n  B = {\n    colors: f(20).map(function (t) {\n      return t.toString();\n    }).map(x(w)),\n    deterministic: !1,\n    enableOptimizations: !1,\n    enableTooltip: !0,\n    fontFamily: \"times new roman\",\n    fontSizes: [4, 32],\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    padding: 1,\n    rotationAngles: [-90, 90],\n    scale: \"sqrt\",\n    spiral: \"rectangular\",\n    tooltipOptions: {},\n    transitionDuration: 600\n  };\nfunction G(i) {\n  var f = i.callbacks,\n    l = i.maxWords,\n    s = void 0 === l ? 100 : l,\n    c = i.minSize,\n    h = i.options,\n    d = i.size,\n    m = i.words,\n    y = function (t, n) {\n      if (null == t) return {};\n      var r,\n        e,\n        o = {},\n        a = Object.keys(t);\n      for (e = 0; e < a.length; e++) n.indexOf(r = a[e]) >= 0 || (o[r] = t[r]);\n      return o;\n    }(i, [\"callbacks\", \"maxWords\", \"minSize\", \"options\", \"size\", \"words\"]),\n    p = M({}, H, f),\n    x = M({}, B, h),\n    v = function (t, n, i) {\n      var f = r(),\n        l = e(n),\n        s = l[0],\n        c = l[1],\n        h = e(null),\n        d = h[0],\n        m = h[1];\n      return o(function () {\n        var r = f.current,\n          e = a(r).append(\"svg\").style(\"display\", \"block\");\n        \"object\" == typeof i && Object.keys(i).forEach(function (t) {\n          e = e.attr(t, i[t]);\n        });\n        var o = e.append(\"g\");\n        function l(t, n) {\n          e.attr(\"height\", n).attr(\"width\", t), o.attr(\"transform\", \"translate(\" + t / 2 + \", \" + n / 2 + \")\"), c([t, n]);\n        }\n        m(o);\n        var s = 0,\n          h = 0;\n        void 0 === n ? (s = r.parentElement.offsetWidth, h = r.parentElement.offsetHeight) : (s = n[0], h = n[1]), l(s = Math.max(s, t[0]), h = Math.max(h, t[1]));\n        var d = new u(function (t) {\n          if (t && 0 !== t.length && void 0 === n) {\n            var r = t[0].contentRect;\n            l(r.width, r.height);\n          }\n        });\n        return d.observe(r), function () {\n          d.unobserve(r), a(r).selectAll(\"*\").remove();\n        };\n      }, [n, t, i]), [f, d, s];\n    }(c, d, h.svgAttributes),\n    g = v[0],\n    b = v[1],\n    w = v[2],\n    z = r(t(U, 100));\n  return o(function () {\n    b && z.current({\n      callbacks: p,\n      maxWords: s,\n      options: x,\n      selection: b,\n      size: w,\n      words: m\n    });\n  }, [s, p, x, b, w, m]), n.createElement(\"div\", M({\n    ref: g,\n    style: {\n      height: \"100%\",\n      width: \"100%\"\n    }\n  }, y));\n}\nG.defaultProps = {\n  callbacks: H,\n  maxWords: 100,\n  minSize: [300, 300],\n  options: B\n};\nexport default G;\nexport { H as defaultCallbacks, B as defaultOptions };","map":{"version":3,"names":["z","Math","PI","k","t","text","W","S","O","sqrt","value","T","random","j","A","n","r","e","sprite","o","context","a","ratio","clearRect","i","u","f","l","length","save","font","style","weight","size","s","measureText","width","c","rotate","h","sin","d","cos","m","y","p","x","max","abs","translate","fillText","padding","lineWidth","strokeText","restore","height","xoff","yoff","x1","y1","x0","y0","hasText","v","getImageData","data","g","b","w","M","slice","I","q","E","C","document","createElement","D","F","archimedean","rectangular","P","floor","L","N","R","U","callbacks","maxWords","options","selection","deterministic","enableOptimizations","fontFamily","fontStyle","fontSizes","H","fontWeight","B","G","randomSeed","J","rotations","K","rotationAngles","Q","spiral","V","scale","X","words","concat","sort","Y","Infinity","min","canvas","arguments","start","getContext","fillStyle","strokeStyle","textAlign","Uint32Array","map","call","setTimeout","push","stop","revive","timeInterval","fontSize","on","apply","Number","domain","range","console","warn","getWordColor","getWordTooltip","onWordClick","onWordMouseOver","onWordMouseOut","colors","enableTooltip","textAttributes","tooltipOptions","transitionDuration","selectAll","join","append","target","animation","arrow","content","destroy","attr","Object","keys","forEach","transition","duration","remove","toString","minSize","indexOf","current","parentElement","offsetWidth","offsetHeight","contentRect","observe","unobserve","svgAttributes","ref","defaultProps","defaultCallbacks","defaultOptions"],"sources":["/Users/fneffati/Documents/Classes/TBENVDASH/frontEnd/tbenv/node_modules/react-wordcloud/src/optimized-d3-cloud.js","/Users/fneffati/Documents/Classes/TBENVDASH/frontEnd/tbenv/node_modules/react-wordcloud/src/utils.js","/Users/fneffati/Documents/Classes/TBENVDASH/frontEnd/tbenv/node_modules/react-wordcloud/src/layout.js","/Users/fneffati/Documents/Classes/TBENVDASH/frontEnd/tbenv/node_modules/react-wordcloud/src/index.js","/Users/fneffati/Documents/Classes/TBENVDASH/frontEnd/tbenv/node_modules/react-wordcloud/src/hooks.js"],"sourcesContent":["// @ts-nocheck\n/**\n * Author: Augustinas (https://github.com/WhoAteDaCake)\n * Source: https://github.com/chrisrzhou/react-wordcloud/blob/166d0b0400a87647fe4e7855a26fe581ce38a502/src/cloud.ts\n * TEMPORARY workaround\n *\n * Implements the wordcloud algorithm based on: https://github.com/jasondavies/d3-cloud/tree/v1.2.5\n * Improvements:\n *  Use a setTimeout + batch sizes to calculate clouds in order to avoid blocking main thread for two long (87-101)\n *\n */\n\n// Word cloud layout by Jason Davies, https://www.jasondavies.com/wordcloud/\n// Algorithm due to Jonathan Feinberg, http://static.mrfeinberg.com/bv_ch03.pdf\n\nimport { dispatch } from 'd3-dispatch';\n\nconst cloudRadians = Math.PI / 180,\n  cw = (1 << 11) >> 5,\n  ch = 1 << 11;\n\nexport default function Cloud() {\n  let size = [256, 256],\n    text = cloudText,\n    font = cloudFont,\n    fontSize = cloudFontSize,\n    fontStyle = cloudFontNormal,\n    fontWeight = cloudFontNormal,\n    rotate = cloudRotate,\n    padding = cloudPadding,\n    spiral = archimedeanSpiral,\n    words = [],\n    timeInterval = Infinity,\n    event = dispatch('word', 'end'),\n    timer = null,\n    random = Math.random,\n    cloud = {},\n    canvas = cloudCanvas;\n\n  let killed = false;\n\n  cloud.canvas = function(_) {\n    return arguments.length ? ((canvas = functor(_)), cloud) : canvas;\n  };\n\n  cloud.start = function() {\n    let contextAndRatio = getContext(canvas()),\n      board = zeroArray((size[0] >> 5) * size[1]),\n      bounds = null,\n      n = words.length,\n      i = -1,\n      tags = [],\n      data = words\n        .map(function(d, i) {\n          d.text = text.call(this, d, i);\n          d.font = font.call(this, d, i);\n          d.style = fontStyle.call(this, d, i);\n          d.weight = fontWeight.call(this, d, i);\n          d.rotate = rotate.call(this, d, i);\n          d.size = ~~fontSize.call(this, d, i);\n          d.padding = padding.call(this, d, i);\n          return d;\n        })\n        .sort(function(a, b) {\n          return b.size - a.size;\n        });\n\n    // Added by react-wordcloud\n    // Allows to calculate a subset of data instead of all of the words at once\n    function multiStep(from, to) {\n      for (let i = from; i < to; i += 1) {\n        const d = data[i];\n        d.x = (size[0] * (random() + 0.5)) >> 1;\n        d.y = (size[1] * (random() + 0.5)) >> 1;\n        cloudSprite(contextAndRatio, d, data, i);\n        if (d.hasText && place(board, d, bounds)) {\n          tags.push(d);\n          event.call('word', cloud, d);\n          if (bounds) cloudBounds(bounds, d);\n          else\n            bounds = [\n              { x: d.x + d.x0, y: d.y + d.y0 },\n              { x: d.x + d.x1, y: d.y + d.y1 },\n            ];\n          // Temporary hack\n          d.x -= size[0] >> 1;\n          d.y -= size[1] >> 1;\n        }\n      }\n    }\n\n    // Added by react-wordcloud\n    // Iterates dataset using setTimeout in order to prevent blocking of the main thread\n    function loop(i) {\n      const step = 50;\n      const from = i * step;\n      const to = Math.min((i + 1) * step, words.length);\n      multiStep(from, to);\n      if (killed) {\n        return;\n      }\n      if (to < words.length) {\n        setTimeout(() => loop(i + 1), 0);\n      } else {\n        cloud.stop();\n        event.call('end', cloud, tags, bounds);\n      }\n    }\n    setTimeout(() => loop(0), 0);\n\n    return cloud;\n  };\n\n  cloud.revive = () => {\n    killed = false;\n    return cloud;\n  };\n\n  cloud.stop = function() {\n    if (timer) {\n      clearInterval(timer);\n      timer = null;\n    }\n    killed = true;\n    return cloud;\n  };\n\n  function getContext(canvas) {\n    canvas.width = canvas.height = 1;\n    const ratio = Math.sqrt(\n      canvas.getContext('2d').getImageData(0, 0, 1, 1).data.length >> 2,\n    );\n    canvas.width = (cw << 5) / ratio;\n    canvas.height = ch / ratio;\n\n    const context = canvas.getContext('2d');\n    context.fillStyle = context.strokeStyle = 'red';\n    context.textAlign = 'center';\n\n    return { context: context, ratio: ratio };\n  }\n\n  function place(board, tag, bounds) {\n    let perimeter = [{ x: 0, y: 0 }, { x: size[0], y: size[1] }],\n      startX = tag.x,\n      startY = tag.y,\n      maxDelta = Math.sqrt(size[0] * size[0] + size[1] * size[1]),\n      s = spiral(size),\n      dt = random() < 0.5 ? 1 : -1,\n      t = -dt,\n      dxdy,\n      dx,\n      dy;\n\n    while ((dxdy = s((t += dt)))) {\n      dx = ~~dxdy[0];\n      dy = ~~dxdy[1];\n\n      if (Math.min(Math.abs(dx), Math.abs(dy)) >= maxDelta) break;\n\n      tag.x = startX + dx;\n      tag.y = startY + dy;\n\n      if (\n        tag.x + tag.x0 < 0 ||\n        tag.y + tag.y0 < 0 ||\n        tag.x + tag.x1 > size[0] ||\n        tag.y + tag.y1 > size[1]\n      )\n        continue;\n      // TODO only check for collisions within current bounds.\n      if (!bounds || !cloudCollide(tag, board, size[0])) {\n        if (!bounds || collideRects(tag, bounds)) {\n          var sprite = tag.sprite,\n            w = tag.width >> 5,\n            sw = size[0] >> 5,\n            lx = tag.x - (w << 4),\n            sx = lx & 0x7f,\n            msx = 32 - sx,\n            h = tag.y1 - tag.y0,\n            x = (tag.y + tag.y0) * sw + (lx >> 5),\n            last;\n          for (let j = 0; j < h; j++) {\n            last = 0;\n            for (let i = 0; i <= w; i++) {\n              board[x + i] |=\n                (last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0);\n            }\n            x += sw;\n          }\n          delete tag.sprite;\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  cloud.timeInterval = function(_) {\n    return arguments.length\n      ? ((timeInterval = _ == null ? Infinity : _), cloud)\n      : timeInterval;\n  };\n\n  cloud.words = function(_) {\n    return arguments.length ? ((words = _), cloud) : words;\n  };\n\n  cloud.size = function(_) {\n    return arguments.length ? ((size = [+_[0], +_[1]]), cloud) : size;\n  };\n\n  cloud.font = function(_) {\n    return arguments.length ? ((font = functor(_)), cloud) : font;\n  };\n\n  cloud.fontStyle = function(_) {\n    return arguments.length ? ((fontStyle = functor(_)), cloud) : fontStyle;\n  };\n\n  cloud.fontWeight = function(_) {\n    return arguments.length ? ((fontWeight = functor(_)), cloud) : fontWeight;\n  };\n\n  cloud.rotate = function(_) {\n    return arguments.length ? ((rotate = functor(_)), cloud) : rotate;\n  };\n\n  cloud.text = function(_) {\n    return arguments.length ? ((text = functor(_)), cloud) : text;\n  };\n\n  cloud.spiral = function(_) {\n    return arguments.length ? ((spiral = spirals[_] || _), cloud) : spiral;\n  };\n\n  cloud.fontSize = function(_) {\n    return arguments.length ? ((fontSize = functor(_)), cloud) : fontSize;\n  };\n\n  cloud.padding = function(_) {\n    return arguments.length ? ((padding = functor(_)), cloud) : padding;\n  };\n\n  cloud.random = function(_) {\n    return arguments.length ? ((random = _), cloud) : random;\n  };\n\n  cloud.on = function() {\n    const value = event.on.apply(event, arguments);\n    return value === event ? cloud : value;\n  };\n\n  return cloud;\n}\n\nfunction cloudText(d) {\n  return d.text;\n}\n\nfunction cloudFont() {\n  return 'serif';\n}\n\nfunction cloudFontNormal() {\n  return 'normal';\n}\n\nfunction cloudFontSize(d) {\n  return Math.sqrt(d.value);\n}\n\nfunction cloudRotate() {\n  return (~~(Math.random() * 6) - 3) * 30;\n}\n\nfunction cloudPadding() {\n  return 1;\n}\n\n// Fetches a monochrome sprite bitmap for the specified text.\n// Load in batches for speed.\nfunction cloudSprite(contextAndRatio, d, data, di) {\n  if (d.sprite) return;\n  const c = contextAndRatio.context,\n    ratio = contextAndRatio.ratio;\n\n  c.clearRect(0, 0, (cw << 5) / ratio, ch / ratio);\n  let x = 0,\n    y = 0,\n    maxh = 0,\n    n = data.length;\n  --di;\n  while (++di < n) {\n    d = data[di];\n    c.save();\n    c.font =\n      d.style +\n      ' ' +\n      d.weight +\n      ' ' +\n      ~~((d.size + 1) / ratio) +\n      'px ' +\n      d.font;\n    var w = c.measureText(d.text + 'm').width * ratio,\n      h = d.size << 1;\n    if (d.rotate) {\n      const sr = Math.sin(d.rotate * cloudRadians),\n        cr = Math.cos(d.rotate * cloudRadians),\n        wcr = w * cr,\n        wsr = w * sr,\n        hcr = h * cr,\n        hsr = h * sr;\n      w =\n        ((Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 0x1f) >> 5) << 5;\n      h = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));\n    } else {\n      w = ((w + 0x1f) >> 5) << 5;\n    }\n    if (h > maxh) maxh = h;\n    if (x + w >= cw << 5) {\n      x = 0;\n      y += maxh;\n      maxh = 0;\n    }\n    if (y + h >= ch) break;\n    c.translate((x + (w >> 1)) / ratio, (y + (h >> 1)) / ratio);\n    if (d.rotate) c.rotate(d.rotate * cloudRadians);\n    c.fillText(d.text, 0, 0);\n\n    if (d.padding) {\n      c.lineWidth = 2 * d.padding;\n      c.strokeText(d.text, 0, 0);\n    }\n    c.restore();\n    d.width = w;\n    d.height = h;\n    d.xoff = x;\n    d.yoff = y;\n    d.x1 = w >> 1;\n    d.y1 = h >> 1;\n    d.x0 = -d.x1;\n    d.y0 = -d.y1;\n    d.hasText = true;\n    x += w;\n  }\n  const pixels = c.getImageData(0, 0, (cw << 5) / ratio, ch / ratio).data,\n    sprite = [];\n  while (--di >= 0) {\n    d = data[di];\n    if (!d.hasText) continue;\n    var w = d.width,\n      w32 = w >> 5,\n      h = d.y1 - d.y0;\n    // Zero the buffer\n    for (var i = 0; i < h * w32; i++) sprite[i] = 0;\n    x = d.xoff;\n    if (x == null) return;\n    y = d.yoff;\n    let seen = 0,\n      seenRow = -1;\n    for (let j = 0; j < h; j++) {\n      for (var i = 0; i < w; i++) {\n        const k = w32 * j + (i >> 5),\n          m = pixels[((y + j) * (cw << 5) + (x + i)) << 2]\n            ? 1 << (31 - (i % 32))\n            : 0;\n        sprite[k] |= m;\n        seen |= m;\n      }\n      if (seen) seenRow = j;\n      else {\n        d.y0++;\n        h--;\n        j--;\n        y++;\n      }\n    }\n    d.y1 = d.y0 + seenRow;\n    d.sprite = sprite.slice(0, (d.y1 - d.y0) * w32);\n  }\n}\n\n// Use mask-based collision detection.\nfunction cloudCollide(tag, board, sw) {\n  sw >>= 5;\n  let sprite = tag.sprite,\n    w = tag.width >> 5,\n    lx = tag.x - (w << 4),\n    sx = lx & 0x7f,\n    msx = 32 - sx,\n    h = tag.y1 - tag.y0,\n    x = (tag.y + tag.y0) * sw + (lx >> 5),\n    last;\n  for (let j = 0; j < h; j++) {\n    last = 0;\n    for (let i = 0; i <= w; i++) {\n      if (\n        ((last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0)) &\n        board[x + i]\n      )\n        return true;\n    }\n    x += sw;\n  }\n  return false;\n}\n\nfunction cloudBounds(bounds, d) {\n  const b0 = bounds[0],\n    b1 = bounds[1];\n  if (d.x + d.x0 < b0.x) b0.x = d.x + d.x0;\n  if (d.y + d.y0 < b0.y) b0.y = d.y + d.y0;\n  if (d.x + d.x1 > b1.x) b1.x = d.x + d.x1;\n  if (d.y + d.y1 > b1.y) b1.y = d.y + d.y1;\n}\n\nfunction collideRects(a, b) {\n  return (\n    a.x + a.x1 > b[0].x &&\n    a.x + a.x0 < b[1].x &&\n    a.y + a.y1 > b[0].y &&\n    a.y + a.y0 < b[1].y\n  );\n}\n\nfunction archimedeanSpiral(size) {\n  const e = size[0] / size[1];\n  return function(t) {\n    return [e * (t *= 0.1) * Math.cos(t), t * Math.sin(t)];\n  };\n}\n\nfunction rectangularSpiral(size) {\n  let dy = 4,\n    dx = (dy * size[0]) / size[1],\n    x = 0,\n    y = 0;\n  return function(t) {\n    const sign = t < 0 ? -1 : 1;\n    // See triangular numbers: T_n = n * (n + 1) / 2.\n    switch ((Math.sqrt(1 + 4 * sign * t) - sign) & 3) {\n      case 0:\n        x += dx;\n        break;\n      case 1:\n        y += dy;\n        break;\n      case 2:\n        x -= dx;\n        break;\n      default:\n        y -= dy;\n        break;\n    }\n    return [x, y];\n  };\n}\n\nfunction zeroArray(n) {\n  const a = new Uint32Array(n);\n  return a;\n}\n\nfunction cloudCanvas() {\n  return document.createElement('canvas');\n}\n\nfunction functor(d) {\n  return typeof d === 'function'\n    ? d\n    : function() {\n        return d;\n      };\n}\n\nvar spirals = {\n  archimedean: archimedeanSpiral,\n  rectangular: rectangularSpiral,\n};\n","import { max, min, range } from 'd3-array';\nimport { scaleLinear, scaleLog, scaleOrdinal, scaleSqrt } from 'd3-scale';\nimport { schemeCategory10 } from 'd3-scale-chromatic';\n\nexport function choose(array, random) {\n  return array[Math.floor(random() * array.length)];\n}\n\nexport function getDefaultColors() {\n  return range(20)\n    .map(number => number.toString())\n    .map(scaleOrdinal(schemeCategory10));\n}\n\nexport function getFontScale(words, fontSizes, scale) {\n  const minSize = min(words, word => Number(word.value));\n  const maxSize = max(words, word => Number(word.value));\n  let scaleFunction;\n  switch (scale) {\n    case 'log':\n      scaleFunction = scaleLog;\n      break;\n    case 'sqrt':\n      scaleFunction = scaleSqrt;\n      break;\n    case 'linear':\n    default:\n      scaleFunction = scaleLinear;\n      break;\n  }\n\n  const fontScale = scaleFunction()\n    .domain([minSize, maxSize])\n    .range(fontSizes);\n  return fontScale;\n}\n\nexport function getFontSize(word) {\n  return `${word.size}px`;\n}\n\nexport function getText(word) {\n  return word.text;\n}\n\nexport function getTransform(word) {\n  const translate = `translate(${word.x}, ${word.y})`;\n  const rotate =\n    typeof word.rotate === 'number' ? `rotate(${word.rotate})` : '';\n  return translate + rotate;\n}\n\nexport function rotate(rotations, rotationAngles, random) {\n  if (rotations < 1) {\n    return 0;\n  }\n\n  let angles = [];\n  if (rotations === 1) {\n    angles = [rotationAngles[0]];\n  } else {\n    angles = [...rotationAngles];\n    const increment = (rotationAngles[1] - rotationAngles[0]) / (rotations - 1);\n    let angle = rotationAngles[0] + increment;\n    while (angle < rotationAngles[1]) {\n      angles.push(angle);\n      angle += increment;\n    }\n  }\n\n  return choose(angles, random);\n}\n","import 'd3-transition';\n\nimport { descending } from 'd3-array';\nimport d3Cloud from 'd3-cloud';\nimport { event } from 'd3-selection';\nimport clonedeep from 'lodash.clonedeep';\nimport seedrandom from 'seedrandom';\nimport tippy from 'tippy.js';\n\nimport optimizedD3Cloud from './optimized-d3-cloud';\nimport {\n  choose,\n  getFontScale,\n  getFontSize,\n  getText,\n  getTransform,\n  rotate,\n} from './utils';\n\nexport function render({ callbacks, options, random, selection, words }) {\n  const {\n    getWordColor,\n    getWordTooltip,\n    onWordClick,\n    onWordMouseOver,\n    onWordMouseOut,\n  } = callbacks;\n  const {\n    colors,\n    enableTooltip,\n    fontStyle,\n    fontWeight,\n    textAttributes,\n    tooltipOptions,\n  } = options;\n  const { fontFamily, transitionDuration } = options;\n\n  function getFill(word) {\n    return getWordColor ? getWordColor(word) : choose(colors, random);\n  }\n\n  // Load words\n  let tooltipInstance;\n  const vizWords = selection.selectAll('text').data(words);\n  vizWords.join(\n    enter => {\n      let text = enter\n        .append('text')\n        .on('click', word => {\n          if (onWordClick) {\n            onWordClick(word, event);\n          }\n        })\n        .on('mouseover', word => {\n          if (enableTooltip) {\n            tooltipInstance = tippy(event.target, {\n              animation: 'scale',\n              arrow: true,\n              content: () => getWordTooltip(word),\n              ...tooltipOptions,\n            });\n          }\n\n          if (onWordMouseOver) {\n            onWordMouseOver(word, event);\n          }\n        })\n        .on('mouseout', word => {\n          if (tooltipInstance) {\n            tooltipInstance.destroy();\n          }\n\n          if (onWordMouseOut) {\n            onWordMouseOut(word, event);\n          }\n        })\n        .attr('cursor', onWordClick ? 'pointer' : 'default')\n        .attr('fill', getFill)\n        .attr('font-family', fontFamily)\n        .attr('font-style', fontStyle)\n        .attr('font-weight', fontWeight)\n        .attr('text-anchor', 'middle')\n        .attr('transform', 'translate(0, 0) rotate(0)');\n\n      if (typeof textAttributes === 'object') {\n        Object.keys(textAttributes).forEach(key => {\n          text = text.attr(key, textAttributes[key]);\n        });\n      }\n\n      text = text.call(enter =>\n        enter\n          .transition()\n          .duration(transitionDuration)\n          .attr('font-size', getFontSize)\n          .attr('transform', getTransform)\n          .text(getText),\n      );\n    },\n    update => {\n      update\n        .transition()\n        .duration(transitionDuration)\n        .attr('fill', getFill)\n        .attr('font-family', fontFamily)\n        .attr('font-size', getFontSize)\n        .attr('transform', getTransform)\n        .text(getText);\n    },\n    exit => {\n      exit\n        .transition()\n        .duration(transitionDuration)\n        .attr('fill-opacity', 0)\n        .remove();\n    },\n  );\n}\n\nexport function layout({\n  callbacks,\n  maxWords,\n  options,\n  selection,\n  size,\n  words,\n}) {\n  const MAX_LAYOUT_ATTEMPTS = 10;\n  const SHRINK_FACTOR = 0.95;\n  const {\n    deterministic,\n    enableOptimizations,\n    fontFamily,\n    fontStyle,\n    fontSizes,\n    fontWeight,\n    padding,\n    randomSeed,\n    rotations,\n    rotationAngles,\n    spiral,\n    scale,\n  } = options;\n\n  const sortedWords = words\n    .concat()\n    .sort((x, y) => descending(x.value, y.value))\n    .slice(0, maxWords);\n\n  const random = seedrandom(\n    deterministic ? randomSeed || 'deterministic' : null,\n  );\n\n  let cloud;\n  if (enableOptimizations) {\n    cloud = optimizedD3Cloud();\n  } else {\n    cloud = d3Cloud();\n  }\n\n  cloud\n    .size(size)\n    // @ts-ignore\n    .padding(padding)\n    .words(clonedeep(sortedWords))\n    .rotate(() => {\n      if (rotations === undefined) {\n        // Default rotation algorithm\n        return (~~(random() * 6) - 3) * 30;\n      }\n\n      return rotate(rotations, rotationAngles, random);\n    })\n    .spiral(spiral)\n    .random(random)\n    .text(getText)\n    .font(fontFamily)\n    .fontStyle(fontStyle)\n    .fontWeight(fontWeight);\n\n  function draw(fontSizes, attempts = 1) {\n    if (enableOptimizations) {\n      cloud.revive();\n    }\n\n    cloud\n      .fontSize(word => {\n        const fontScale = getFontScale(sortedWords, fontSizes, scale);\n        return fontScale(word.value);\n      })\n      .on('end', computedWords => {\n        /** KNOWN ISSUE: https://github.com/jasondavies/d3-cloud/issues/36\n         * Recursively layout and decrease font-sizes by a SHRINK_FACTOR.\n         * Bail out with a warning message after MAX_LAYOUT_ATTEMPTS.\n         */\n        if (\n          sortedWords.length !== computedWords.length &&\n          attempts <= MAX_LAYOUT_ATTEMPTS\n        ) {\n          if (attempts === MAX_LAYOUT_ATTEMPTS) {\n            console.warn(\n              `Unable to layout ${sortedWords.length -\n                computedWords.length} word(s) after ${attempts} attempts.  Consider: (1) Increasing the container/component size. (2) Lowering the max font size. (3) Limiting the rotation angles.`,\n            );\n          }\n\n          const minFontSize = Math.max(fontSizes[0] * SHRINK_FACTOR, 1);\n          const maxFontSize = Math.max(\n            fontSizes[1] * SHRINK_FACTOR,\n            minFontSize,\n          );\n\n          draw([minFontSize, maxFontSize], attempts + 1);\n        } else {\n          render({\n            callbacks,\n            options,\n            random,\n            selection,\n            words: computedWords,\n          });\n        }\n      })\n      .start();\n  }\n\n  draw(fontSizes);\n}\n","import debounce from 'lodash.debounce';\nimport React, { useEffect, useRef } from 'react';\n\nimport { useResponsiveSvgSelection } from './hooks';\nimport { layout } from './layout';\nimport { getDefaultColors } from './utils';\n\nexport const defaultCallbacks = {\n  getWordTooltip: ({ text, value }) => `${text} (${value})`,\n};\n\nexport const defaultOptions = {\n  colors: getDefaultColors(),\n  deterministic: false,\n  enableOptimizations: false,\n  enableTooltip: true,\n  fontFamily: 'times new roman',\n  fontSizes: [4, 32],\n  fontStyle: 'normal',\n  fontWeight: 'normal',\n  padding: 1,\n  rotationAngles: [-90, 90],\n  scale: 'sqrt',\n  spiral: 'rectangular',\n  tooltipOptions: {},\n  transitionDuration: 600,\n};\n\nfunction ReactWordCloud({\n  callbacks,\n  maxWords = 100,\n  minSize,\n  options,\n  size: initialSize,\n  words,\n  ...rest\n}) {\n  const mergedCallbacks = { ...defaultCallbacks, ...callbacks };\n  const mergedOptions = { ...defaultOptions, ...options };\n\n  const [ref, selection, size] = useResponsiveSvgSelection(\n    minSize,\n    initialSize,\n    options.svgAttributes,\n  );\n\n  const render = useRef(debounce(layout, 100));\n\n  useEffect(() => {\n    if (selection) {\n      render.current({\n        callbacks: mergedCallbacks,\n        maxWords,\n        options: mergedOptions,\n        selection,\n        size,\n        words,\n      });\n    }\n  }, [maxWords, mergedCallbacks, mergedOptions, selection, size, words]);\n\n  return <div ref={ref} style={{ height: '100%', width: '100%' }} {...rest} />;\n}\n\nReactWordCloud.defaultProps = {\n  callbacks: defaultCallbacks,\n  maxWords: 100,\n  minSize: [300, 300],\n  options: defaultOptions,\n};\n\nexport default ReactWordCloud;\n","import { select } from 'd3-selection';\nimport { useEffect, useRef, useState } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nexport function useResponsiveSvgSelection(minSize, initialSize, svgAttributes) {\n  const elementRef = useRef();\n  const [size, setSize] = useState(initialSize);\n  const [selection, setSelection] = useState(null);\n\n  useEffect(() => {\n    const element = elementRef.current;\n\n    // Set svg selection\n    let svg = select(element)\n      .append('svg')\n      .style('display', 'block'); // Native inline svg leaves undesired white space\n\n    if (typeof svgAttributes === 'object') {\n      Object.keys(svgAttributes).forEach(key => {\n        svg = svg.attr(key, svgAttributes[key]);\n      });\n    }\n\n    const selection = svg.append('g');\n    setSelection(selection);\n\n    function updateSize(width, height) {\n      svg.attr('height', height).attr('width', width);\n      selection.attr('transform', `translate(${width / 2}, ${height / 2})`);\n      setSize([width, height]);\n    }\n\n    let width = 0;\n    let height = 0;\n    if (initialSize === undefined) {\n      // Use parentNode size if resized has not occurred\n      width = element.parentElement.offsetWidth;\n      height = element.parentElement.offsetHeight;\n    } else {\n      // Use initialSize if it is provided\n      [width, height] = initialSize;\n    }\n\n    width = Math.max(width, minSize[0]);\n    height = Math.max(height, minSize[1]);\n    updateSize(width, height);\n\n    // Update resize using a resize observer\n    const resizeObserver = new ResizeObserver(entries => {\n      if (!entries || entries.length === 0) {\n        return;\n      }\n\n      if (initialSize === undefined) {\n        const { width, height } = entries[0].contentRect;\n        updateSize(width, height);\n      }\n    });\n    resizeObserver.observe(element);\n\n    // Cleanup\n    return () => {\n      resizeObserver.unobserve(element);\n      select(element)\n        .selectAll('*')\n        .remove();\n    };\n  }, [initialSize, minSize, svgAttributes]);\n\n  return [elementRef, selection, size];\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}