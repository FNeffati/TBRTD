{"ast":null,"code":"/**\n * @license\n * Copyright 2013 David Eberlein (david.eberlein@ch.sauter-bc.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n\n/**\n * @fileoverview DataHandler implementation for the custom bars option.\n * @author David Eberlein (david.eberlein@ch.sauter-bc.com)\n */\n\n/*global Dygraph:false */\n\"use strict\";\n\nimport BarsHandler from './bars';\n\n/**\n * @constructor\n * @extends Dygraph.DataHandlers.BarsHandler\n */\nvar CustomBarsHandler = function () {};\nCustomBarsHandler.prototype = new BarsHandler();\n\n/** @inheritDoc */\nCustomBarsHandler.prototype.extractSeries = function (rawData, i, options) {\n  // TODO(danvk): pre-allocate series here.\n  var series = [];\n  var x, y, point;\n  const seriesLabel = options.get(\"labels\")[i];\n  const logScale = options.getForSeries(\"logscale\", seriesLabel);\n  for (var j = 0; j < rawData.length; j++) {\n    x = rawData[j][0];\n    point = rawData[j][i];\n    if (logScale && point !== null) {\n      // On the log scale, points less than zero do not exist.\n      // This will create a gap in the chart.\n      if (point[0] <= 0 || point[1] <= 0 || point[2] <= 0) {\n        point = null;\n      }\n    }\n    // Extract to the unified data format.\n    if (point !== null) {\n      y = point[1];\n      if (y !== null && !isNaN(y)) {\n        series.push([x, y, [point[0], point[2]]]);\n      } else {\n        series.push([x, y, [y, y]]);\n      }\n    } else {\n      series.push([x, null, [null, null]]);\n    }\n  }\n  return series;\n};\n\n/** @inheritDoc */\nCustomBarsHandler.prototype.rollingAverage = function (originalData, rollPeriod, options, i) {\n  rollPeriod = Math.min(rollPeriod, originalData.length);\n  var rollingData = [];\n  var y, low, high, mid, count, i, extremes;\n  low = 0;\n  mid = 0;\n  high = 0;\n  count = 0;\n  for (i = 0; i < originalData.length; i++) {\n    y = originalData[i][1];\n    extremes = originalData[i][2];\n    rollingData[i] = originalData[i];\n    if (y !== null && !isNaN(y)) {\n      low += extremes[0];\n      mid += y;\n      high += extremes[1];\n      count += 1;\n    }\n    if (i - rollPeriod >= 0) {\n      var prev = originalData[i - rollPeriod];\n      if (prev[1] !== null && !isNaN(prev[1])) {\n        low -= prev[2][0];\n        mid -= prev[1];\n        high -= prev[2][1];\n        count -= 1;\n      }\n    }\n    if (count) {\n      rollingData[i] = [originalData[i][0], 1.0 * mid / count, [1.0 * low / count, 1.0 * high / count]];\n    } else {\n      rollingData[i] = [originalData[i][0], null, [null, null]];\n    }\n  }\n  return rollingData;\n};\nexport default CustomBarsHandler;","map":{"version":3,"names":["BarsHandler","CustomBarsHandler","prototype","extractSeries","rawData","i","options","series","x","y","point","seriesLabel","get","logScale","getForSeries","j","length","isNaN","push","rollingAverage","originalData","rollPeriod","Math","min","rollingData","low","high","mid","count","extremes","prev"],"sources":["/Users/fneffati/Documents/Classes/TBRTD/frontend/node_modules/dygraphs/src/datahandler/bars-custom.js"],"sourcesContent":["/**\n * @license\n * Copyright 2013 David Eberlein (david.eberlein@ch.sauter-bc.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n\n/**\n * @fileoverview DataHandler implementation for the custom bars option.\n * @author David Eberlein (david.eberlein@ch.sauter-bc.com)\n */\n\n/*global Dygraph:false */\n\"use strict\";\n\nimport BarsHandler from './bars';\n\n/**\n * @constructor\n * @extends Dygraph.DataHandlers.BarsHandler\n */\nvar CustomBarsHandler = function() {\n};\n\nCustomBarsHandler.prototype = new BarsHandler();\n\n/** @inheritDoc */\nCustomBarsHandler.prototype.extractSeries = function(rawData, i, options) {\n  // TODO(danvk): pre-allocate series here.\n  var series = [];\n  var x, y, point;\n  const seriesLabel = options.get(\"labels\")[i];\n  const logScale = options.getForSeries(\"logscale\", seriesLabel);\n  for ( var j = 0; j < rawData.length; j++) {\n    x = rawData[j][0];\n    point = rawData[j][i];\n    if (logScale && point !== null) {\n      // On the log scale, points less than zero do not exist.\n      // This will create a gap in the chart.\n      if (point[0] <= 0 || point[1] <= 0 || point[2] <= 0) {\n        point = null;\n      }\n    }\n    // Extract to the unified data format.\n    if (point !== null) {\n      y = point[1];\n      if (y !== null && !isNaN(y)) {\n        series.push([ x, y, [ point[0], point[2] ] ]);\n      } else {\n        series.push([ x, y, [ y, y ] ]);\n      }\n    } else {\n      series.push([ x, null, [ null, null ] ]);\n    }\n  }\n  return series;\n};\n\n/** @inheritDoc */\nCustomBarsHandler.prototype.rollingAverage =\n    function(originalData, rollPeriod, options, i) {\n  rollPeriod = Math.min(rollPeriod, originalData.length);\n  var rollingData = [];\n  var y, low, high, mid,count, i, extremes;\n\n  low = 0;\n  mid = 0;\n  high = 0;\n  count = 0;\n  for (i = 0; i < originalData.length; i++) {\n    y = originalData[i][1];\n    extremes = originalData[i][2];\n    rollingData[i] = originalData[i];\n\n    if (y !== null && !isNaN(y)) {\n      low += extremes[0];\n      mid += y;\n      high += extremes[1];\n      count += 1;\n    }\n    if (i - rollPeriod >= 0) {\n      var prev = originalData[i - rollPeriod];\n      if (prev[1] !== null && !isNaN(prev[1])) {\n        low -= prev[2][0];\n        mid -= prev[1];\n        high -= prev[2][1];\n        count -= 1;\n      }\n    }\n    if (count) {\n      rollingData[i] = [\n          originalData[i][0],\n          1.0 * mid / count,\n          [ 1.0 * low / count,\n            1.0 * high / count ] ];\n    } else {\n      rollingData[i] = [ originalData[i][0], null, [ null, null ] ];\n    }\n  }\n\n  return rollingData;\n};\n\nexport default CustomBarsHandler;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}