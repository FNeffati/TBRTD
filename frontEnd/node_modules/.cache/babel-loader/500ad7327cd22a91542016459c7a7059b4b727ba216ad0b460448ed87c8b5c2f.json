{"ast":null,"code":"/**\n * To create a \"drag\" interaction, you typically register a mousedown event\n * handler on the element where the drag begins. In that handler, you register a\n * mouseup handler on the window to determine when the mouse is released,\n * wherever that release happens. This works well, except when the user releases\n * the mouse over an off-domain iframe. In that case, the mouseup event is\n * handled by the iframe and never bubbles up to the window handler.\n *\n * To deal with this issue, we cover iframes with high z-index divs to make sure\n * they don't capture mouseup.\n *\n * Usage:\n * element.addEventListener('mousedown', function() {\n *   var tarper = new IFrameTarp();\n *   tarper.cover();\n *   var mouseUpHandler = function() {\n *     ...\n *     window.removeEventListener(mouseUpHandler);\n *     tarper.uncover();\n *   };\n *   window.addEventListener('mouseup', mouseUpHandler);\n * });\n *\n * @constructor\n */\nimport * as utils from './dygraph-utils';\nfunction IFrameTarp() {\n  /** @type {Array.<!HTMLDivElement>} */\n  this.tarps = [];\n}\n\n/**\n * Find all the iframes in the document and cover them with high z-index\n * transparent divs.\n */\nIFrameTarp.prototype.cover = function () {\n  var iframes = document.getElementsByTagName(\"iframe\");\n  for (var i = 0; i < iframes.length; i++) {\n    var iframe = iframes[i];\n    var pos = utils.findPos(iframe),\n      x = pos.x,\n      y = pos.y,\n      width = iframe.offsetWidth,\n      height = iframe.offsetHeight;\n    var div = document.createElement(\"div\");\n    div.style.position = \"absolute\";\n    div.style.left = x + 'px';\n    div.style.top = y + 'px';\n    div.style.width = width + 'px';\n    div.style.height = height + 'px';\n    div.style.zIndex = 999;\n    document.body.appendChild(div);\n    this.tarps.push(div);\n  }\n};\n\n/**\n * Remove all the iframe covers. You should call this in a mouseup handler.\n */\nIFrameTarp.prototype.uncover = function () {\n  for (var i = 0; i < this.tarps.length; i++) {\n    this.tarps[i].parentNode.removeChild(this.tarps[i]);\n  }\n  this.tarps = [];\n};\nexport default IFrameTarp;","map":{"version":3,"names":["utils","IFrameTarp","tarps","prototype","cover","iframes","document","getElementsByTagName","i","length","iframe","pos","findPos","x","y","width","offsetWidth","height","offsetHeight","div","createElement","style","position","left","top","zIndex","body","appendChild","push","uncover","parentNode","removeChild"],"sources":["/Users/fneffati/Documents/Classes/TBRTD/frontEnd/node_modules/dygraphs/src/iframe-tarp.js"],"sourcesContent":["/**\n * To create a \"drag\" interaction, you typically register a mousedown event\n * handler on the element where the drag begins. In that handler, you register a\n * mouseup handler on the window to determine when the mouse is released,\n * wherever that release happens. This works well, except when the user releases\n * the mouse over an off-domain iframe. In that case, the mouseup event is\n * handled by the iframe and never bubbles up to the window handler.\n *\n * To deal with this issue, we cover iframes with high z-index divs to make sure\n * they don't capture mouseup.\n *\n * Usage:\n * element.addEventListener('mousedown', function() {\n *   var tarper = new IFrameTarp();\n *   tarper.cover();\n *   var mouseUpHandler = function() {\n *     ...\n *     window.removeEventListener(mouseUpHandler);\n *     tarper.uncover();\n *   };\n *   window.addEventListener('mouseup', mouseUpHandler);\n * });\n *\n * @constructor\n */\nimport * as utils from './dygraph-utils';\n\nfunction IFrameTarp() {\n  /** @type {Array.<!HTMLDivElement>} */\n  this.tarps = [];\n}\n\n/**\n * Find all the iframes in the document and cover them with high z-index\n * transparent divs.\n */\nIFrameTarp.prototype.cover = function() {\n  var iframes = document.getElementsByTagName(\"iframe\");\n  for (var i = 0; i < iframes.length; i++) {\n    var iframe = iframes[i];\n    var pos = utils.findPos(iframe),\n        x = pos.x,\n        y = pos.y,\n        width = iframe.offsetWidth,\n        height = iframe.offsetHeight;\n\n    var div = document.createElement(\"div\");\n    div.style.position = \"absolute\";\n    div.style.left = x + 'px';\n    div.style.top = y + 'px';\n    div.style.width = width + 'px';\n    div.style.height = height + 'px';\n    div.style.zIndex = 999;\n    document.body.appendChild(div);\n    this.tarps.push(div);\n  }\n};\n\n/**\n * Remove all the iframe covers. You should call this in a mouseup handler.\n */\nIFrameTarp.prototype.uncover = function() {\n  for (var i = 0; i < this.tarps.length; i++) {\n    this.tarps[i].parentNode.removeChild(this.tarps[i]);\n  }\n  this.tarps = [];\n};\n\nexport default IFrameTarp;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,KAAK,MAAM,iBAAiB;AAExC,SAASC,UAAUA,CAAA,EAAG;EACpB;EACA,IAAI,CAACC,KAAK,GAAG,EAAE;AACjB;;AAEA;AACA;AACA;AACA;AACAD,UAAU,CAACE,SAAS,CAACC,KAAK,GAAG,YAAW;EACtC,IAAIC,OAAO,GAAGC,QAAQ,CAACC,oBAAoB,CAAC,QAAQ,CAAC;EACrD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,OAAO,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IACvC,IAAIE,MAAM,GAAGL,OAAO,CAACG,CAAC,CAAC;IACvB,IAAIG,GAAG,GAAGX,KAAK,CAACY,OAAO,CAACF,MAAM,CAAC;MAC3BG,CAAC,GAAGF,GAAG,CAACE,CAAC;MACTC,CAAC,GAAGH,GAAG,CAACG,CAAC;MACTC,KAAK,GAAGL,MAAM,CAACM,WAAW;MAC1BC,MAAM,GAAGP,MAAM,CAACQ,YAAY;IAEhC,IAAIC,GAAG,GAAGb,QAAQ,CAACc,aAAa,CAAC,KAAK,CAAC;IACvCD,GAAG,CAACE,KAAK,CAACC,QAAQ,GAAG,UAAU;IAC/BH,GAAG,CAACE,KAAK,CAACE,IAAI,GAAGV,CAAC,GAAG,IAAI;IACzBM,GAAG,CAACE,KAAK,CAACG,GAAG,GAAGV,CAAC,GAAG,IAAI;IACxBK,GAAG,CAACE,KAAK,CAACN,KAAK,GAAGA,KAAK,GAAG,IAAI;IAC9BI,GAAG,CAACE,KAAK,CAACJ,MAAM,GAAGA,MAAM,GAAG,IAAI;IAChCE,GAAG,CAACE,KAAK,CAACI,MAAM,GAAG,GAAG;IACtBnB,QAAQ,CAACoB,IAAI,CAACC,WAAW,CAACR,GAAG,CAAC;IAC9B,IAAI,CAACjB,KAAK,CAAC0B,IAAI,CAACT,GAAG,CAAC;EACtB;AACF,CAAC;;AAED;AACA;AACA;AACAlB,UAAU,CAACE,SAAS,CAAC0B,OAAO,GAAG,YAAW;EACxC,KAAK,IAAIrB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACN,KAAK,CAACO,MAAM,EAAED,CAAC,EAAE,EAAE;IAC1C,IAAI,CAACN,KAAK,CAACM,CAAC,CAAC,CAACsB,UAAU,CAACC,WAAW,CAAC,IAAI,CAAC7B,KAAK,CAACM,CAAC,CAAC,CAAC;EACrD;EACA,IAAI,CAACN,KAAK,GAAG,EAAE;AACjB,CAAC;AAED,eAAeD,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}