{"ast":null,"code":"/**\n * @license\n * Copyright 2012 Dan Vanderkam (danvdk@gmail.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n/*global Dygraph:false */\n\n/*\n\nCurrent bits of jankiness:\n- Direct layout access\n- Direct area access\n\n*/\n\n\"use strict\";\n\n/**\n * Draws the gridlines, i.e. the gray horizontal & vertical lines running the\n * length of the chart.\n *\n * @constructor\n */\nvar grid = function () {};\ngrid.prototype.toString = function () {\n  return \"Gridline Plugin\";\n};\ngrid.prototype.activate = function (g) {\n  return {\n    willDrawChart: this.willDrawChart\n  };\n};\ngrid.prototype.willDrawChart = function (e) {\n  // Draw the new X/Y grid. Lines appear crisper when pixels are rounded to\n  // half-integers. This prevents them from drawing in two rows/cols.\n  var g = e.dygraph;\n  var ctx = e.drawingContext;\n  var layout = g.layout_;\n  var area = e.dygraph.plotter_.area;\n  function halfUp(x) {\n    return Math.round(x) + 0.5;\n  }\n  function halfDown(y) {\n    return Math.round(y) - 0.5;\n  }\n  var x, y, i, ticks;\n  if (g.getOptionForAxis('drawGrid', 'y')) {\n    var axes = [\"y\", \"y2\"];\n    var strokeStyles = [],\n      lineWidths = [],\n      drawGrid = [],\n      stroking = [],\n      strokePattern = [];\n    for (var i = 0; i < axes.length; i++) {\n      drawGrid[i] = g.getOptionForAxis('drawGrid', axes[i]);\n      if (drawGrid[i]) {\n        strokeStyles[i] = g.getOptionForAxis('gridLineColor', axes[i]);\n        lineWidths[i] = g.getOptionForAxis('gridLineWidth', axes[i]);\n        strokePattern[i] = g.getOptionForAxis('gridLinePattern', axes[i]);\n        stroking[i] = strokePattern[i] && strokePattern[i].length >= 2;\n      }\n    }\n    ticks = layout.yticks;\n    ctx.save();\n    // draw grids for the different y axes\n    ticks.forEach(tick => {\n      if (!tick.has_tick) return;\n      var axis = tick.axis;\n      if (drawGrid[axis]) {\n        ctx.save();\n        if (stroking[axis]) {\n          if (ctx.setLineDash) ctx.setLineDash(strokePattern[axis]);\n        }\n        ctx.strokeStyle = strokeStyles[axis];\n        ctx.lineWidth = lineWidths[axis];\n        x = halfUp(area.x);\n        y = halfDown(area.y + tick.pos * area.h);\n        ctx.beginPath();\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + area.w, y);\n        ctx.stroke();\n        ctx.restore();\n      }\n    });\n    ctx.restore();\n  }\n\n  // draw grid for x axis\n  if (g.getOptionForAxis('drawGrid', 'x')) {\n    ticks = layout.xticks;\n    ctx.save();\n    var strokePattern = g.getOptionForAxis('gridLinePattern', 'x');\n    var stroking = strokePattern && strokePattern.length >= 2;\n    if (stroking) {\n      if (ctx.setLineDash) ctx.setLineDash(strokePattern);\n    }\n    ctx.strokeStyle = g.getOptionForAxis('gridLineColor', 'x');\n    ctx.lineWidth = g.getOptionForAxis('gridLineWidth', 'x');\n    ticks.forEach(tick => {\n      if (!tick.has_tick) return;\n      x = halfUp(area.x + tick.pos * area.w);\n      y = halfDown(area.y + area.h);\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(x, area.y);\n      ctx.stroke();\n    });\n    if (stroking) {\n      if (ctx.setLineDash) ctx.setLineDash([]);\n    }\n    ctx.restore();\n  }\n};\ngrid.prototype.destroy = function () {};\nexport default grid;","map":{"version":3,"names":["grid","prototype","toString","activate","g","willDrawChart","e","dygraph","ctx","drawingContext","layout","layout_","area","plotter_","halfUp","x","Math","round","halfDown","y","i","ticks","getOptionForAxis","axes","strokeStyles","lineWidths","drawGrid","stroking","strokePattern","length","yticks","save","forEach","tick","has_tick","axis","setLineDash","strokeStyle","lineWidth","pos","h","beginPath","moveTo","lineTo","w","stroke","restore","xticks","destroy"],"sources":["/Users/fneffati/Documents/Classes/TBENVDASH/frontEnd/tbenv/node_modules/dygraphs/src/plugins/grid.js"],"sourcesContent":["/**\n * @license\n * Copyright 2012 Dan Vanderkam (danvdk@gmail.com)\n * MIT-licenced: https://opensource.org/licenses/MIT\n */\n/*global Dygraph:false */\n\n/*\n\nCurrent bits of jankiness:\n- Direct layout access\n- Direct area access\n\n*/\n\n\"use strict\";\n\n/**\n * Draws the gridlines, i.e. the gray horizontal & vertical lines running the\n * length of the chart.\n *\n * @constructor\n */\nvar grid = function() {\n};\n\ngrid.prototype.toString = function() {\n  return \"Gridline Plugin\";\n};\n\ngrid.prototype.activate = function(g) {\n  return {\n    willDrawChart: this.willDrawChart\n  };\n};\n\ngrid.prototype.willDrawChart = function(e) {\n  // Draw the new X/Y grid. Lines appear crisper when pixels are rounded to\n  // half-integers. This prevents them from drawing in two rows/cols.\n  var g = e.dygraph;\n  var ctx = e.drawingContext;\n  var layout = g.layout_;\n  var area = e.dygraph.plotter_.area;\n\n  function halfUp(x)  { return Math.round(x) + 0.5; }\n  function halfDown(y){ return Math.round(y) - 0.5; }\n\n  var x, y, i, ticks;\n  if (g.getOptionForAxis('drawGrid', 'y')) {\n    var axes = [\"y\", \"y2\"];\n    var strokeStyles = [], lineWidths = [], drawGrid = [], stroking = [], strokePattern = [];\n    for (var i = 0; i < axes.length; i++) {\n      drawGrid[i] = g.getOptionForAxis('drawGrid', axes[i]);\n      if (drawGrid[i]) {\n        strokeStyles[i] = g.getOptionForAxis('gridLineColor', axes[i]);\n        lineWidths[i] = g.getOptionForAxis('gridLineWidth', axes[i]);\n        strokePattern[i] = g.getOptionForAxis('gridLinePattern', axes[i]);\n        stroking[i] = strokePattern[i] && (strokePattern[i].length >= 2);\n      }\n    }\n    ticks = layout.yticks;\n    ctx.save();\n    // draw grids for the different y axes\n    ticks.forEach(tick => {\n      if (!tick.has_tick) return;\n      var axis = tick.axis;\n      if (drawGrid[axis]) {\n        ctx.save();\n        if (stroking[axis]) {\n          if (ctx.setLineDash) ctx.setLineDash(strokePattern[axis]);\n        }\n        ctx.strokeStyle = strokeStyles[axis];\n        ctx.lineWidth = lineWidths[axis];\n\n        x = halfUp(area.x);\n        y = halfDown(area.y + tick.pos * area.h);\n        ctx.beginPath();\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + area.w, y);\n        ctx.stroke();\n\n        ctx.restore();\n      }\n    });\n    ctx.restore();\n  }\n\n  // draw grid for x axis\n  if (g.getOptionForAxis('drawGrid', 'x')) {\n    ticks = layout.xticks;\n    ctx.save();\n    var strokePattern = g.getOptionForAxis('gridLinePattern', 'x');\n    var stroking = strokePattern && (strokePattern.length >= 2);\n    if (stroking) {\n      if (ctx.setLineDash) ctx.setLineDash(strokePattern);\n    }\n    ctx.strokeStyle = g.getOptionForAxis('gridLineColor', 'x');\n    ctx.lineWidth = g.getOptionForAxis('gridLineWidth', 'x');\n    ticks.forEach(tick => {\n      if (!tick.has_tick) return;\n      x = halfUp(area.x + tick.pos * area.w);\n      y = halfDown(area.y + area.h);\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(x, area.y);\n      ctx.stroke();\n    });\n    if (stroking) {\n      if (ctx.setLineDash) ctx.setLineDash([]);\n    }\n    ctx.restore();\n  }\n};\n\ngrid.prototype.destroy = function() {\n};\n\nexport default grid;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}